<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/20/2013 1:53:01 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="JWOLFITZ-IT"
  DTS:CreatorName="DUNE\jwolfisz"
  DTS:DTSID="{AECC43B8-2424-4D58-99D3-85277536CAEA}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="2057"
  DTS:ObjectName="Stock"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="669"
  DTS:VersionGUID="{A2526D12-AAB5-4C04-AC94-7163C6A3D8CE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DuneSMTP]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{03B84837-DF59-43B0-88DA-B888F574C100}"
      DTS:ObjectName="DuneSMTP">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=smtp-relay.dune.co.uk;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{6D873247-A7AE-474C-8930-3550602FAC0E}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\Bisdw-cl01\FTP\TestData\Partner\Source\ED\ST_EDCON_SA_2016-01-01_10.36_ItemTest.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DATE"
              DTS:DTSID="{7663901C-0D59-4C7B-8D93-A6FF66FF54DE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="STORE"
              DTS:DTSID="{4021683B-3296-4D65-8849-068A9A4A483A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ITEM"
              DTS:DTSID="{46AE19AA-8CE1-46BD-8AE0-801AF8387784}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ONHAND_QTY"
              DTS:DTSID="{94965300-3F10-415D-B853-1EDDCCB2595F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="INTRANSIT_QTY"
              DTS:DTSID="{C00CC0FE-A718-4553-943E-482A86E062D9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="NET_ONHAND_QTY"
              DTS:DTSID="{1BC24DB7-5459-4B65-B9ED-812AE37732BD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FP_MD"
              DTS:DTSID="{18029F9B-64A0-49FF-A041-9B31C419CB2C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="COST_VALUE"
              DTS:DTSID="{C912B3A9-0AD1-4FDA-B598-18E1E151088C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RETAIL_VALUE"
              DTS:DTSID="{D9322511-45CF-4198-AEC1-B561501C8F48}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DUNE_UNIQUE_ID"
              DTS:DTSID="{C3EDD0F7-EC3E-4CFD-BAFA-13EDC2E76CAC}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Stock_File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{CD9C31C0-1259-4892-B64B-9C53DE688667}"
      DTS:ObjectName="Stock_File">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::File_Name]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DATE"
              DTS:DTSID="{C4D1BC3D-5E95-4AA0-9A2F-F1D2FE0D3E3E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="STORE"
              DTS:DTSID="{383C73DB-897E-49A8-9536-978FC04589ED}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ITEM"
              DTS:DTSID="{B1C54F8A-D5F8-4016-8AC1-CC4144D94EA1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ONHAND_QTY"
              DTS:DTSID="{46EA0286-18D8-4FE7-9F48-012EDD9D1F54}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="INTRANSIT_QTY"
              DTS:DTSID="{7F480680-44FA-4190-942D-984AE6EE1EA0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="NET_ONHAND_QTY"
              DTS:DTSID="{7C6BDC63-D413-4705-B25B-99205B8BBC1C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FP_MD"
              DTS:DTSID="{EA7550C5-07CA-47E4-9C2D-E42DFD994300}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="COST_VALUE"
              DTS:DTSID="{9744ECD7-3F05-4651-87F6-06CB8CB798B8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RETAIL_VALUE"
              DTS:DTSID="{DB8A141D-98DE-4E4F-9A0E-47F8C97BB3EC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DUNE_UNIQUE_ID"
              DTS:DTSID="{A7822EFB-3A04-426A-82ED-FDCB5FB22E91}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Stock_File 1]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{4CAB9328-1E0B-45B7-AC76-C9561515E1A6}"
      DTS:ObjectName="Stock_File 1">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::File_Name]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DATE"
              DTS:DTSID="{476A8C8B-2335-4419-B201-738BCA34E0E8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="STORE"
              DTS:DTSID="{D831EF00-6A17-4B17-838F-E95E29620434}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ITEM"
              DTS:DTSID="{022A79BA-E4A9-4144-9ADB-AB95FE84B358}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ONHAND_QTY"
              DTS:DTSID="{A1142DAD-3580-4EE4-BED4-0EDEB99C54A6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="INTRANSIT_QTY"
              DTS:DTSID="{E58A2938-752D-49B2-B1C8-1D22E0AE8619}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="NET_ONHAND_QTY"
              DTS:DTSID="{AD0D2B93-C409-47B6-B1EC-214C8E926DDD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FP_MD"
              DTS:DTSID="{A11BB32C-9F52-4BB4-A016-716CE2C27404}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="COST_VALUE"
              DTS:DTSID="{73B60E2F-4C69-4296-9E42-DB30FCFE1BD4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RETAIL_VALUE"
              DTS:DTSID="{28821577-4036-4B30-8B24-7F8CBD5E68C2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DUNE_UNIQUE_ID"
              DTS:DTSID="{8656B485-0348-46FB-8926-13F78492B360}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3B051AF8-E833-4154-A658-C7B558EB90DC}"
      DTS:ObjectName="PartnerCode">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0AD4B2BA-1D27-48C5-8AB1-BFC1BDD51FEF}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Data_Error">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AFF040DA-6381-46CD-86F1-EE8E12B81FD7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Duplicate_Item_Dim_ID">
      <DTS:VariableValue
        DTS:DataType="3">-1111111111</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EBBEBF2A-3467-4667-8C87-2DA7E7F43BF5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessageOutput">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A79D56BC-5B9D-4CDC-A832-4156784B7D58}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Error_Messages">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6AE64B92-FC10-41C5-B477-8AB427717488}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="SUBSTRING( @[User::FilePartnerCode] ,4,2)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePartnerCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3056B60C-0113-46DE-9A0E-AC1ECFE47A54}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::FilePath]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">\\Bisdw-cl01\FTP\TestData\Partner\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B25DA268-59D2-498A-9183-223B58537E0B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="File_Name">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8710DFCB-15AB-4D79-89EF-A2B58CC541EC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::SourceFolder] +  @[$Package::PartnerCode]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullPartnerPath">
      <DTS:VariableValue
        DTS:DataType="8">\\Bisdw-cl01\FTP\TestData\Partner\Source\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41B6F5CD-24D4-4BF1-A349-170658D0AA6A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ArchiveFolder] +  @[$Package::PartnerCode] + &quot;\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Full_Archive_Path">
      <DTS:VariableValue
        DTS:DataType="8">\\Bisdw-cl01\FTP\TestData\Partner\Archive\\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6B2B8B47-5392-480D-9C97-97DC6F01133B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ErrorFolder] +  @[$Package::PartnerCode] + &quot;\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Full_Error_Path">
      <DTS:VariableValue
        DTS:DataType="8">\\Bisdw-cl01\FTP\TestData\Partner\Errors\\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{22F49671-3E7A-4CDF-8022-7974C0B50622}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IP_Table_Name">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{10480441-34BC-44B8-AA15-30BFB293BC73}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Last_Id">
      <DTS:VariableValue
        DTS:DataType="17">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{25F73F70-614A-4B2B-AE17-5B72D2075687}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Load_Id">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A499EFED-6933-457C-A736-B4B04574D713}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Load_Log_Id">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8DDAF1D9-BDDF-4672-A76E-65A686972CA1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PartnerName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{74BB8CD1-20F1-4758-938F-53E5398E9A63}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Partner_Code">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6E4F3EBA-E0B1-4594-ADDB-F80C84DCA447}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Partner_Id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B212EB0F-65EF-40EF-8CDF-10BCE199B016}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Process_Date">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{25E16F1E-FE2F-498E-BC4F-62A63BD224D9}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Row_Count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BEC4E6D2-F016-408A-8801-F60A5B021572}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Source">
      <DTS:VariableValue
        DTS:DataType="8">Apparel</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{69133A8E-797F-468E-A75C-ACB63785FD75}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::File_Name]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Stock_File_FQN">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3716E636-29A3-4EDE-B1C9-C4BB6AF5B1FD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullPartnerPath] + &quot;\\&quot; + &quot;Stock.RAW&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Stock_RAW_FQN">
      <DTS:VariableValue
        DTS:DataType="8">\\Bisdw-cl01\FTP\TestData\Partner\Source\\Stock.RAW</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{83A40A0E-45B3-4CE1-A5C0-CFFE2BA15E0F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Success">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0DD7F7FF-F7BC-4A8B-B93C-5BBF4A29D337}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Table_Name">
      <DTS:VariableValue
        DTS:DataType="8">Stock</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1CDA1D84-58AF-40AB-ADD2-866734F7DFA0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Technical_Contacts">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CDCCF8EF-7577-46AB-A37C-634156C9FB93}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="UnknownItem_Dim_Id">
      <DTS:VariableValue
        DTS:DataType="3">-2147483648</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\ETL"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{878BF380-49AC-408B-BAF4-C3D357380B2F}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="ETL">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\ETL\Foreach Stock File (ST)"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{7D8BDD0E-0B21-48D3-BCDB-F9F17BF0433F}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Stock File (ST)">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{C2173CDF-D464-4E1B-A656-63569B2A3E97}"
            DTS:ObjectName="{C2173CDF-D464-4E1B-A656-63569B2A3E97}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[User::FullPartnerPath]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="\\Bisdw-cl01\FTP\TestData\Partner\Source\" />
                <FEFEProperty
                  FileSpec="ST_*.csv" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Stock File (ST)\Archive File"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{9799D333-2EAD-4813-BEF6-009BDD94FA50}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Archive File"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_9b03573421024ad7ad5dc22949fda44c"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Full_Archive_Path,User::Stock_File_FQN">
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9b03573421024ad7ad5dc22949fda44c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9b03573421024ad7ad5dc22949fda44c")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9b03573421024ad7ad5dc22949fda44c.Properties.Settings.get_Default():ST_9b03573421024ad7ad5dc22949fda44c.Properties.Sett" +
    "ings")]

namespace ST_9b03573421024ad7ad5dc22949fda44c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_9b03573421024ad7ad5dc22949fda44c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            Variables vars = null;

            /* Archive the file to archive folder */
            Dts.VariableDispenser.LockOneForRead("User::Full_Archive_Path", ref vars);
            string ArchiveFolder = vars["User::Full_Archive_Path"].Value.ToString();
            vars.Unlock();

            Dts.VariableDispenser.LockOneForRead("User::Stock_File_FQN", ref vars);
            string StoresFileFQN = vars["User::Stock_File_FQN"].Value.ToString();
            vars.Unlock();

            string FileName = Path.GetFileName(StoresFileFQN);

            string ArchiveFileFQN = ArchiveFolder + FileName;

            try
            {
                /* Check if file exists */
                if (File.Exists(ArchiveFileFQN))
                {
                    /* Add ticks to the end to make it unique if it exists */
                    File.Move(ArchiveFileFQN, ArchiveFileFQN + "." + DateTime.Now.Ticks.ToString());
                }

                File.Move(StoresFileFQN, ArchiveFileFQN);

                /* dont set success if its failed before */
                if (Dts.TaskResult != (int)ScriptResults.Failure)
                {
                    Dts.TaskResult = (int)ScriptResults.Success;
                }
            }
            catch (IOException e)
            {
                Dts.Events.FireError(-1, "Error Archive", "Unable to move or rename file. Erorr Message: " + e.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_9b03573421024ad7ad5dc22949fda44c</msb:CodeName>
		<msb:ProjectId>{C51432DE-6978-4E0D-B6A0-C151679CC3FC}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_9b03573421024ad7ad5dc22949fda44c</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9b03573421024ad7ad5dc22949fda44c.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_9b03573421024ad7ad5dc22949fda44c.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8878498F-B4A3-4B5A-9BE4-106C5A171AAC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9b03573421024ad7ad5dc22949fda44c</RootNamespace>
    <AssemblyName>ST_9b03573421024ad7ad5dc22949fda44c</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9b03573421024ad7ad5dc22949fda44c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9b03573421024ad7ad5dc22949fda44c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9b03573421024ad7ad5dc22949fda44c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9b03573421024ad7ad5dc22949fda44c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9b03573421024ad7ad5dc22949fda44c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_9b03573421024ad7ad5dc22949fda44c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKglU1YAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAXjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABAxAABLAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAZBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABA
MQAAAAAAAEgAAAACAAUAuCIAAFgOAAABAAAAAAAAAAAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgAaAQAAAgAAERQKAigWAAAKbxcAAApycwAAcBIAbxgAAAoGcnMA
AHBvGQAACm8aAAAKbxsAAAoLBm8cAAAKAigWAAAKbxcAAApyowAAcBIAbxgAAAoGcqMAAHBvGQAA
Cm8aAAAKbxsAAAoMBm8cAAAKCCgdAAAKDQcJKB4AAAoTBBEEKB8AAAosKhEEEQRyzQAAcCggAAAK
EwYSBighAAAKEwcSBygiAAAKKCMAAAooJAAACggRBCgkAAAKAigWAAAKbyUAAAoXLgwCKBYAAAoW
byYAAArePhMFAigWAAAKbycAAAoVctEAAHBy7QAAcBEFbygAAAooHgAACnJLAQBwFm8pAAAKJgIo
FgAAChdvJgAACt4AAigWAAAKFm8mAAAKKgAAARAAAAAAeABXzwA+JgAAAR4CKCoAAAoqAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABIBAAAI34AALQE
AACUBgAAI1N0cmluZ3MAAAAASAsAAFABAAAjVVMAmAwAABAAAAAjR1VJRAAAAKgMAACwAQAAI0Js
b2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAJgAAAAUAAAAGAAAACQAAAAEAAAAqAAAA
AgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAK
AN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUC
cAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAG
AAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F/QQSAEUF/QQSAF4F
/QQGAJQFigUGAKUFugAGALMFigUGAL8FugAGANoFugAOAAMGFAEGACIGugAGAEIGigUAAAAAAQAA
AAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAA
EQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBY
IAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMg
AAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACAPQhAAAAAIYYvAEbAAIAAAAB
ADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgA
gQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8
ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAvBZIA4QBPBZcA6QBnBZ8A8QBwBaUACQB6BakA6QCDBRsA
+QCZBa0AAQGsBbIACQG4BbgAEQHIBb0AEQHQBcMAGQF6BakAAQGsBccACQHgBc4A2QDlBdQA2QD0
BV0A2QAXBtgAKQEsBqkAIQE4Bt4AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAGgBLgAjAGgB
LgBjAI4BLgALAPcALgATAD8BLgAzAD8BLgArAGgBLgA7AG4BLgBDAGgBLgBbAIUBQwBrAFMASQCT
AIAAYQCbAFMAgwCrAFMAdQDnAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUA
AQAEAAUAAgAFAAcABIAAAAEAAACtFlRnAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAA
AAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAAAAAAAAoA3gQAAAAA
AAAAAAEAAABOBgAABQAEAAAAADxNb2R1bGU+AFNUXzliMDM1NzM0MjEwMjRhZDdhZDVkYzIyOTQ5
ZmRhNDRjLmRsbABSZXNvdXJjZXMAU1RfOWIwMzU3MzQyMTAyNGFkN2FkNWRjMjI5NDlmZGE0NGMu
UHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUXzliMDM1NzM0MjEwMjRhZDdhZDVkYzIy
OTQ5ZmRhNDRjAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1
bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBD
dWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBT
dWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5
Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNz
ZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
LmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2Rl
bABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlRGlzcGVuc2VyAGdldF9WYXJpYWJsZURpc3BlbnNlcgBW
YXJpYWJsZXMATG9ja09uZUZvclJlYWQAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3Ry
aW5nAFVubG9jawBTeXN0ZW0uSU8AUGF0aABHZXRGaWxlTmFtZQBTdHJpbmcAQ29uY2F0AEZpbGUA
RXhpc3RzAERhdGVUaW1lAGdldF9Ob3cAZ2V0X1RpY2tzAEludDY0AE1vdmUAZ2V0X1Rhc2tSZXN1
bHQAc2V0X1Rhc2tSZXN1bHQARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfRXZlbnRzAEV4Y2VwdGlv
bgBnZXRfTWVzc2FnZQBGaXJlRXJyb3IASU9FeGNlcHRpb24AU1RfOWIwMzU3MzQyMTAyNGFkN2Fk
NWRjMjI5NDlmZGE0NGMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8A
OQBiADAAMwA1ADcAMwA0ADIAMQAwADIANABhAGQANwBhAGQANQBkAGMAMgAyADkANAA5AGYAZABh
ADQANABjAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAvVQBzAGUA
cgA6ADoARgB1AGwAbABfAEEAcgBjAGgAaQB2AGUAXwBQAGEAdABoAAApVQBzAGUAcgA6ADoAUwB0
AG8AYwBrAF8ARgBpAGwAZQBfAEYAUQBOAAADLgAAG0UAcgByAG8AcgAgAEEAcgBjAGgAaQB2AGUA
AF1VAG4AYQBiAGwAZQAgAHQAbwAgAG0AbwB2AGUAIABvAHIAIAByAGUAbgBhAG0AZQAgAGYAaQBs
AGUALgAgAEUAcgBvAHIAcgAgAE0AZQBzAHMAYQBnAGUAOgAgAAABAAAAAMmZ775rV0BDvXaP7kyL
/VQACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgA
EhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAAAAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYg
AgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMAAAEEIAASbQQgABJxByACAQ4QEnUFIAESeRwDIAAc
AyAADgQAAQ4OBQACDg4OBAABAg4FAAARgIkDIAAKBgADDg4ODgUAAgEODgMgAAgFIAASgJEIIAUC
CA4ODggPBwgSdQ4ODg4SgJkRgIkKRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzliMDM1NzM0MjEwMjRh
ZDdhZDVkYzIyOTQ5ZmRhNDRjAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTMAAAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAAAA4MQAAAAAAAAAAAABOMQAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAQDEAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAFRnrRYAAAEAVGetFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA5AGIAMAAzADUANwAzADQAMgAxADAAMgA0AGEAZAA3AGEAZAA1AGQAYwAyADIAOQA0ADkAZgBk
AGEANAA0AGMAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA4ADAA
NQAuADIANgA0ADUAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA5
AGIAMAAzADUANwAzADQAMgAxADAAMgA0AGEAZAA3AGEAZAA1AGQAYwAyADIAOQA0ADkAZgBkAGEA
NAA0AGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMwAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwA5AGIAMAAzADUANwAzADQAMgAxADAAMgA0AGEAZAA3AGEAZAA1
AGQAYwAyADIAOQA0ADkAZgBkAGEANAA0AGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AOQBiADAAMwA1ADcAMwA0ADIAMQAwADIANABhAGQANwBhAGQANQBk
AGMAMgAyADkANAA5AGYAZABhADQANABjAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA1ADgAMAA1AC4AMgA2ADQANQAyAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADgAMAA1AC4AMgA2ADQANQAyAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Stock File (ST)\Data_Error False"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Expression Task"
              DTS:DTSID="{C964AEB8-4C5B-4802-A86D-916B8C15A9CF}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Data_Error False"
              DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; � 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::Data_Error] = false" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Stock File (ST)\Email and Archive"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{F4EE2A3C-93FE-4B4A-9139-D3CD6421CD26}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Email and Archive"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c98f359c2129446398acfbbbfb6c7957"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c98f359c2129446398acfbbbfb6c7957.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B5BDEF23-52E3-406A-B533-398DA477FDE9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c98f359c2129446398acfbbbfb6c7957</RootNamespace>
    <AssemblyName>ST_c98f359c2129446398acfbbbfb6c7957</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Data.OleDb;
using System.Net;
using System.Text;
using System.IO;
#endregion

namespace ST_c98f359c2129446398acfbbbfb6c7957
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            Variables vars = null;

            /* SMTP Variables */
            Dts.VariableDispenser.LockOneForRead("$Project::SMTPServerName", ref vars);
            string SMTPServerName = vars["$Project::SMTPServerName"].Value.ToString();
            vars.Unlock();

            Dts.VariableDispenser.LockOneForRead("$Project::SMTPPort", ref vars);
            int SMTPPort = int.Parse(vars["$Project::SMTPPort"].Value.ToString());
            vars.Unlock();

            Dts.VariableDispenser.LockOneForRead("$Project::SMTPRequiresSSL", ref vars);
            bool SMTPRequiresSSL = bool.Parse(vars["$Project::SMTPRequiresSSL"].Value.ToString());
            vars.Unlock();

            Dts.VariableDispenser.LockOneForRead("$Project::SMTPRequiresAuthentication", ref vars);
            bool SMTPRequiresAuthentication = bool.Parse(vars["$Project::SMTPRequiresAuthentication"].Value.ToString());
            vars.Unlock();
            /* SMTP Variables End */

            Dts.VariableDispenser.LockOneForRead("$Project::PartnerAlertEmailList", ref vars);
            string ApparelAlertEmailList = vars["$Project::PartnerAlertEmailList"].Value.ToString();
            vars.Unlock();    
            
            Dts.VariableDispenser.LockOneForRead("User::ErrorMessageOutput", ref vars);
            string ErrorMessageOutput = vars["User::ErrorMessageOutput"].Value.ToString();
            vars.Unlock();

            Dts.VariableDispenser.LockOneForRead("User::Stock_File_FQN", ref vars);
            string StoresFileFQN = vars["User::Stock_File_FQN"].Value.ToString();
            vars.Unlock();
            
            string FileName = Path.GetFileName(StoresFileFQN);

            SmtpClient SMTPServer = new SmtpClient(SMTPServerName, SMTPPort);
            SMTPServer.DeliveryMethod = SmtpDeliveryMethod.Network;
            SMTPServer.EnableSsl = SMTPRequiresSSL;
            SMTPServer.UseDefaultCredentials = SMTPRequiresAuthentication;

            StringBuilder EmailBody = new StringBuilder();
            EmailBody.AppendLine("Error processing data file " + FileName + ". The following errors have occurred. Please correct and resend file.");
            EmailBody.AppendLine();
            EmailBody.AppendLine(ErrorMessageOutput);

            MailMessage EmailMessage = new MailMessage();
            string EmailSubject = "Dune Data Warehouse Data Load Failure";
            string[] emailList = ApparelAlertEmailList.Split(new char[] { ',' });
            foreach (string e in emailList)
            {
                EmailMessage.To.Add(e);
            }
            EmailMessage.From = new MailAddress("PartnerAdministrator@thedunegroup.com");
            EmailMessage.Body = EmailBody.ToString();
            EmailMessage.Subject = EmailSubject;
            EmailMessage.Attachments.Add(new Attachment(StoresFileFQN));
            EmailMessage.IsBodyHtml = false;

            try
            {
                SMTPServer.Send(EmailMessage);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (SmtpFailedRecipientsException e)
            {
                Dts.Events.FireError(-1, "Email", "Unable to send email to all receipients. Error Message: " + e.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            catch (SmtpException e)
            {
                Dts.Events.FireError(-1, "Email", "Unable to send email. Error Message: " + e.Message + "\r\n" + e.InnerException, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

            /* Get rid of the email so we can move the file */
            EmailMessage.Dispose();

            /* Archive the file to errors folder */
            Dts.VariableDispenser.LockOneForRead("User::Full_Error_Path", ref vars);
            string ErrorFolder = vars["User::Full_Error_Path"].Value.ToString();
            vars.Unlock();

            string ErrorFileFQN = ErrorFolder + FileName;

            try
            {

                /* Check if file exists */
                if (File.Exists(ErrorFileFQN))
                {
                    /* Add ticks to the end to make it unique if it exists */
                    File.Move(ErrorFileFQN, ErrorFileFQN + "." + DateTime.Now.Ticks.ToString());
                }

                File.Move(StoresFileFQN, ErrorFileFQN);

                /* dont set success if its failed before */
                if (Dts.TaskResult != (int)ScriptResults.Failure)
                {
                    Dts.TaskResult = (int)ScriptResults.Success;
                }
            }
            catch (IOException e)
            {
                Dts.Events.FireError(-1, "Error Archive", "Unable to move or rename file. Erorr Message: " + e.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_c98f359c2129446398acfbbbfb6c7957</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{C5A9FB68-0131-47D7-AC6F-50BE3EC447F4}</msb:ProjectId>
		<msb:DisplayName>ST_c98f359c2129446398acfbbbfb6c7957</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c98f359c2129446398acfbbbfb6c7957.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c98f359c2129446398acfbbbfb6c7957.Properties.Settings.get_Default():ST_c98f359c2129446398acfbbbfb6c7957.Properties.Sett" +
    "ings")]

namespace ST_c98f359c2129446398acfbbbfb6c7957.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c98f359c2129446398acfbbbfb6c7957")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c98f359c2129446398acfbbbfb6c7957")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c98f359c2129446398acfbbbfb6c7957.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c98f359c2129446398acfbbbfb6c7957.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c98f359c2129446398acfbbbfb6c7957.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c98f359c2129446398acfbbbfb6c7957.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c98f359c2129446398acfbbbfb6c7957.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c98f359c2129446398acfbbbfb6c7957.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAILFhVgAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAYjoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABA6AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaBoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
OgAAAAAAAEgAAAACAAUA3CQAAHwUAAABAAAAAAAAAFg5AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwDtAwAAAQAAERQKAigQAAAKbxEAAApyAQAAcBIAbxIA
AAoGcgEAAHBvEwAACm8UAAAKbxUAAAoLBm8WAAAKAigQAAAKbxEAAApyMwAAcBIAbxIAAAoGcjMA
AHBvEwAACm8UAAAKbxUAAAooFwAACgwGbxYAAAoCKBAAAApvEQAACnJZAABwEgBvEgAACgZyWQAA
cG8TAAAKbxQAAApvFQAACigYAAAKDQZvFgAACgIoEAAACm8RAAAKco0AAHASAG8SAAAKBnKNAABw
bxMAAApvFAAACm8VAAAKKBgAAAoTBAZvFgAACgIoEAAACm8RAAAKctcAAHASAG8SAAAKBnLXAABw
bxMAAApvFAAACm8VAAAKBm8WAAAKAigQAAAKbxEAAApyFwEAcBIAbxIAAAoGchcBAHBvEwAACm8U
AAAKbxUAAAoTBQZvFgAACgIoEAAACm8RAAAKckkBAHASAG8SAAAKBnJJAQBwbxMAAApvFAAACm8V
AAAKEwYGbxYAAAoRBigZAAAKEwcHCHMaAAAKEwgRCBZvGwAAChEICW8cAAAKEQgRBG8dAAAKcx4A
AAoTCREJcnMBAHARB3KrAQBwKB8AAApvIAAACiYRCW8hAAAKJhEJEQVvIAAACiZzIgAAChMKcjgC
AHATCxeNKAAAASUWHyydbyMAAAoTDRYTDisbEQ0RDpoTDxEKbyQAAAoRD28lAAAKEQ4XWBMOEQ4R
DY5pMt0RCnKEAgBwcyYAAApvJwAAChEKEQlvFQAACm8oAAAKEQoRC28pAAAKEQpvKgAAChEGcysA
AApvLAAAChEKFm8tAAAKEQgRCm8uAAAKAigQAAAKFm8vAAAK3ZoAAAATEAIoEAAACm8wAAAKFXLQ
AgBwctwCAHAREG8xAAAKKDIAAApyTgMAcBZvMwAACiYCKBAAAAoXby8AAAreXBMRAigQAAAKbzAA
AAoVctACAHAajRkAAAElFnJQAwBwoiUXERFvMQAACqIlGHKcAwBwoiUZERFvNAAACqIoNQAACnJO
AwBwFm8zAAAKJgIoEAAAChdvLwAACt4AEQpvNgAACgIoEAAACm8RAAAKcqIDAHASAG8SAAAKBnKi
AwBwbxMAAApvFAAACm8VAAAKBm8WAAAKEQcoMgAAChMMEQwoNwAACiwqEQwRDHLOAwBwKDgAAAoT
EhISKDkAAAoTExITKDoAAAooHwAACig7AAAKEQYRDCg7AAAKAigQAAAKbzwAAAoXLgwCKBAAAAoW
by8AAArePhMUAigQAAAKbzAAAAoVctIDAHBy7gMAcBEUbzEAAAooMgAACnJOAwBwFm8zAAAKJgIo
EAAAChdvLwAACt4AKgAAAAEoAAAAAGACGnoCPhMAAAEAAGACGrgCXBQAAAEAAFYDWK4DPhYAAAEe
Aig9AAAKKh4CKD4AAAoqrn4BAAAELR5yTAQAcNADAAACKD8AAApvQAAACnNBAAAKgAEAAAR+AQAA
BCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoQgAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAADgFAAAjfgAApAUAAOQHAAAjU3RyaW5ncwAAAACIDQAA
wAQAACNVUwBIEgAAEAAAACNHVUlEAAAAWBIAACQCAAAjQmxvYgAAAAAAAAACAAABVx2iCQkDAAAA
+gEzABYAAAEAAAA0AAAABQAAAAYAAAAJAAAAAQAAAEIAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQA
AAABAAAAAQAAAAQAAAABAAAAAQAAAAAAYQQBAAAAAAAGANECIwYGAGADIwYGAB0CEAYPAJcGAAAG
AEoCDQUGALQCDQUGAJUCDQUGAEcDDQUGAPECDQUGAAoDDQUGAGECDQUGAHwCkwMKACUD4QMKAI4B
4QMOANUGLgESAKIHUQQGAK0FuAcSANsAUQQSAHcFUQQSAFYFUQQGACUBrwQGAEoFRwAGAL8ErwQG
AAACEAYGAF8HrwQGAL8FQwYGAJwF+AQSANABOwQSADECOwQSAKoB4wQGAOUBIwYKACkE4QMOAOcF
LgEOAOcALgEGAA4ArwQGANAErwQGALYDRwASAKwAUQQGAK8DrwQGAKgFrwQSAB8FUQQSABQHUQQS
ADUFUQQSAK0HUQQGAAEACgQKAM8F4QMGAIsFrwQGABQBRwAGABQArwQGAFkBrwQGAPAArwQGANkH
DQUAAAAAPgAAAAAAAQABAAEAEADYBBoAOQABAAEAAAAQAEoGpgZlAAEAAwAAARAA3wamBnkAAwAH
AAMBAAAoBwAAXQAEAAoAEQDEBCgBEQB+ASwBEQC/ADABBgZwADQBVoAMBzcBVoBeATcBUCAAAAAA
hgDeBAYAAQB0JAAAAACGGAMGBgABAHwkAAAAAIMYAwYGAAEAhCQAAAAAkwi7BTsBAQCwJAAAAACT
CGYBQAEBALckAAAAAJMIcgFFAQEAvyQAAAAAlgh4B0sBAgDGJAAAAACGGAMGBgACAM4kAAAAAJEY
CQZQAQIAAAABAIgDCQADBgEAEQADBgYAGQADBgoAKQADBhAAMQADBhAAOQADBhAAQQADBhAASQAD
BhAAUQADBhAAWQADBhAAYQADBhAAaQADBgYAwQADBgYA6QADBhUA+QADBgYAcQAgBzwAAQHjBUIA
CQGBAEgAeQCmBFAAEQF+A1cAyQCtA1sAeQC7AwYAGQHKAV8AIQHKAWQAKQEZAWkAgQADBm4AgQCZ
AHQAgQCYBHsAgQDyBnsAiQADBgYAOQFYB4AAiQBOAYcAiQBOAY0AkQADBgYAOQFyB5IAkQCVBZkA
SQGQABAAUQEDBhAAkQC2BJ8AkQDMBxAAkQBmBxAAkQA2B6YAYQEDBhAADACQALUAkQCJBHsAgQCU
ALsAAQGTBwEAAQFGB8EAeQHPAFsAOQFYB8cAcQH5Bc0AeQFkBdYAOQFYB9wAkQDCAQYAgQFRB2QA
qQDEB+IAqQDoBucAiQGtA1sAgQGOA+sAAQGEB/EAcQADBgYAyQADBgYAkQECAfUAkQHVB/4A0QAD
BgQB8QADBgYACAAUAB4BCAAYACMBKQBzAIsBLgALAGMBLgATAGwBLgAbAIsBLgAjAJQBLgArAL0B
LgAzAL0BLgA7AL0BLgBDAJQBLgBLAMMBLgBTAL0BLgBbANoBQwBjACMBSQBzAIsBYQB7ACMBYwBr
ACMBGwADAAEABAADAAAAvwVUAQAAhgFZAQAAfAdeAQIABAADAAIABQAFAAEABgAFAAIABwAHAKwA
BIAAAAEAAABYGAE/AAAAAAAAGgAAAAQAAAAAAAAAAAAAAAwBeAAAAAAACwAAAAAAAAAAAAAAFQHC
AwAAAAALAAAAAAAAAAAAAAAVAVEAAAAAAAQAAAAAAAAAAAAAAAwBrwQAAAAAAAAAAAEAAABUBgAA
BQACAAAAAAAAQ29sbGVjdGlvbmAxAEludDMyAEludDY0AFNUX2M5OGYzNTljMjEyOTQ0NjM5OGFj
ZmJiYmZiNmM3OTU3ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFn
ZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBMb2NrT25lRm9yUmVhZABBZGQAU2VuZABzZXRfRGVsaXZl
cnlNZXRob2QAU210cERlbGl2ZXJ5TWV0aG9kAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBN
YWlsTWVzc2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBG
aWxlAEdldEZpbGVOYW1lAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
QXBwZW5kTGluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VD
dWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFz
ZQBEaXNwb3NlAFBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUA
dmFsdWUATW92ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFBhdGgAVW5sb2Nr
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2RlbABTY3JpcHRPYmpl
Y3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU3lzdGVtLk5ldC5NYWlsAFNUX2M5OGYzNTlj
MjEyOTQ0NjM5OGFjZmJiYmZiNmM3OTU3LmRsbABzZXRfSXNCb2R5SHRtbABzZXRfRW5hYmxlU3Ns
AGdldF9JdGVtAFN5c3RlbQBzZXRfRnJvbQBFbnVtAHJlc291cmNlTWFuAEJvb2xlYW4AU2NyaXB0
TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBNYWlsQWRkcmVzc0NvbGxlY3Rpb24AQXR0YWNobWVudENvbGxlY3Rpb24ASU9FeGNl
cHRpb24AU210cEV4Y2VwdGlvbgBnZXRfSW5uZXJFeGNlcHRpb24AU210cEZhaWxlZFJlY2lwaWVu
dHNFeGNlcHRpb24AZ2V0X1RvAEN1bHR1cmVJbmZvAENoYXIAU3RyaW5nQnVpbGRlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIAZ2V0X1ZhcmlhYmxlRGlzcGVuc2VyAEZp
cmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF9jOThmMzU5YzIxMjk0NDYzOThhY2Zi
YmJmYjZjNzk1Ny5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
U1RfYzk4ZjM1OWMyMTI5NDQ2Mzk4YWNmYmJiZmI2Yzc5NTcuUHJvcGVydGllcwBWYXJpYWJsZXMA
U2V0dGluZ3MAZ2V0X1RpY2tzAHNldF9Vc2VEZWZhdWx0Q3JlZGVudGlhbHMAU3VjY2VzcwBNYWls
QWRkcmVzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0F0dGFjaG1lbnRzAGdldF9FdmVudHMA
RXhpc3RzAENvbmNhdABPYmplY3QAc2V0X1N1YmplY3QAU3BsaXQAZ2V0X0RlZmF1bHQAZ2V0X1Rh
c2tSZXN1bHQAc2V0X1Rhc2tSZXN1bHQAU210cENsaWVudABBdHRhY2htZW50AFN5c3RlbS5UZXh0
AGdldF9Ob3cAc2V0X0JvZHkAZ2V0X0Fzc2VtYmx5AAAAADEkAFAAcgBvAGoAZQBjAHQAOgA6AFMA
TQBUAFAAUwBlAHIAdgBlAHIATgBhAG0AZQAAJSQAUAByAG8AagBlAGMAdAA6ADoAUwBNAFQAUABQ
AG8AcgB0AAAzJABQAHIAbwBqAGUAYwB0ADoAOgBTAE0AVABQAFIAZQBxAHUAaQByAGUAcwBTAFMA
TAAASSQAUAByAG8AagBlAGMAdAA6ADoAUwBNAFQAUABSAGUAcQB1AGkAcgBlAHMAQQB1AHQAaABl
AG4AdABpAGMAYQB0AGkAbwBuAAA/JABQAHIAbwBqAGUAYwB0ADoAOgBQAGEAcgB0AG4AZQByAEEA
bABlAHIAdABFAG0AYQBpAGwATABpAHMAdAAAMVUAcwBlAHIAOgA6AEUAcgByAG8AcgBNAGUAcwBz
AGEAZwBlAE8AdQB0AHAAdQB0AAApVQBzAGUAcgA6ADoAUwB0AG8AYwBrAF8ARgBpAGwAZQBfAEYA
UQBOAAA3RQByAHIAbwByACAAcAByAG8AYwBlAHMAcwBpAG4AZwAgAGQAYQB0AGEAIABmAGkAbABl
ACAAAICLLgAgAFQAaABlACAAZgBvAGwAbABvAHcAaQBuAGcAIABlAHIAcgBvAHIAcwAgAGgAYQB2
AGUAIABvAGMAYwB1AHIAcgBlAGQALgAgAFAAbABlAGEAcwBlACAAYwBvAHIAcgBlAGMAdAAgAGEA
bgBkACAAcgBlAHMAZQBuAGQAIABmAGkAbABlAC4AAEtEAHUAbgBlACAARABhAHQAYQAgAFcAYQBy
AGUAaABvAHUAcwBlACAARABhAHQAYQAgAEwAbwBhAGQAIABGAGEAaQBsAHUAcgBlAABLUABhAHIA
dABuAGUAcgBBAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByAEAAdABoAGUAZAB1AG4AZQBnAHIAbwB1
AHAALgBjAG8AbQAAC0UAbQBhAGkAbAAAcVUAbgBhAGIAbABlACAAdABvACAAcwBlAG4AZAAgAGUA
bQBhAGkAbAAgAHQAbwAgAGEAbABsACAAcgBlAGMAZQBpAHAAaQBlAG4AdABzAC4AIABFAHIAcgBv
AHIAIABNAGUAcwBzAGEAZwBlADoAIAAAAQBLVQBuAGEAYgBsAGUAIAB0AG8AIABzAGUAbgBkACAA
ZQBtAGEAaQBsAC4AIABFAHIAcgBvAHIAIABNAGUAcwBzAGEAZwBlADoAIAAABQ0ACgAAK1UAcwBl
AHIAOgA6AEYAdQBsAGwAXwBFAHIAcgBvAHIAXwBQAGEAdABoAAADLgAAG0UAcgByAG8AcgAgAEEA
cgBjAGgAaQB2AGUAAF1VAG4AYQBiAGwAZQAgAHQAbwAgAG0AbwB2AGUAIABvAHIAIAByAGUAbgBh
AG0AZQAgAGYAaQBsAGUALgAgAEUAcgBvAHIAcgAgAE0AZQBzAHMAYQBnAGUAOgAgAABxUwBUAF8A
YwA5ADgAZgAzADUAOQBjADIAMQAyADkANAA0ADYAMwA5ADgAYQBjAGYAYgBiAGIAZgBiADYAYwA3
ADkANQA3AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAGtTAcJ0
rsBIsUWmQZR6UQwABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEgBxUSPQ4IAgIODg4SQRJFEkkO
Dh0OCA4STRJREVUKElkFIAASgIEFIAASgIUHIAIBDhASPQYgARKAiRwDIAAcAyAADgQAAQgOBAAB
Ag4EAAEODgUgAgEOCAYgAQERgJkEIAEBAgYAAw4ODg4FIAESRQ4EIAASRQYgAR0OHQMFIAASgKUG
IAEBEoCpBSAAEoCtCBUSgLUBEoCxBSABARMABSABARJJBSAAEoC5BQACDg4OCCAFAggODg4IBSAA
EoC9BQABDh0cBAAAEVUDIAAKBQACAQ4OAyAACAgAARKAyRGAzQUgABKA0QcgAgEOEoDRCLd6XFYZ
NOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEmkDBhJtAwYSEAIGCAMGERQEAAASaQQAABJtBQABARJt
BAAAEhADAAABBAgAEmkECAASbQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTVF9jOThmMzU5YzIxMjk0NDYzOThhY2ZiYmJmYjZjNzk1NwAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDEzAABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQAALQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AAA4OgAAAAAAAAAAAABSOgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARDoAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQABP1gYAAABAAE/WBg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfAGMAOQA4AGYAMwA1ADkAYwAyADEAMgA5ADQANAA2ADMAOQA4AGEAYwBmAGIAYgBiAGYAYgA2
AGMANwA5ADUANwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADIA
MwAyAC4AMQA2ADEAMgA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
AGMAOQA4AGYAMwA1ADkAYwAyADEAMgA5ADQANAA2ADMAOQA4AGEAYwBmAGIAYgBiAGYAYgA2AGMA
NwA5ADUANwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AYwA5ADgAZgAzADUAOQBjADIAMQAyADkANAA0ADYAMwA5ADgAYQBjAGYAYgBiAGIA
ZgBiADYAYwA3ADkANQA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGMAOQA4AGYAMwA1ADkAYwAyADEAMgA5ADQANAA2ADMAOQA4AGEAYwBmAGIAYgBiAGYA
YgA2AGMANwA5ADUANwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANgAyADMAMgAuADEANgAxADIAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANgAyADMAMgAuADEANgAxADIAOQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABkOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Stock File (ST)\Log File Failed"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7EED7D5B-6EC6-4A08-B972-D7822B8795B9}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log File Failed"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="EXEC dbo.EtlProcessLogInsert&#xA;    @EtlName = 'Partner_Stock_to_DW'&#xA;   , -- varchar(1000)&#xA;    @EtlFileName = ?&#xA;   , -- varchar(1000)&#xA;    @EtlMessage = 'There has been an error while processing the file.' -- varchar(1000)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::Stock_File_FQN"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Stock File (ST)\Log File Process Starting"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{0A47C13E-8A73-43D6-8BF8-05B08ACADDDA}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log File Process Starting"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="EXEC dbo.EtlProcessLogInsert&#xA;    @EtlName = 'Partner_Stock_to_DW'&#xA;   , -- varchar(1000)&#xA;    @EtlFileName = ?&#xA;   , -- varchar(1000)&#xA;    @EtlMessage = 'Starting to process file.' -- varchar(1000)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::Stock_File_FQN"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Stock File (ST)\Log File Success"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{9637E527-52DA-40D2-A8D8-B53ADEBEEE0E}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log File Success"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="&#xA;EXEC dbo.EtlProcessLogInsert&#xA;    @EtlName = 'Partner_Stock_to_DW'&#xA;   , -- varchar(1000)&#xA;    @EtlFileName = ?&#xA;   , -- varchar(1000)&#xA;    @EtlMessage = 'File has been staged successfully.' -- varchar(1000)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::Stock_File_FQN"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Stock File (ST)\Merge Stock AP"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{EAE7C07D-FC57-422A-8AED-F8A018456028}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge Stock AP"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:EventHandlers>
                <DTS:EventHandler
                  DTS:refId="Package\ETL\Foreach Stock File (ST)\Merge Stock AP.EventHandlers[OnError]"
                  DTS:CreationName="OnError"
                  DTS:DTSID="{F1D41DA7-88A7-425E-A1FB-517E02957F1F}"
                  DTS:EventID="0"
                  DTS:EventName="OnError"
                  DTS:LocaleID="-1">
                  <DTS:Variables>
                    <DTS:Variable
                      DTS:CreationName=""
                      DTS:Description="The propagate property of the event"
                      DTS:DTSID="{E5832AF5-7A7A-4023-B179-CE3E04539924}"
                      DTS:IncludeInDebugDump="6789"
                      DTS:Namespace="System"
                      DTS:ObjectName="Propagate">
                      <DTS:VariableValue
                        DTS:DataType="11">0</DTS:VariableValue>
                    </DTS:Variable>
                  </DTS:Variables>
                  <DTS:Executables>
                    <DTS:Executable
                      DTS:refId="Package\ETL\Foreach Stock File (ST)\Merge Stock AP.EventHandlers[OnError]\Execute SQL Task"
                      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      DTS:Description="Execute SQL Task"
                      DTS:DTSID="{A78CDAB8-C0D6-4B07-8C0A-9A162BA3B720}"
                      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
                      DTS:LocaleID="-1"
                      DTS:ObjectName="Execute SQL Task"
                      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                      <DTS:Variables />
                      <DTS:ObjectData>
                        <SQLTask:SqlTaskData
                          SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                          SQLTask:SqlStatementSource="exec usp_Error_StockFile ?,?,?,?&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="0"
                            SQLTask:DtsVariableName="User::File_Name"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="1"
                            SQLTask:DtsVariableName="User::FilePartnerCode"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="2"
                            SQLTask:DtsVariableName="User::Error_Messages"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                          <SQLTask:ParameterBinding
                            SQLTask:ParameterName="3"
                            SQLTask:DtsVariableName="User::Process_Date"
                            SQLTask:ParameterDirection="Input"
                            SQLTask:DataType="129"
                            SQLTask:ParameterSize="-1" />
                        </SQLTask:SqlTaskData>
                      </DTS:ObjectData>
                    </DTS:Executable>
                  </DTS:Executables>
                </DTS:EventHandler>
              </DTS:EventHandlers>
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="EXEC dbo.StockToDW&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Stock File (ST)\RAW Stock"
              DTS:CreationName="SSIS.Pipeline.3"
              DTS:DelayValidation="True"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{72f83d09-dde4-426d-a222-0e6c55c02851}"
              DTS:ExecutableType="SSIS.Pipeline.3"
              DTS:LocaleID="-1"
              DTS:ObjectName="RAW Stock"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number"
                      componentClassID="DTS.ManagedComponentWrapper.3"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Add Line Number"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    Int64 LineNumber = 2;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.LineNumber = LineNumber;
        LineNumber = LineNumber + 1;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_97f9afba2c71434e9ca1f27947ce7580.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E8F34C04-5670-4F54-8A17-C7C18BBF55C4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_97f9afba2c71434e9ca1f27947ce7580</RootNamespace>
    <AssemblyName>SC_97f9afba2c71434e9ca1f27947ce7580</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 LineNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool LineNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Settings.get_Default():SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Sett" +
    "ings")]

namespace SC_97f9afba2c71434e9ca1f27947ce7580.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_97f9afba2c71434e9ca1f27947ce7580</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_97f9afba2c71434e9ca1f27947ce7580</msb:DisplayName>
		<msb:ProjectId>{B83913D7-0C65-4083-ADEB-75D50861AD9E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_97f9afba2c71434e9ca1f27947ce7580.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_97f9afba2c71434e9ca1f27947ce7580")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_97f9afba2c71434e9ca1f27947ce7580")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_97f9afba2c71434e9ca1f27947ce7580.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_97f9afba2c71434e9ca1f27947ce7580.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAF+aylIAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAvjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGgxAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
MQAAAAAAAEgAAAACAAUAcCIAAPgOAAABAAAAAAAAALghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMOAAAGfQEAAAQCAnMPAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbwwAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACipyAwJ7AwAABG8KAAAGAgJ7AwAABBdqWH0DAAAEKj4CGGp9AwAABAIoAQAA
BioqAgMEBSgTAAAKKjoCFgOMGAAAASgUAAAKKloDLAgCFigVAAAKKnIRAABwcxYAAAp6HgIoFwAA
CioeAigYAAAKKjoCKBkAAAoCA30EAAAEKjoCKBkAAAoCA30FAAAEKh4CKBkAAAoqAAATMAIALQAA
AAEAABF+BgAABC0gcq4AAHDQBwAAAigbAAAKbxwAAApzHQAACgoGgAYAAAR+BgAABCoafgcAAAQq
HgKABwAABCoafggAAAQqLnMVAAAGgAgAAAQqHgIoIAAACioAAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAsBQAAI34AAJgFAACgBgAAI1N0cmluZ3MA
AAAAOAwAACABAAAjVVMAWA0AABAAAAAjR1VJRAAAAGgNAACQAQAAI0Jsb2IAAAAAAAAAAgAAAVcV
ogEJAQAAAPolMwAWAAABAAAAIAAAAAgAAAAIAAAAFgAAAA8AAAAgAAAADwAAAAEAAAADAAAABQAA
AAYAAAABAAAABAAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0A
BgCFAc0ACgBZAkgCCgCKAnUCCgBjA0kDCgCOA3wDCgClA3wDCgDCA3wDCgDhA3wDCgD6A3wDCgAT
BHwDCgAuBHwDCgBJBHwDCgBiBHwDCgCbBHsECgC7BHsECgD9BBQBCgAEBRQBBgAtBc0ACgBUBRQB
CgBrBRQBCgCYBYUFCgC1BRQBCgC6BRQBCgDeBXwDDgAKBvQFDgAjBvQFCgA4BnsEAAAAAAEAAAAA
AAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAADAAUAAQAQAEsAAAAJAAQACQABABAAWAAAAA0A
BAAOAAEAEABkAAAADQAFAA8AAAAQAG4AeAANAAYAEAAAARAApwB4ABEACAAUAAYAWAATAAYAZAAX
AAEAywEvAAEAOAJSAAEAOAJSABEAaQJcABEAlgJgABEA2gJ+AFAgAAAAAIYYTwEbAAEAcCAAAAAA
xgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYBtAEpAAYAqiAAAAAAxgDWARsABwCyIAAAAADG
AOEBGwAHALogAAAAAMYAtAEpAAcA1yAAAAAAhhhPARsACADnIAAAAACGGE8BMgAIAPIgAAAAAIYI
7QE8AAsAASEAAAAAhgj8AUEADAAYIQAAAACGABICRgANACAhAAAAAIYAGgJGAA0AKCEAAAAAhhhP
AVYADQA3IQAAAACGGE8BVgAOAEYhAAAAAIMYTwEbAA8AUCEAAAAAkwimAmQADwCJIQAAAACTCLoC
aQAPAJAhAAAAAJMIxgJuAA8AmCEAAAAAlgjqAoIAEACrIQAAAACGGE8BGwAQAJ8hAAAAAJEYUwbV
ABAAAAABAP4CAAACAAYDAAADABADAAAEABcDAAABABADAAABACEDAAABACEDAAABABADAAACACUD
AAADABcDAAABADkDAAABADkDAAABAD8DAAABAD8DAAABADkDSQBPAYwAUQBPAYwAWQBPAYwAYQBP
AYwAaQBPAYwAcQBPAYwAeQBPAYwAgQBPAYwAiQBPAYwAkQBPAYwAmQBPAZEAoQBPARsACQBPARsA
qQAVBZYACQAcBZ0AuQBPARsACQDWARsACQDhARsAEQBPATIAEQBaBagAEQBjBZEAyQBPAYwAEQAS
AkYAEQAaAkYAGQBPARsA0QBPARsA2QDMBa4A2QDnBbUAOQBPAboA8QBPAcYAAQFPARsAIQBPARsA
LgAbAEoBLgBjAHABLgALANkALgATACEBLgAjAEoBLgArAEoBLgAzACEBLgA7AFABLgBDAEoBLgBb
AGcBYwCDAKMAaQDzAMwAiQDzAMwA4wDTAKMAAQH7AKMAwQAEAAEABwADAAgABQAAAMsBSgAAACYC
TgAAAFkCdAAAANICeQAAAPYChwABAAoAAwABAAsABQACABEABwACABIACQABABMACQACABQACwAE
gAAAAQAAAP8TL1QAAAAAAADZBAAACwAAAAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsB
AAAAAAQAAAAAAAAAAAAAAAoAFAEAAAAACwAAAAAAAAAAAAAAAQBVAQAAAAAAAAAAAQAAAFoGAAAA
AAAAADxNb2R1bGU+AFNDXzk3ZjlhZmJhMmM3MTQzNGU5Y2ExZjI3OTQ3Y2U3NTgwLmRsbABVc2Vy
Q29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBS
ZXNvdXJjZXMAU0NfOTdmOWFmYmEyYzcxNDM0ZTljYTFmMjc5NDdjZTc1ODAuUHJvcGVydGllcwBT
ZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVt
AE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3Rv
cgBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXRO
YW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cATGluZU51bWJlcgBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9MaW5lTnVtYmVyAHNl
dF9MaW5lTnVtYmVyX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AExpbmVOdW1iZXJfSXNOdWxs
AFBhcmVudENvbXBvbmVudABTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJj
ZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0
X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJ
bnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRw
dXRNYXAAUm93AEJ1ZmZlckNvbHVtbkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9u
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9u
QXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ185N2Y5YWZi
YTJjNzE0MzRlOWNhMWYyNzk0N2NlNzU4MABTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMA
R2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBJ
bnQ2NABzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3lzdGVtLkRp
YWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU0NfOTdmOWFmYmEyYzcxNDM0ZTljYTFm
Mjc5NDdjZTc1ODAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAAAPSQBuAHAAdQB0
ACAAMAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBl
ACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUA
ZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAHFTAEMAXwA5
ADcAZgA5AGEAZgBiAGEAMgBjADcAMQA0ADMANABlADkAYwBhADEAZgAyADcAOQA0ADcAYwBlADcA
NQA4ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAH3AaZW7SiZH
kSzgS4EWFIUACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMGEhgDIAABCSAEAQgOEhUSGQUgAQESEAIG
CgkgAwESFR0IEhkEIAEBCgQgAQECAyAAAgMoAAoDKAACAwYSBQUgAQESBQMGEh0DBhIhBAAAEh0E
AAASIQUAAQESIQQIABIdBAgAEiEDBhIgBAAAEiAECAASIAQgAQEOBCABAQgGIAICDhFZBSABHQgI
BAEAAAAFIAIBCBwGAAESbRFxBCAAEnUGIAIBDhJ1BAcBEh0FIAEBEX0IAQACAAAAAAADAAABRwEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVU
IEZyYW1ld29yayA0KAEAI1NDXzk3ZjlhZmJhMmM3MTQzNGU5Y2ExZjI3OTQ3Y2U3NTgwAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTMAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEAkDEAAAAAAAAAAAAArjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAxAAAAAAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAC9U/xMAAAEAL1T/Ez8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwA5ADcAZgA5AGEAZgBiAGEAMgBjADcAMQA0ADMANABlADkAYwBhADEAZgAyADcAOQA0ADcAYwBl
ADcANQA4ADAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQAxADEA
OQAuADIAMQA1ADUAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA5
ADcAZgA5AGEAZgBiAGEAMgBjADcAMQA0ADMANABlADkAYwBhADEAZgAyADcAOQA0ADcAYwBlADcA
NQA4ADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMwAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAEMAXwA5ADcAZgA5AGEAZgBiAGEAMgBjADcAMQA0ADMANABlADkAYwBh
ADEAZgAyADcAOQA0ADcAYwBlADcANQA4ADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBDAF8AOQA3AGYAOQBhAGYAYgBhADIAYwA3ADEANAAzADQAZQA5AGMAYQAx
AGYAMgA3ADkANAA3AGMAZQA3ADUAOAAwAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA1ADEAMQA5AC4AMgAxADUANQAxAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADEAMQA5AC4AMgAxADUANQAxAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAMAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_97f9afba2c71434e9ca1f27947ce7580</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">2cafb31362db6a47f02497c8957616be</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number.Outputs[Output 0].Columns[LineNumber]"
                              dataType="i8"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number.Outputs[Output 0].Columns[LineNumber]"
                              name="LineNumber" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error"
                      componentClassID="DTS.ManagedComponentWrapper.3"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Check Store Error"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ErrorsBuffer ErrorsBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ErrorsBuffer)
        {
            ErrorsBuffer.SetEndOfRowset();
            ErrorsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Errors"))
            {
                ErrorsBuffer = new ErrorsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Globalization;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    string File_Name;
    string ErrorFormat;
    bool hasErrors = false;
    string ErrorMessageOutput;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        IDTSVariables100 vars = null;

        VariableDispenser.LockOneForRead("User::File_Name", ref vars);
        File_Name = vars["User::File_Name"].Value.ToString();
        vars.Unlock();

        ErrorFormat = "Line {0}: {1} ({2})";
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (hasErrors)
        {
            IDTSVariables100 vars = null;
            VariableDispenser.LockOneForWrite("User::Data_Error", ref vars);
            vars["User::Data_Error"].Value = true;
            vars.Unlock();

            VariableDispenser.LockOneForWrite("User::ErrorMessageOutput", ref vars);
            vars["User::ErrorMessageOutput"].Value = ErrorMessageOutput;
            vars.Unlock();
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string errorMessage;

        /* Store Number */
        bool storeNumberHasError = false;
        string storeNumberErrorText = "";
        if (Row.DWStoreNumber_IsNull)
        {
            storeNumberHasError = true;
            storeNumberErrorText = "The store does not exist in the data warehouse.";
        }

        if (storeNumberHasError)
        {
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, storeNumberErrorText, Row.STORE_IsNull ? "" : Row.STORE);
            AddErrorRow(Row, errorMessage);
        }
        /* Store Number End */        
    }

    public void AddErrorRow(Input0Buffer Row, string ErrorMessage)
    {
        hasErrors = true;

        ErrorsBuffer.AddRow();
        ErrorMessageOutput += ErrorMessage + "  \n\n";
        ErrorsBuffer.StoreCode = Row.STORE_IsNull ? "" : Row.STORE;
        ErrorsBuffer.FileName = File_Name;
        ErrorsBuffer.ErrorMessage = ErrorMessage;
    }

}


]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 LineNumber
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[0]);
        }
    }
    public bool LineNumber_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String DWStoreNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool DWStoreNumber_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String STORE
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool STORE_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ParsedStore
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ParsedStore_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime ParsedDate
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ParsedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParsedItem
    {
        set
        {
            this[5] = value;
        }
    }
    public bool ParsedItem_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParsedFpMd
    {
        set
        {
            this[6] = value;
        }
    }
    public bool ParsedFpMd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ParsedIntransitQty
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ParsedIntransitQty_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ParsedOnHandQty
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParsedOnHandQty_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal ParsedRetailPrice
    {
        set
        {
            this[9] = value;
        }
    }
    public bool ParsedRetailPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal ParsedItemCost2
    {
        set
        {
            this[10] = value;
        }
    }
    public bool ParsedItemCost2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ErrorsBuffer: ScriptBuffer

{
    public ErrorsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FileName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StoreCode
    {
        set
        {
            this[1] = value;
        }
    }
    public bool StoreCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorMessage
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ErrorMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Settings.get_Default():SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Sett" +
    "ings")]

namespace SC_528447c4e1574b4a8f6e406cb90712e2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_528447c4e1574b4a8f6e406cb90712e2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_528447c4e1574b4a8f6e406cb90712e2</msb:CodeName>
		<msb:ProjectId>{8DA29315-E1D9-45A0-A969-BE3DCC89F5C9}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_528447c4e1574b4a8f6e406cb90712e2</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_528447c4e1574b4a8f6e406cb90712e2.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_528447c4e1574b4a8f6e406cb90712e2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_528447c4e1574b4a8f6e406cb90712e2")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_528447c4e1574b4a8f6e406cb90712e2.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{9200834C-8192-4034-AF1D-ED80F977E054}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_528447c4e1574b4a8f6e406cb90712e2</RootNamespace><AssemblyName>SC_DD383B7989DA44AE9F495F0CA1FFF924</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_DD383B7989DA44AE9F495F0CA1FFF924.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMitVlcAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAA3kEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIxBAABPAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5CEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
QQAAAAAAAEgAAAACAAUAYCYAACwbAAABAAAAAAAAAKglAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMxAAAGfQEAAAQCAnMyAAAGfQIAAAQqAzAE
AE8AAAAAAAAABHIBAABwGm8OAAAKLBUCBQIDKA8AAAoOBHMOAAAGbwcAAAYFbxAAAAosIwICewQA
AAQXWH0EAAAEAnsEAAAEFzMMAm8DAAAGAigEAAAGKgYqbgJ7AwAABCwSAnsDAAAEby8AAAYCFH0D
AAAEKgAAABMwBQA9AAAAAQAAERYKKy4EBpQOBHIRAABwKBEAAAozGQIFBpoCBAaUKA8AAAoOBHMn
AAAGfQMAAAQGF1gKBgMyzgJvBgAABioGKkorBwIDbwgAAAYDbyUAAAYt8SoGKhMwAwBHAAAAAgAA
EQIoEwAAChQKAigUAAAKch8AAHASAG8VAAAKAgZyHwAAcG8WAAAKbxcAAApvGAAACn0FAAAEBm8Z
AAAKAnI/AABwfQYAAAQqABMwAwBtAAAAAgAAEQIoGgAACgJ7BwAABCxeFAoCKBQAAApyZwAAcBIA
bxsAAAoGcmcAAHBvFgAACheMHQAAAW8cAAAKBm8ZAAAKAigUAAAKcokAAHASAG8bAAAKBnKJAABw
bxYAAAoCewgAAARvHAAACgZvGQAACioAAAATMAQAUQAAAAMAABEWC3K7AABwDANvEgAABiwIFwty
vQAAcAwHLDUCewYAAAQDbw8AAAaMHgAAAQgDbxQAAAYtCANvEwAABisFcrsAAHAoHQAACgoCAwYo
DAAABioAAAADMAQAZwAAAAAAAAACF30HAAAEAnsDAAAEby4AAAYCJXsIAAAEBHIdAQBwKB4AAAp9
CAAABAJ7AwAABANvFAAABi0IA28TAAAGKwVyuwAAcG8qAAAGAnsDAAAEAnsFAAAEbygAAAYCewMA
AAQEbywAAAYqHgIoAQAABioqAgMEBSgfAAAKKlICeyAAAAoCeyEAAAoWlG8iAAAKKiICFigjAAAK
KlICeyAAAAoCeyEAAAoXlG8kAAAKKiICFygjAAAKKlICeyAAAAoCeyEAAAoYlG8kAAAKKiICGCgj
AAAKKiYCGQMoJQAACipaAywIAhkoJgAACipyJwEAcHMnAAAKejoCGgOMBwAAASglAAAKKloDLAgC
GigmAAAKKnInAQBwcycAAAp6JgIbAyglAAAKKloDLAgCGygmAAAKKnInAQBwcycAAAp6JgIcAygl
AAAKKloDLAgCHCgmAAAKKnInAQBwcycAAAp6OgIdA4wgAAABKCUAAAoqWgMsCAIdKCYAAAoqcicB
AHBzJwAACno6Ah4DjCAAAAEoJQAACipaAywIAh4oJgAACipyJwEAcHMnAAAKej4CHwkDjAgAAAEo
JQAACipeAywJAh8JKCYAAAoqcicBAHBzJwAACno+Ah8KA4wIAAABKCUAAAoqXgMsCQIfCigmAAAK
KnInAQBwcycAAAp6HgIoKAAACioeAigpAAAKKioCAwQFKB8AAAoqJgIWAyglAAAKKloDLAgCFigm
AAAKKnInAQBwcycAAAp6JgIXAyglAAAKKloDLAgCFygmAAAKKnInAQBwcycAAAp6JgIYAyglAAAK
KloDLAgCGCgmAAAKKnInAQBwcycAAAp6HgIoKgAACioeAigrAAAKKh4CKCkAAAoqOgIoLAAACgID
fQkAAAQqOgIoLAAACgIDfQoAAAQqHgIoLAAACioAAAATMAIALQAAAAQAABF+CwAABC0gcsQBAHDQ
CAAAAiguAAAKby8AAApzMAAACgoGgAsAAAR+CwAABCoafgwAAAQqHgKADAAABCoafg0AAAQqLnM4
AAAGgA0AAAQqHgIoMwAACioAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4z
MDMxOQAAAAAFAGwAAADgCQAAI34AAEwKAABsDAAAI1N0cmluZ3MAAAAAuBYAADgCAAAjVVMA8BgA
ABAAAAAjR1VJRAAAAAAZAAAsAgAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAA
JwAAAAkAAAANAAAAOQAAACwAAAAzAAAADwAAAAQAAAAEAAAAHwAAACAAAAABAAAABQAAAAEAAAAA
AAoAAQAAAAAABgD7ANoABgALAdoACgAoASEBDgBEAS8BEgCSAdoABgChAdoACgARAyEBCgDtAyEB
CgDTBsIGCgAEB+8GCgD3B90HCgAiCBAICgA5CBAICgBWCBAICgB1CBAICgCOCBAICgCnCBAICgDC
CBAICgDdCBAICgD2CBAICgAvCQ8JCgBPCQ8JCgCRCSEBCgCYCSEBBgDdCdoAFgBPCicKFgB+CicK
FgCeCicKCgDhCiEBCgDzCiEBCgAyCyEBCgBMCyEBCgBlC1ILCgCCCyEBCgCHCyEBCgCrCxAIDgDX
C8ELDgDwC8ELCgAFDA8JAAAAAAEAAAAAAAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAAFAAkA
AQAQAEsAAAAJAAkADgABABAAWAAAAAkACQAnAAEAEABlAAAADQAJADEAAQAQAHEAAAANAAoAMgAA
ABAAewCFAA0ACwAzAAABEAC0AIUAEQANADcABgBlABMABgBxABcABgBYAB8AAQBiASMAAQApAkIA
AQAzAkIAAQA/AkUAAQBJAkIAAQCyBpoAAQCyBpoAEQDjBqQAEQAQB6gAEQBUB8YAUCAAAAAAhhhc
ARsAAQBwIAAAAADGAK8BJgABAMsgAAAAAMYBvAEbAAUAzSAAAAAAgQDKARsABQDsIAAAAADGAN4B
MAAFADUhAAAAAMYB6gEbAAkANyEAAAAAxgH+ATwACQBKIQAAAADGARICPAAKAEwhAAAAAMYAXAIb
AAsAoCEAAAAAxgBnAhsACwAcIgAAAADGABICPAALAHwiAAAAAIYAcwJIAAwA7yIAAAAAhhhcARsA
DgD3IgAAAACGGFwBTwAOAAIjAAAAAIYIfwJZABEAFyMAAAAAhgiOAl0AEQAgIwAAAACGCKQCYQAR
ADUjAAAAAIYItgJdABEAPiMAAAAAhgjPAmEAEQBTIwAAAACGCNkCXQARAFwjAAAAAIYI6gJlABEA
ZiMAAAAAhgj6AmoAEgB9IwAAAACGCBoDbwATAIwjAAAAAIYIKQNqABQAoyMAAAAAhgg/A2UAFQCt
IwAAAACGCE4DagAWAMQjAAAAAIYIZANlABcAziMAAAAAhghzA2oAGADlIwAAAACGCIkDdQAZAPQj
AAAAAIYIoANqABoACyQAAAAAhgi+A3UAGwAaJAAAAACGCNIDagAcADEkAAAAAIYI9QN6AB0AQSQA
AAAAhggLBGoAHgBZJAAAAACGCCgEegAfAGkkAAAAAIYIPARqACAAgSQAAAAAhgBXBF0AIQCJJAAA
AACGAF8EXQAhAJEkAAAAAIYYXAFPACEAnCQAAAAAhgjaBWUAJACmJAAAAACGCOcFagAlAL0kAAAA
AIYI+wVlACYAxyQAAAAAhggJBmoAJwDeJAAAAACGCB4GZQAoAOgkAAAAAIYILwZqACkA/yQAAAAA
hgBHBhsAKgAHJQAAAACGAE4GGwAqAA8lAAAAAIYAXwRdACoAFyUAAAAAhhhcAZ4AKgAmJQAAAACG
GFwBngArADUlAAAAAIMYXAEbACwAQCUAAAAAkwggB6wALAB5JQAAAACTCDQHsQAsAIAlAAAAAJMI
QAe2ACwAiCUAAAAAlghkB8oALQCbJQAAAACGGFwBGwAtAI8lAAAAAJEYIAxwAS0AAAABAHgHAAAC
AIAHAAADAIoHAAAEAJEHAAABAJsHAAACAKMHAAADAK0HAAAEAJEHAAABAIoHAAABALUHAAABALUH
AAABALUHAAACAJEGAAABAIoHAAACALkHAAADAJEHAAABAM0HAAABAM0HAAABAM0HAAABAM0HAAAB
AM0HAAABAM0HAAABAM0HAAABAM0HAAABAM0HAAABAM0HAAABAM0HAAABAM0HAAABAM0HAAABAM0H
AAABAM0HAAABAM0HAAABAIoHAAACALkHAAADAJEHAAABAM0HAAABAM0HAAABAM0HAAABAM0HAAAB
AM0HAAABAM0HAAABANMHAAABANMHAAABAM0HWQBcAWUAYQBcAWUAaQBcAWUAcQBcAWUAeQBcAWUA
gQBcAWUAiQBcAWUAkQBcAWUAmQBcAWUAoQBcAWUAqQBcAXUAsQBcARsACQBcARsAuQCpCdQACQCw
CdsAKQDBCV0ACQDRCeEAyQBcARsACQBcAhsACQBoCvEA0QCPCvYA2QCuCv4A4QC3CgQBGQDBCmEA
2QDKChsACQBnAhsA0QDRCvYA4QDpCg0BuQD5ChIBuQAACyABEQBcAU8AEQCKBycBEQC5BysBKQAH
Cy8BEQAQCzQBKQAXCzkBEQAhCz4BEQAqC3UA+QBcAWUAEQBXBF0AEQBfBF0AEQBHBhsAEQBOBhsA
GQBcARsACQFcARsAEQGZC0QBEQG0C00BSQBcAVMBKQFcAWABOQFcARsAIQBcARsALgAbAOUBLgBj
AAsCLgALAHQBLgATALwBLgAjAOUBLgArAOUBLgAzALwBLgA7AOsBLgBDAOUBLgBbAAICYwCTAOwA
AwFrAewAoQGTAewAqQOLAWcByQOLAWcB6AAIARoBWwEEAAEABQAXAAgAHQAJAB8AAABrBIAAAAB2
BIQAAACIBIgAAACWBIQAAACrBIgAAACxBIQAAAC+BIgAAADKBIQAAADdBIwAAADoBIQAAAD6BIgA
AAAFBYQAAAAXBYgAAAAiBYQAAAA0BZEAAABHBYQAAABhBZEAAABxBYQAAACIBZUAAACaBYQAAACz
BZUAAADDBYQAAABdBogAAABmBoQAAAB2BogAAACABoQAAACRBogAAACeBoQAAADTBrwAAABMB8EA
AABwB88AAgAPAAMAAgAQAAUAAgARAAcAAgASAAkAAgATAAsAAgAUAA0AAQAVAA8AAQAWABEAAQAX
ABMAAQAYABUAAQAZABcAAQAaABkAAQAbABsAAQAcAB0AAQAdAB8AAQAeACEAAQAfACMAAQAgACUA
AQAhACcAAQAiACkAAQAjACsAAQAkAC0AAQAoAC8AAQApADEAAQAqADMAAQArADUAAQAsADcAAQAt
ADkAAgA0ADsAAgA1AD0AAQA2AD0AAgA3AD8ABIAAAAEAAAByF6RPAAAAAAAAbQkAAAsAAAAAAAAA
AAAAAAEAvQAAAAAABAAAAAAAAAAAAAAACgAYAQAAAAAEAAAAAAAAAAAAAAAKACEBAAAAAAsAAAAA
AAAAAAAAAAEAcQEAAAAACwAAAAAAAAAAAAAAAQAECgAAAAAAAAAAAQAAACcMAAAAAAA8TW9kdWxl
PgBTQ19ERDM4M0I3OTg5REE0NEFFOUY0OTVGMENBMUZGRjkyNC5kbGwAVXNlckNvbXBvbmVudABT
Y3JpcHRNYWluAElucHV0MEJ1ZmZlcgBFcnJvcnNCdWZmZXIAQ29ubmVjdGlvbnMAVmFyaWFibGVz
AFJlc291cmNlcwBTQ181Mjg0NDdjNGUxNTc0YjRhOGY2ZTQwNmNiOTA3MTJlMi5Qcm9wZXJ0aWVz
AFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUAU2NyaXB0Q29tcG9uZW50AFNjcmlwdEJ1ZmZlcgBtc2NvcmxpYgBTeXN0
ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAC5j
dG9yAElucHV0c0ZpbmlzaGVkAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVs
aW5lQnVmZmVyAE91dHB1dE5hbWVNYXAAUHJvY2Vzc0lucHV0AEZpbmlzaE91dHB1dHMATWFya091
dHB1dHNGaW5pc2hlZABQcmltZU91dHB1dABDcmVhdGVOZXdPdXRwdXRSb3dzAElucHV0MF9Qcm9j
ZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBGaWxlX05hbWUARXJyb3JGb3JtYXQAaGFz
RXJyb3JzAEVycm9yTWVzc2FnZU91dHB1dABQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAEFkZEVycm9y
Um93AGdldF9MaW5lTnVtYmVyAGdldF9MaW5lTnVtYmVyX0lzTnVsbABnZXRfRFdTdG9yZU51bWJl
cgBnZXRfRFdTdG9yZU51bWJlcl9Jc051bGwAZ2V0X1NUT1JFAGdldF9TVE9SRV9Jc051bGwAc2V0
X1BhcnNlZFN0b3JlAHNldF9QYXJzZWRTdG9yZV9Jc051bGwARGF0ZVRpbWUAc2V0X1BhcnNlZERh
dGUAc2V0X1BhcnNlZERhdGVfSXNOdWxsAHNldF9QYXJzZWRJdGVtAHNldF9QYXJzZWRJdGVtX0lz
TnVsbABzZXRfUGFyc2VkRnBNZABzZXRfUGFyc2VkRnBNZF9Jc051bGwAc2V0X1BhcnNlZEludHJh
bnNpdFF0eQBzZXRfUGFyc2VkSW50cmFuc2l0UXR5X0lzTnVsbABzZXRfUGFyc2VkT25IYW5kUXR5
AHNldF9QYXJzZWRPbkhhbmRRdHlfSXNOdWxsAERlY2ltYWwAc2V0X1BhcnNlZFJldGFpbFByaWNl
AHNldF9QYXJzZWRSZXRhaWxQcmljZV9Jc051bGwAc2V0X1BhcnNlZEl0ZW1Db3N0MgBzZXRfUGFy
c2VkSXRlbUNvc3QyX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AExpbmVOdW1iZXIATGluZU51
bWJlcl9Jc051bGwARFdTdG9yZU51bWJlcgBEV1N0b3JlTnVtYmVyX0lzTnVsbABTVE9SRQBTVE9S
RV9Jc051bGwAUGFyc2VkU3RvcmUAUGFyc2VkU3RvcmVfSXNOdWxsAFBhcnNlZERhdGUAUGFyc2Vk
RGF0ZV9Jc051bGwAUGFyc2VkSXRlbQBQYXJzZWRJdGVtX0lzTnVsbABQYXJzZWRGcE1kAFBhcnNl
ZEZwTWRfSXNOdWxsAFBhcnNlZEludHJhbnNpdFF0eQBQYXJzZWRJbnRyYW5zaXRRdHlfSXNOdWxs
AFBhcnNlZE9uSGFuZFF0eQBQYXJzZWRPbkhhbmRRdHlfSXNOdWxsAFBhcnNlZFJldGFpbFByaWNl
AFBhcnNlZFJldGFpbFByaWNlX0lzTnVsbABQYXJzZWRJdGVtQ29zdDIAUGFyc2VkSXRlbUNvc3Qy
X0lzTnVsbABzZXRfRmlsZU5hbWUAc2V0X0ZpbGVOYW1lX0lzTnVsbABzZXRfU3RvcmVDb2RlAHNl
dF9TdG9yZUNvZGVfSXNOdWxsAHNldF9FcnJvck1lc3NhZ2UAc2V0X0Vycm9yTWVzc2FnZV9Jc051
bGwAQWRkUm93AFNldEVuZE9mUm93c2V0AEZpbGVOYW1lAEZpbGVOYW1lX0lzTnVsbABTdG9yZUNv
ZGUAU3RvcmVDb2RlX0lzTnVsbABFcnJvck1lc3NhZ2UARXJyb3JNZXNzYWdlX0lzTnVsbABQYXJl
bnRDb21wb25lbnQAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4A
U3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNv
dXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFu
Y2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZmZXIAT3V0cHV0TWFw
AE91dHB1dHMAT3V0cHV0SURzAEJ1ZmZlcnMAUm93AEJ1ZmZlckNvbHVtbkluZGV4ZXMAdmFsdWUA
Q29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRy
aWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBTQ19ERDM4M0I3OTg5REE0NEFFOUY0OTVGMENBMUZGRjkyNABTdHJpbmcAU3Ry
aW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBnZXRfRW5kT2ZSb3dzZXQAR2V0
T3V0cHV0SUQAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUATWljcm9zb2Z0
LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
LldyYXBwZXIASURUU1ZhcmlhYmxlRGlzcGVuc2VyMTAwAGdldF9WYXJpYWJsZURpc3BlbnNlcgBJ
RFRTVmFyaWFibGVzMTAwAExvY2tPbmVGb3JSZWFkAElEVFNWYXJpYWJsZTEwMABnZXRfSXRlbQBn
ZXRfVmFsdWUAVG9TdHJpbmcAVW5sb2NrAExvY2tPbmVGb3JXcml0ZQBCb29sZWFuAHNldF9WYWx1
ZQBJbnQ2NABGb3JtYXQAQ29uY2F0AEdldEludDY0AElzTnVsbABHZXRTdHJpbmcAc2V0X0l0ZW0A
U2V0TnVsbABJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAEludDMyAFN5c3RlbS5EaWFnbm9zdGlj
cwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0
VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2Rl
bABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDXzUyODQ0N2M0ZTE1NzRiNGE4ZjZlNDA2Y2I5MDcx
MmUyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAAAPSQBuAHAAdQB0ACAAMAAADUUA
cgByAG8AcgBzAAAfVQBzAGUAcgA6ADoARgBpAGwAZQBfAE4AYQBtAGUAACdMAGkAbgBlACAAewAw
AH0AOgAgAHsAMQB9ACAAKAB7ADIAfQApAAAhVQBzAGUAcgA6ADoARABhAHQAYQBfAEUAcgByAG8A
cgAAMVUAcwBlAHIAOgA6AEUAcgByAG8AcgBNAGUAcwBzAGEAZwBlAE8AdQB0AHAAdQB0AAABAF9U
AGgAZQAgAHMAdABvAHIAZQAgAGQAbwBlAHMAIABuAG8AdAAgAGUAeABpAHMAdAAgAGkAbgAgAHQA
aABlACAAZABhAHQAYQAgAHcAYQByAGUAaABvAHUAcwBlAC4AAAkgACAACgAKAACAm0kAcwBOAHUA
bABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAg
AEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUA
IABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAcVMAQwBfADUAMgA4ADQANAA3AGMANABl
ADEANQA3ADQAYgA0AGEAOABmADYAZQA0ADAANgBjAGIAOQAwADcAMQAyAGUAMgAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAACjP4ugt3FyTYj5EwUcL4e8AAiJhF3N
gIDMkQi3elxWGTTgiQMGEhgDBhIcAyAAAQMGEhQCBggJIAQBCA4SFRIZCyAEAQgdCB0SFRIZBSAB
ARIQAgYOAgYCBiACARIQDgkgAwESFR0IEhkDIAAKAyAAAgMgAA4EIAEBDgQgAQECBSABAREdBCAB
AQgFIAEBESEDKAAKAygAAgMoAA4EKAARHQMoAAgEKAARIQMGEgUFIAEBEgUDBhIlAwYSKQQAABIl
BAAAEikFAAEBEikECAASJQQIABIpAwYSJAQAABIkBAgAEiQGIAICDhFhBSABHQgIBgACCBIZDgMH
AQgEAQAAAAQgABJpByACAQ4QEm0FIAEScRwDIAAcBAcBEm0EIAEBHAcABA4OHBwcBQcDDgIOBgAD
Dg4ODgMGEhUDBh0IBCABCggEIAECCAQgAQ4IBSACAQgcCAABEoCJEYCNBSAAEoCRByACAQ4SgJEE
BwESJQYgAQERgJkIAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDXzUyODQ0N2M0ZTE1
NzRiNGE4ZjZlNDA2Y2I5MDcxMmUyAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTQAAAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAALRBAAAAAAAAAAAAAM5BAAAAIAAA
AAAAAAAAAAAAAAAAAAAAAAAAAADAQQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxs
AAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQCkT3IXAAABAKRPchc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANQAyADgA
NAA0ADcAYwA0AGUAMQA1ADcANABiADQAYQA4AGYANgBlADQAMAA2AGMAYgA5ADAANwAxADIAZQAy
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAAwADIALgAyADAA
MwA4ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ARABEADMAOAAz
AEIANwA5ADgAOQBEAEEANAA0AEEARQA5AEYANAA5ADUARgAwAEMAQQAxAEYARgBGADkAMgA0AC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADQAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBDAF8ARABEADMAOAAzAEIANwA5ADgAOQBEAEEANAA0AEEARQA5AEYANAA5ADUARgAw
AEMAQQAxAEYARgBGADkAMgA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAQwBfADUAMgA4ADQANAA3AGMANABlADEANQA3ADQAYgA0AGEAOABmADYAZQA0ADAANgBj
AGIAOQAwADcAMQAyAGUAMgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAwADAAMgAuADIAMAAzADgAOAAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADAAMgAuADIAMAAzADgAOAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADgMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_dd383b7989da44ae9f495f0ca1fff924</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">ce8bc40a66cc3eadec7edfeb29aaca0e</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Inputs[Input 0].Columns[LineNumber]"
                              cachedDataType="i8"
                              cachedName="LineNumber"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[LineNumber]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Inputs[Input 0].Columns[DWStoreNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="5"
                              cachedName="DWStoreNumber"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Match Output].Columns[DWStoreNumber]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Inputs[Input 0].Columns[STORE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="STORE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[STORE]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedStore]"
                              codePage="1252"
                              dataType="str"
                              length="6"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedStore]"
                              name="ParsedStore" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedDate]"
                              dataType="dbDate"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedDate]"
                              name="ParsedDate" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedItem]"
                              codePage="1252"
                              dataType="str"
                              length="14"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedItem]"
                              name="ParsedItem" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedFpMd]"
                              codePage="1252"
                              dataType="str"
                              length="1"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedFpMd]"
                              name="ParsedFpMd" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedIntransitQty]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedIntransitQty]"
                              name="ParsedIntransitQty" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedOnHandQty]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedOnHandQty]"
                              name="ParsedOnHandQty" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedRetailPrice]"
                              dataType="numeric"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedRetailPrice]"
                              name="ParsedRetailPrice"
                              precision="19"
                              scale="7" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedItemCost2]"
                              dataType="numeric"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0].Columns[ParsedItemCost2]"
                              name="ParsedItemCost2"
                              precision="19"
                              scale="7" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Errors]"
                          hasSideEffects="true"
                          name="Errors">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Errors].Columns[File_Name]"
                              codePage="1252"
                              dataType="str"
                              length="1000"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Errors].Columns[File_Name]"
                              name="File_Name" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Errors].Columns[Store_Code]"
                              codePage="1252"
                              dataType="str"
                              length="6"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Errors].Columns[Store_Code]"
                              name="Store_Code" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Errors].Columns[Error_Message]"
                              codePage="1252"
                              dataType="str"
                              length="1000"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Errors].Columns[Error_Message]"
                              name="Error_Message" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column"
                      componentClassID="DTSTransform.DerivedColumn.3"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="Derived Column"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Inputs[Derived Column Input].Columns[STORE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="STORE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[STORE]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Store_BKey]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="7"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Store_BKey]"
                              name="Store_BKey"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,7,1252)(@[User::Partner_Code] + [RIGHT]("00000" + #{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[STORE]},5))</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,7,1252)(@[User::Partner_Code] + RIGHT("00000" + STORE,5))</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Partner_Id]"
                              dataType="i4"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Partner_Id]"
                              name="Partner_Id"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">@[User::Partner_Id]</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">@[User::Partner_Id]</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Partner_Code]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Partner_Code]"
                              name="Partner_Code"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">(DT_STR,4,1252)(@[User::Partner_Code])</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">(DT_STR,4,1252)(@[User::Partner_Code])</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN"
                      componentClassID="DTSTransform.DerivedColumn.3"
                      contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                      description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                      name="GTIN"
                      usesDispositions="true">
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Inputs[Derived Column Input]"
                          description="Input to the Derived Column Transformation"
                          name="Derived Column Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Inputs[Derived Column Input].Columns[ITEM]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ITEM"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">[LEN](#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]}) == 13 ? "0" + #{Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]} : #{Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">LEN(ITEM) == 13 ? "0" + ITEM : ITEM</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Output]"
                          description="Default Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          name="Derived Column Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Output].Columns[ITEM_Source]"
                              dataType="wstr"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Output].Columns[ITEM_Source]"
                              name="ITEM_Source"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Expression"
                                  name="Expression">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]}</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Derived Column Friendly Expression"
                                  expressionType="Notify"
                                  name="FriendlyExpression">ITEM</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Error Output]"
                          description="Error Output of the Derived Column Transformation"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Derived Column Error Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Inputs[Derived Column Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode"
                      componentClassID="DTSTransform.Lookup.3"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup_ItemCode"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT        RTRIM(GTIN) AS GTIN, Item_Code
FROM            Item_Dim
WHERE        (RTRIM(GTIN) &lt;&gt; '')</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT        RTRIM(GTIN) AS GTIN, Item_Code
FROM            Item_Dim
WHERE        (RTRIM(GTIN) &lt;&gt; '')) [refTable]
where [refTable].[Item_Code] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="GTIN" dataType="DT_STR" length="15" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Item_Code" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[DUNE_UNIQUE_ID]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Connections[OleDbConnection]"
                          connectionManagerID="{D4D5696D-0846-4E54-9532-91E01EAA1E84}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Data_Warehouse]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Inputs[Lookup Input].Columns[DUNE_UNIQUE_ID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DUNE_UNIQUE_ID"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[DUNE_UNIQUE_ID]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Item_Code</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Inputs[Lookup Input].Columns[ITEM]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ITEM"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn" />
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">Item_Code</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="IgnoreFailure"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU"
                      componentClassID="DTSTransform.Lookup.3"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Lookup_SKU"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT        RTRIM(GTIN) AS GTIN
FROM            Item_Dim
WHERE        (RTRIM(GTIN) &lt;&gt; '')</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT        RTRIM(GTIN) AS GTIN
FROM            Item_Dim
WHERE        (RTRIM(GTIN) &lt;&gt; '')) [refTable]
where [refTable].[GTIN] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="GTIN" dataType="DT_STR" length="15" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Connections[OleDbConnection]"
                          connectionManagerID="{D4D5696D-0846-4E54-9532-91E01EAA1E84}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Data_Warehouse]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Inputs[Lookup Input].Columns[ITEM]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ITEM"
                              errorOrTruncationOperation="Copy Column"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]"
                              name="ITEM"
                              truncationRowDisposition="FailComponent"
                              usageType="readWrite">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">GTIN</property>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">GTIN</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data"
                      componentClassID="DTS.ManagedComponentWrapper.3"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Parse Data"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ErrorsBuffer ErrorsBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ErrorsBuffer)
        {
            ErrorsBuffer.SetEndOfRowset();
            ErrorsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Errors"))
            {
                ErrorsBuffer = new ErrorsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Globalization;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    string File_Name;
    string ErrorFormat;
    bool hasErrors = false;
    string ErrorMessageOutput;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        IDTSVariables100 vars = null;

        VariableDispenser.LockOneForRead("User::File_Name", ref vars);
        File_Name = vars["User::File_Name"].Value.ToString();
        vars.Unlock();

        ErrorFormat = "Line {0}: {1} ({2})";
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (hasErrors)
        {
            IDTSVariables100 vars = null;
            VariableDispenser.LockOneForWrite("User::Data_Error", ref vars);
            vars["User::Data_Error"].Value = true;
            vars.Unlock();

            VariableDispenser.LockOneForWrite("User::ErrorMessageOutput", ref vars);
            vars["User::ErrorMessageOutput"].Value = ErrorMessageOutput;
            vars.Unlock();
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string errorMessage;

        /* Date */
        bool dateHasError = false;
        string dateErrorText = "";
        DateTime date = default(DateTime);
        if (Row.DATE_IsNull)
        {
            dateHasError = true;
            dateErrorText = "Date is required.";
        }
        else if (!DateTime.TryParseExact(Row.DATE.Trim(), "yyyy-MM-dd", CultureInfo.InvariantCulture, DateTimeStyles.None, out date))
        {
            dateHasError = true;
            dateErrorText = "Invalid Date.";
        }

        if (dateHasError)
        {
            Row.ParsedDate_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, dateErrorText, Row.DATE_IsNull ? "" : Row.DATE);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedDate = date;
        }
        /* Date End */

        /* FP MD */
        bool fpMdHasError = false;
        string fpMdErrorText = "";
        if (Row.FPMD_IsNull)
        {
            fpMdHasError = true;
            fpMdErrorText = "FP MD required.";
        }
        else if (
            !(Row.FPMD.Trim().ToUpper() == "F" ||
              Row.FPMD.Trim().ToUpper() == "M")
            )
        {
            fpMdHasError = true;
            fpMdErrorText = "Invalid FP MD. It should be either 'F' or 'M'.";
        }

        if (fpMdHasError)
        {
            Row.ParsedFpMd_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, fpMdErrorText, Row.FPMD_IsNull ? "" : Row.FPMD);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedFpMd = Row.FPMD.Trim().ToUpper();
        }
        /* FP MD End */

        /* Intransit Qty */
        bool intransitQtyHasError = false;
        string intransitErrorText = "";
        int intransitQty = default(int);
        if (Row.INTRANSITQTY_IsNull)
        {
            intransitQtyHasError = true;
            intransitErrorText = "Intransit Qty required.";
        }
        else if (!int.TryParse(Row.INTRANSITQTY.Trim(), out intransitQty))
        {
            intransitQtyHasError = true;
            intransitErrorText = "Invalid Intransit Qty.";
        }

        if (intransitQtyHasError)
        {
            Row.ParsedIntransitQty_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, intransitErrorText, Row.INTRANSITQTY_IsNull ? "" : Row.INTRANSITQTY);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedIntransitQty = intransitQty;
        }
        /* Intransit Qty End */
        
        /* Item */
        bool itemHasError = false;
        string itemErrorText = "";
        if (Row.ITEM_IsNull)
        {
            itemHasError = true;
            itemErrorText = "Item " + Row.ITEMSource + " not found.";
        }
        else if (Row.ITEM.Trim().Length > 14)
        {
            itemHasError = true;
            itemErrorText = "Item should be no longer than 14 characters.";
        }

        if (itemHasError)
        {
            Row.ParsedItem_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, itemErrorText, Row.ITEM_IsNull ? "" : Row.ITEM);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedItem = Row.ITEM.Trim();
        }
        /* Item End */

        /* COST_VALUE*/
        bool COSTVALUEHasError = false;
        string COSTVALUEErrorText = "";
        decimal COSTVALUE = default(decimal);
        if (Row.COSTVALUE_IsNull)
        {
            COSTVALUEHasError = true;
            COSTVALUEErrorText = "COST_VALUE is required.";
        }
        else if (!decimal.TryParse(Row.COSTVALUE.Trim(), out COSTVALUE))
        {
            COSTVALUEHasError = true;
            COSTVALUEErrorText = "Invalid Item Cost 2.";
        }

        if (COSTVALUEHasError)
        {
            Row.ParsedItemCost2_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, COSTVALUEErrorText, Row.COSTVALUE_IsNull ? "" : Row.COSTVALUE);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedItemCost2 = COSTVALUE;
        }
        /* Item Cost 2 End */

        /* Store */
        bool storeHasErrors = false;
        string storeErrorText = "";
        if (Row.STORE_IsNull)
        {
            storeHasErrors = true;
            storeErrorText = "Store is required.";
        }
        else if (Row.STORE.Trim().Length > 5)
        {
            storeHasErrors = true;
            storeErrorText = "Store should be no longer than 5 characters.";
        }

        if (storeHasErrors)
        {
            Row.ParsedStore_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, storeErrorText, Row.STORE_IsNull ? "" : Row.STORE);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedStore = Row.STORE.Trim().PadLeft(5, '0');
        }
        /* Store End */

        /* On Hand Qty */
        bool onHandQtyHasError = false;
        string onHandQtyErrorText = "";
        int onHandQty = default(int);
        if (Row.ONHANDQTY_IsNull)
        {
            onHandQtyHasError = true;
            onHandQtyErrorText = "On Hand Qty is required.";
        }
        else if (!int.TryParse(Row.ONHANDQTY.Trim(), out onHandQty))
        {
            onHandQtyHasError = true;
            onHandQtyErrorText = "Invalid On Hand Qty.";
        }

        if (onHandQtyHasError)
        {
            Row.ParsedOnHandQty_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, onHandQtyErrorText, Row.ONHANDQTY_IsNull ? "" : Row.ONHANDQTY);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedOnHandQty = onHandQty;
        }
        /* On Hand Qty End */

        /* RETAILVALUE */
        bool RETAILVALUEHasError = false;
        string RETAILVALUEErrorText = "";
        decimal RETAILVALUE = default(decimal);
        if (Row.RETAILVALUE_IsNull)
        {
            RETAILVALUEHasError = true;
            RETAILVALUEErrorText = "RETAIL_VALUE is required.";
        }
        else if (!decimal.TryParse(Row.RETAILVALUE.Trim(), out RETAILVALUE))
        {
            RETAILVALUEHasError = true;
            RETAILVALUEErrorText = "Invalid RETAIL_VALUE.";
        }

        if (RETAILVALUEHasError)
        {
            Row.ParsedRetailPrice_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, RETAILVALUEErrorText, Row.RETAILVALUE_IsNull ? "" : Row.RETAILVALUE);
            AddErrorRow(Row, errorMessage);
        }
        else 
        {
            Row.ParsedRetailPrice = RETAILVALUE;
        }
        /* Retail Price */
    }

    public void AddErrorRow(Input0Buffer Row, string ErrorMessage)
    {
        hasErrors = true;

        ErrorsBuffer.AddRow();
        ErrorMessageOutput += ErrorMessage + "  \n\n";
        //ErrorsBuffer.AddRow();
        ErrorsBuffer.StoreCode = Row.STORE_IsNull ? "" : Row.STORE;
        ErrorsBuffer.FileName = File_Name;
        ErrorsBuffer.ErrorMessage = ErrorMessage;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String STORE
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool STORE_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String DATE
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool DATE_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String ITEM
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool ITEM_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ONHANDQTY
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool ONHANDQTY_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String INTRANSITQTY
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool INTRANSITQTY_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String FPMD
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool FPMD_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String NETONHANDQTY
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool NETONHANDQTY_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String COSTVALUE
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool COSTVALUE_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String RETAILVALUE
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool RETAILVALUE_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String DUNEUNIQUEID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool DUNEUNIQUEID_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public Int64 LineNumber
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[10]);
        }
    }
    public bool LineNumber_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String ITEMSource
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool ITEMSource_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String ParsedStore
    {
        set
        {
            this[12] = value;
        }
    }
    public bool ParsedStore_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime ParsedDate
    {
        set
        {
            this[13] = value;
        }
    }
    public bool ParsedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParsedItem
    {
        set
        {
            this[14] = value;
        }
    }
    public bool ParsedItem_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParsedFpMd
    {
        set
        {
            this[15] = value;
        }
    }
    public bool ParsedFpMd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ParsedIntransitQty
    {
        set
        {
            this[16] = value;
        }
    }
    public bool ParsedIntransitQty_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 ParsedOnHandQty
    {
        set
        {
            this[17] = value;
        }
    }
    public bool ParsedOnHandQty_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal ParsedRetailPrice
    {
        set
        {
            this[18] = value;
        }
    }
    public bool ParsedRetailPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal ParsedItemCost2
    {
        set
        {
            this[19] = value;
        }
    }
    public bool ParsedItemCost2_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ErrorsBuffer: ScriptBuffer

{
    public ErrorsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FileName
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String StoreCode
    {
        set
        {
            this[1] = value;
        }
    }
    public bool StoreCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorMessage
    {
        set
        {
            this[2] = value;
        }
    }
    public bool ErrorMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Settings.get_Default():SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Sett" +
    "ings")]

namespace SC_528447c4e1574b4a8f6e406cb90712e2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_528447c4e1574b4a8f6e406cb90712e2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{8DA29315-E1D9-45A0-A969-BE3DCC89F5C9}</msb:ProjectId>
		<msb:CodeName>SC_528447c4e1574b4a8f6e406cb90712e2</msb:CodeName>
		<msb:DisplayName>SC_528447c4e1574b4a8f6e406cb90712e2</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_528447c4e1574b4a8f6e406cb90712e2.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_528447c4e1574b4a8f6e406cb90712e2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_528447c4e1574b4a8f6e406cb90712e2")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_528447c4e1574b4a8f6e406cb90712e2.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{9200834C-8192-4034-AF1D-ED80F977E054}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_528447c4e1574b4a8f6e406cb90712e2</RootNamespace><AssemblyName>SC_DDBB69448C37424ABA46F9F527E35B58</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_DDBB69448C37424ABA46F9F527E35B58.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAL7aVlcAAAAAAAAAAOAAAiELAQsAADAAAAAIAAAAAAAALk8A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANxOAABPAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAANC8AAAAgAAAAMAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAyAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAQ
TwAAAAAAAEgAAAACAAUA4CsAAPwiAAABAAAAAAAAACgrAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnNDAAAGfQEAAAQCAnNEAAAGfQIAAAQqAzAE
AE8AAAAAAAAABHIBAABwGm8OAAAKLBUCBQIDKA8AAAoOBHMOAAAGbwcAAAYFbxAAAAosIwICewQA
AAQXWH0EAAAEAnsEAAAEFzMMAm8DAAAGAigEAAAGKgYqbgJ7AwAABCwSAnsDAAAEb0EAAAYCFH0D
AAAEKgAAABMwBQA9AAAAAQAAERYKKy4EBpQOBHIRAABwKBEAAAozGQIFBpoCBAaUKA8AAAoOBHM5
AAAGfQMAAAQGF1gKBgMyzgJvBgAABioGKkorBwIDbwgAAAYDbzcAAAYt8SoGKhMwAwBHAAAAAgAA
EQIoEwAAChQKAigUAAAKch8AAHASAG8VAAAKAgZyHwAAcG8WAAAKbxcAAApvGAAACn0FAAAEBm8Z
AAAKAnI/AABwfQYAAAQqABMwAwBtAAAAAgAAEQIoGgAACgJ7BwAABCxeFAoCKBQAAApyZwAAcBIA
bxsAAAoGcmcAAHBvFgAACheMHQAAAW8cAAAKBm8ZAAAKAigUAAAKcokAAHASAG8bAAAKBnKJAABw
bxYAAAoCewgAAARvHAAACgZvGQAACioAAAATMAUAswQAAAMAABEWC3K7AABwDBID/hUHAAABA28S
AAAGLAoXC3K9AABwDCsnA28RAAAGbx0AAApy4QAAcCgeAAAKFhIDKB8AAAotCBcLcvcAAHAMByw+
AxdvKgAABgJ7BgAABANvIwAABowgAAABCANvEgAABi0IA28RAAAGKwVyuwAAcCggAAAKCgIDBigM
AAAGKwcDCW8pAAAGFhMEcrsAAHATBQNvGgAABiwMFxMEchMBAHATBStCA28ZAAAGbx0AAApvIQAA
CnIzAQBwKCIAAAotJgNvGQAABm8dAAAKbyEAAApyNwEAcCgiAAAKLQoXEwRyOwEAcBMFEQQsPwMX
by4AAAYCewYAAAQDbyMAAAaMIAAAAREFA28aAAAGLQgDbxkAAAYrBXK7AABwKCAAAAoKAgMGKAwA
AAYrFgMDbxkAAAZvHQAACm8hAAAKby0AAAYWEwZyuwAAcBMHFhMIA28YAAAGLAwXEwZymQEAcBMH
Kx4DbxcAAAZvHQAAChIIKCMAAAotChcTBnLJAQBwEwcRBiw/AxdvMAAABgJ7BgAABANvIwAABowg
AAABEQcDbxgAAAYtCANvFwAABisFcrsAAHAoIAAACgoCAwYoDAAABisIAxEIby8AAAYWEwlyuwAA
cBMKA28UAAAGLBwXEwly9wEAcANvJQAABnIDAgBwKCQAAAoTCiseA28TAAAGbx0AAApvJQAACh8O
MQoXEwlyGwIAcBMKEQksPwMXbywAAAYCewYAAAQDbyMAAAaMIAAAAREKA28UAAAGLQgDbxMAAAYr
BXK7AABwKCAAAAoKAgMGKAwAAAYrEQMDbxMAAAZvHQAACm8rAAAGFhMLcrsAAHATDBZzJgAAChMN
A28eAAAGLAwXEwtydQIAcBMMKx4Dbx0AAAZvHQAAChINKCcAAAotChcTC3KlAgBwEwwRCyw/Axdv
NgAABgJ7BgAABANvIwAABowgAAABEQwDbx4AAAYtCANvHQAABisFcrsAAHAoIAAACgoCAwYoDAAA
BisIAxENbzUAAAYWEw5yuwAAcBMPA28QAAAGLAwXEw5yzwIAcBMPKx0Dbw8AAAZvHQAACm8lAAAK
GzEKFxMOcvUCAHATDxEOLD8DF28oAAAGAnsGAAAEA28jAAAGjCAAAAERDwNvEAAABi0IA28PAAAG
KwVyuwAAcCggAAAKCgIDBigMAAAGKxkDA28PAAAGbx0AAAobHzBvKAAACm8nAAAGFhMQcrsAAHAT
ERYTEgNvFgAABiwMFxMQck8DAHATESseA28VAAAGbx0AAAoSEigjAAAKLQoXExBygQMAcBMRERAs
PwMXbzIAAAYCewYAAAQDbyMAAAaMIAAAARERA28WAAAGLQgDbxUAAAYrBXK7AABwKCAAAAoKAgMG
KAwAAAYrCAMREm8xAAAGFhMTcrsAAHATFBZzJgAAChMVA28gAAAGLAwXExNyqwMAcBMUKx4Dbx8A
AAZvHQAAChIVKCcAAAotChcTE3LfAwBwExQREyw+AxdvNAAABgJ7BgAABANvIwAABowgAAABERQD
byAAAAYtCANvHwAABisFcrsAAHAoIAAACgoCAwYoDAAABioDERVvMwAABioAAzAEAGcAAAAAAAAA
Ahd9BwAABAJ7AwAABG9AAAAGAiV7CAAABARyCwQAcCgkAAAKfQgAAAQCewMAAAQDbxAAAAYtCANv
DwAABisFcrsAAHBvPAAABgJ7AwAABAJ7BQAABG86AAAGAnsDAAAEBG8+AAAGKh4CKAEAAAYqKgID
BAUoKQAACipSAnsqAAAKAnsrAAAKFpRvLAAACioiAhYoLQAACipSAnsqAAAKAnsrAAAKF5RvLAAA
CioiAhcoLQAACipSAnsqAAAKAnsrAAAKGJRvLAAACioiAhgoLQAACipSAnsqAAAKAnsrAAAKGZRv
LAAACioiAhkoLQAACipSAnsqAAAKAnsrAAAKGpRvLAAACioiAhooLQAACipSAnsqAAAKAnsrAAAK
G5RvLAAACioiAhsoLQAACipSAnsqAAAKAnsrAAAKHJRvLAAACioiAhwoLQAACipSAnsqAAAKAnsr
AAAKHZRvLAAACioiAh0oLQAACipSAnsqAAAKAnsrAAAKHpRvLAAACioiAh4oLQAACipWAnsqAAAK
AnsrAAAKHwmUbywAAAoqJgIfCSgtAAAKKlYCeyoAAAoCeysAAAofCpRvLgAACiomAh8KKC0AAAoq
VgJ7KgAACgJ7KwAACh8LlG8sAAAKKiYCHwsoLQAACioqAh8MAygvAAAKKl4DLAkCHwwoMAAACipy
FQQAcHMxAAAKej4CHw0DjAcAAAEoLwAACipeAywJAh8NKDAAAAoqchUEAHBzMQAACnoqAh8OAygv
AAAKKl4DLAkCHw4oMAAACipyFQQAcHMxAAAKeioCHw8DKC8AAAoqXgMsCQIfDygwAAAKKnIVBABw
czEAAAp6PgIfEAOMIQAAASgvAAAKKl4DLAkCHxAoMAAACipyFQQAcHMxAAAKej4CHxEDjCEAAAEo
LwAACipeAywJAh8RKDAAAAoqchUEAHBzMQAACno+Ah8SA4wIAAABKC8AAAoqXgMsCQIfEigwAAAK
KnIVBABwczEAAAp6PgIfEwOMCAAAASgvAAAKKl4DLAkCHxMoMAAACipyFQQAcHMxAAAKeh4CKDIA
AAoqHgIoMwAACioqAgMEBSgpAAAKKiYCFgMoLwAACipaAywIAhYoMAAACipyFQQAcHMxAAAKeiYC
FwMoLwAACipaAywIAhcoMAAACipyFQQAcHMxAAAKeiYCGAMoLwAACipaAywIAhgoMAAACipyFQQA
cHMxAAAKeh4CKDQAAAoqHgIoNQAACioeAigzAAAKKjoCKDYAAAoCA30JAAAEKjoCKDYAAAoCA30K
AAAEKh4CKDYAAAoqAAAAEzACAC0AAAAEAAARfgsAAAQtIHKyBABw0AgAAAIoOAAACm85AAAKczoA
AAoKBoALAAAEfgsAAAQqGn4MAAAEKh4CgAwAAAQqGn4NAAAEKi5zSgAABoANAAAEKh4CKD0AAAoq
AAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA/AsA
ACN+AABoDAAA9A4AACNTdHJpbmdzAAAAAFwbAAAkBQAAI1VTAIAgAAAQAAAAI0dVSUQAAACQIAAA
bAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6JTMAFgAAAQAAACkAAAAJAAAADQAAAEsAAAAs
AAAAPQAAAA8AAAAEAAAABAAAADEAAAAyAAAAAQAAAAUAAAABAAAAAAAKAAEAAAAAAAYA+wDaAAYA
CwHaAAoAKAEhAQ4ARAEvARIAkgHaAAYAoQHaAAoAPgQhAQoAGgUhAQoA5QjUCAoAFgkBCQoACQrv
CQoANAoiCgoASwoiCgoAaAoiCgoAhwoiCgoAoAoiCgoAuQoiCgoA1AoiCgoA7woiCgoACAsiCgoA
QQshCwoAYQshCwoAowshAQoAqgshAQYA7wvaABYAYQw5DBYAkAw5DBYAsAw5DAoA8wwhAQoAHw0h
AQoALw0BCQoATA0hAQoAbQ0hAQoAwQ0hAQoA7g3bDQoACw4hAQoAEA4hAQoANA4iCg4AYA5KDg4A
eQ5KDgoAjg4hCwAAAAABAAAAAAABAAEAAQAQADIAAAAFAAEAAQABABAAQAAAAAgABQAJAAEAEABL
AAAACQAJAA4AAQAQAFgAAAAJAAkAOQABABAAZQAAAA0ACQBDAAEAEABxAAAADQAKAEQAAAAQAHsA
hQANAAsARQAAARAAtACFABEADQBJAAYAZQATAAYAcQAXAAYAWAAfAAEAYgEjAAEAKQJCAAEAMwJC
AAEAPwJFAAEASQJCAAEAxAiaAAEAxAiaABEA9QikABEAIgmoABEAZgnGAFAgAAAAAIYYXAEbAAEA
cCAAAAAAxgCvASYAAQDLIAAAAADGAbwBGwAFAM0gAAAAAIEAygEbAAUA7CAAAAAAxgDeATAABQA1
IQAAAADGAeoBGwAJADchAAAAAMYB/gE8AAkASiEAAAAAxgESAjwACgBMIQAAAADGAFwCGwALAKAh
AAAAAMYAZwIbAAsAHCIAAAAAxgASAjwACwDcJgAAAACGAHMCSAAMAE8nAAAAAIYYXAEbAA4AVycA
AAAAhhhcAU8ADgBiJwAAAACGCH8CWQARAHcnAAAAAIYIiQJdABEAgCcAAAAAhgiaAlkAEQCVJwAA
AACGCKMCXQARAJ4nAAAAAIYIswJZABEAsycAAAAAhgi8Al0AEQC8JwAAAACGCMwCWQARANEnAAAA
AIYI2gJdABEA2icAAAAAhgjvAlkAEQDvJwAAAACGCAADXQARAPgnAAAAAIYIGANZABEADSgAAAAA
hgghA10AEQAWKAAAAACGCDEDWQARACsoAAAAAIYIQgNdABEANCgAAAAAhghaA1kAEQBJKAAAAACG
CGgDXQARAFIoAAAAAIYIfQNZABEAZygAAAAAhgiNA10AEQBwKAAAAACGCKQDWQARAIYoAAAAAIYI
tQNdABEAkCgAAAAAhgjNA2EAEQCmKAAAAACGCNwDXQARALAoAAAAAIYI8gNZABEAxigAAAAAhggB
BF0AEQDQKAAAAACGCBcEZQARANsoAAAAAIYIJwRqABIA8ygAAAAAhghHBG8AEwADKQAAAACGCFYE
agAUABspAAAAAIYIbARlABUAJikAAAAAhgh7BGoAFgA+KQAAAACGCJEEZQAXAEkpAAAAAIYIoARq
ABgAYSkAAAAAhgi2BHUAGQBxKQAAAACGCM0EagAaAIkpAAAAAIYI6wR1ABsAmSkAAAAAhgj/BGoA
HACxKQAAAACGCCIFegAdAMEpAAAAAIYIOAVqAB4A2SkAAAAAhghVBXoAHwDpKQAAAACGCGkFagAg
AAEqAAAAAIYAhAVdACEACSoAAAAAhgCMBV0AIQARKgAAAACGGFwBTwAhABwqAAAAAIYI7AdlACQA
JioAAAAAhgj5B2oAJQA9KgAAAACGCA0IZQAmAEcqAAAAAIYIGwhqACcAXioAAAAAhggwCGUAKABo
KgAAAACGCEEIagApAH8qAAAAAIYAWQgbACoAhyoAAAAAhgBgCBsAKgCPKgAAAACGAIwFXQAqAJcq
AAAAAIYYXAGeACoApioAAAAAhhhcAZ4AKwC1KgAAAACDGFwBGwAsAMAqAAAAAJMIMgmsACwA+SoA
AAAAkwhGCbEALAAAKwAAAACTCFIJtgAsAAgrAAAAAJYIdgnKAC0AGysAAAAAhhhcARsALQAPKwAA
AACRGKkOsgEtAAAAAQCKCQAAAgCSCQAAAwCcCQAABACjCQAAAQCtCQAAAgC1CQAAAwC/CQAABACj
CQAAAQCcCQAAAQDHCQAAAQDHCQAAAQDHCQAAAgCjCAAAAQCcCQAAAgDLCQAAAwCjCQAAAQDfCQAA
AQDfCQAAAQDfCQAAAQDfCQAAAQDfCQAAAQDfCQAAAQDfCQAAAQDfCQAAAQDfCQAAAQDfCQAAAQDf
CQAAAQDfCQAAAQDfCQAAAQDfCQAAAQDfCQAAAQDfCQAAAQCcCQAAAgDLCQAAAwCjCQAAAQDfCQAA
AQDfCQAAAQDfCQAAAQDfCQAAAQDfCQAAAQDfCQAAAQDlCQAAAQDlCQAAAQDfCVkAXAFlAGEAXAFl
AGkAXAFlAHEAXAFlAHkAXAFlAIEAXAFlAIkAXAFlAJEAXAFlAJkAXAFlAKEAXAFlAKkAXAF1ALEA
XAEbAAkAXAEbALkAuwvUAAkAwgvbACkA0wtdAAkA4wvhAMkAXAEbAAkAXAIbAAkAegzxANEAoQz2
ANkAwAz+AOEAyQwEARkA0wxZANkA3AwbAAkAZwIbANEA4wz2AOEA+wwNAbkABQ1ZAFEACg2xADkA
Pg0SAbkAUg0fAbkAWQ1ZALkAYQ0nAQkBcw0tAbkAfA00AbkAgw07AUEAXAF1AEEAcw0/AbkAjg1H
AREAXAFPABEAnAlpAREAywltASkAlg1xAREAoA12ASkApw17AREAsA2AAREAuQ11ABEBXAFlABEA
hAVdABEAjAVdABEAWQgbABEAYAgbABkAXAEbABkBXAEbACEBIg6GASEBPQ6PAUkAXAGVATkBXAGi
AUkBXAEbACEAXAEbAC4AGwAnAi4AYwBNAi4ACwC2AS4AEwD+AS4AIwAnAi4AKwAnAi4AMwD+AS4A
OwAtAi4AQwAnAi4AWwBEAmMAkwDsAAMBuwHsAKEB4wHsAOkF2wGpAQkG2wGpAegACAFNAZ0BBAAB
AAUAKQAIAC8ACQAxAAAAmAWAAAAAngWEAAAAqwWAAAAAsAWEAAAAvAWAAAAAwQWEAAAAzQWAAAAA
1wWEAAAA6AWAAAAA9QWEAAAACQaAAAAADgaEAAAAGgaAAAAAJwaEAAAAOwaAAAAARQaEAAAAVgaA
AAAAYgaEAAAAdQaAAAAAggaEAAAAlgaIAAAAoQaEAAAAswaAAAAAvgaEAAAA0AaAAAAA3AaEAAAA
7waMAAAA+gaEAAAADAeAAAAAFweEAAAAKQeAAAAANAeEAAAARgeRAAAAWQeEAAAAcweRAAAAgweE
AAAAmgeVAAAArAeEAAAAxQeVAAAA1QeEAAAAbwiAAAAAeAiEAAAAiAiAAAAAkgiEAAAAowiAAAAA
sAiEAAAA5Qi8AAAAXgnBAAAAggnPAAIADwADAAIAEAAFAAIAEQAHAAIAEgAJAAIAEwALAAIAFAAN
AAIAFQAPAAIAFgARAAIAFwATAAIAGAAVAAIAGQAXAAIAGgAZAAIAGwAbAAIAHAAdAAIAHQAfAAIA
HgAhAAIAHwAjAAIAIAAlAAIAIQAnAAIAIgApAAIAIwArAAIAJAAtAAIAJQAvAAIAJgAxAAEAJwAz
AAEAKAA1AAEAKQA3AAEAKgA5AAEAKwA7AAEALAA9AAEALQA/AAEALgBBAAEALwBDAAEAMABFAAEA
MQBHAAEAMgBJAAEAMwBLAAEANABNAAEANQBPAAEANgBRAAEAOgBTAAEAOwBVAAEAPABXAAEAPQBZ
AAEAPgBbAAEAPwBdAAIARgBfAAIARwBhAAEASABhAAIASQBjAASAAAABAAAAchcfZgAAAAAAAH8L
AAALAAAAAAAAAAAAAAABAL0AAAAAAAQAAAAAAAAAAAAAAAoAGAEAAAAABAAAAAAAAAAAAAAACgAh
AQAAAAALAAAAAAAAAAAAAAABAHEBAAAAAAsAAAAAAAAAAAAAAAEAFgwAAAAAAAAAAAEAAACwDgAA
AAAAPE1vZHVsZT4AU0NfRERCQjY5NDQ4QzM3NDI0QUJBNDZGOUY1MjdFMzVCNTguZGxsAFVzZXJD
b21wb25lbnQAU2NyaXB0TWFpbgBJbnB1dDBCdWZmZXIARXJyb3JzQnVmZmVyAENvbm5lY3Rpb25z
AFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTI4NDQ3YzRlMTU3NGI0YThmNmU0MDZjYjkwNzEyZTIu
UHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIAbXNj
b3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABGaW5pc2hPdXRw
dXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBJ
bnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cARmlsZV9OYW1lAEVycm9y
Rm9ybWF0AGhhc0Vycm9ycwBFcnJvck1lc3NhZ2VPdXRwdXQAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBBZGRFcnJvclJvdwBnZXRfU1RPUkUAZ2V0X1NUT1JFX0lzTnVsbABnZXRfREFURQBnZXRfREFU
RV9Jc051bGwAZ2V0X0lURU0AZ2V0X0lURU1fSXNOdWxsAGdldF9PTkhBTkRRVFkAZ2V0X09OSEFO
RFFUWV9Jc051bGwAZ2V0X0lOVFJBTlNJVFFUWQBnZXRfSU5UUkFOU0lUUVRZX0lzTnVsbABnZXRf
RlBNRABnZXRfRlBNRF9Jc051bGwAZ2V0X05FVE9OSEFORFFUWQBnZXRfTkVUT05IQU5EUVRZX0lz
TnVsbABnZXRfQ09TVFZBTFVFAGdldF9DT1NUVkFMVUVfSXNOdWxsAGdldF9SRVRBSUxWQUxVRQBn
ZXRfUkVUQUlMVkFMVUVfSXNOdWxsAGdldF9EVU5FVU5JUVVFSUQAZ2V0X0RVTkVVTklRVUVJRF9J
c051bGwAZ2V0X0xpbmVOdW1iZXIAZ2V0X0xpbmVOdW1iZXJfSXNOdWxsAGdldF9JVEVNU291cmNl
AGdldF9JVEVNU291cmNlX0lzTnVsbABzZXRfUGFyc2VkU3RvcmUAc2V0X1BhcnNlZFN0b3JlX0lz
TnVsbABEYXRlVGltZQBzZXRfUGFyc2VkRGF0ZQBzZXRfUGFyc2VkRGF0ZV9Jc051bGwAc2V0X1Bh
cnNlZEl0ZW0Ac2V0X1BhcnNlZEl0ZW1fSXNOdWxsAHNldF9QYXJzZWRGcE1kAHNldF9QYXJzZWRG
cE1kX0lzTnVsbABzZXRfUGFyc2VkSW50cmFuc2l0UXR5AHNldF9QYXJzZWRJbnRyYW5zaXRRdHlf
SXNOdWxsAHNldF9QYXJzZWRPbkhhbmRRdHkAc2V0X1BhcnNlZE9uSGFuZFF0eV9Jc051bGwARGVj
aW1hbABzZXRfUGFyc2VkUmV0YWlsUHJpY2UAc2V0X1BhcnNlZFJldGFpbFByaWNlX0lzTnVsbABz
ZXRfUGFyc2VkSXRlbUNvc3QyAHNldF9QYXJzZWRJdGVtQ29zdDJfSXNOdWxsAE5leHRSb3cARW5k
T2ZSb3dzZXQAU1RPUkUAU1RPUkVfSXNOdWxsAERBVEUAREFURV9Jc051bGwASVRFTQBJVEVNX0lz
TnVsbABPTkhBTkRRVFkAT05IQU5EUVRZX0lzTnVsbABJTlRSQU5TSVRRVFkASU5UUkFOU0lUUVRZ
X0lzTnVsbABGUE1EAEZQTURfSXNOdWxsAE5FVE9OSEFORFFUWQBORVRPTkhBTkRRVFlfSXNOdWxs
AENPU1RWQUxVRQBDT1NUVkFMVUVfSXNOdWxsAFJFVEFJTFZBTFVFAFJFVEFJTFZBTFVFX0lzTnVs
bABEVU5FVU5JUVVFSUQARFVORVVOSVFVRUlEX0lzTnVsbABMaW5lTnVtYmVyAExpbmVOdW1iZXJf
SXNOdWxsAElURU1Tb3VyY2UASVRFTVNvdXJjZV9Jc051bGwAUGFyc2VkU3RvcmUAUGFyc2VkU3Rv
cmVfSXNOdWxsAFBhcnNlZERhdGUAUGFyc2VkRGF0ZV9Jc051bGwAUGFyc2VkSXRlbQBQYXJzZWRJ
dGVtX0lzTnVsbABQYXJzZWRGcE1kAFBhcnNlZEZwTWRfSXNOdWxsAFBhcnNlZEludHJhbnNpdFF0
eQBQYXJzZWRJbnRyYW5zaXRRdHlfSXNOdWxsAFBhcnNlZE9uSGFuZFF0eQBQYXJzZWRPbkhhbmRR
dHlfSXNOdWxsAFBhcnNlZFJldGFpbFByaWNlAFBhcnNlZFJldGFpbFByaWNlX0lzTnVsbABQYXJz
ZWRJdGVtQ29zdDIAUGFyc2VkSXRlbUNvc3QyX0lzTnVsbABzZXRfRmlsZU5hbWUAc2V0X0ZpbGVO
YW1lX0lzTnVsbABzZXRfU3RvcmVDb2RlAHNldF9TdG9yZUNvZGVfSXNOdWxsAHNldF9FcnJvck1l
c3NhZ2UAc2V0X0Vycm9yTWVzc2FnZV9Jc051bGwAQWRkUm93AFNldEVuZE9mUm93c2V0AEZpbGVO
YW1lAEZpbGVOYW1lX0lzTnVsbABTdG9yZUNvZGUAU3RvcmVDb2RlX0lzTnVsbABFcnJvck1lc3Nh
Z2UARXJyb3JNZXNzYWdlX0lzTnVsbABQYXJlbnRDb21wb25lbnQAU3lzdGVtLlJlc291cmNlcwBS
ZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUlu
Zm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElE
AElucHV0TmFtZQBCdWZmZXIAT3V0cHV0TWFwAE91dHB1dHMAT3V0cHV0SURzAEJ1ZmZlcnMAUm93
AEJ1ZmZlckNvbHVtbkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5
VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZp
Z3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRl
AFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ19EREJCNjk0NDhDMzc0MjRB
QkE0NkY5RjUyN0UzNUI1OABTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1u
SW5kZXhlcwBnZXRfRW5kT2ZSb3dzZXQAR2V0T3V0cHV0SUQAU1NJU1NjcmlwdENvbXBvbmVudEVu
dHJ5UG9pbnRBdHRyaWJ1dGUATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIASURUU1ZhcmlhYmxlRGlzcGVuc2Vy
MTAwAGdldF9WYXJpYWJsZURpc3BlbnNlcgBJRFRTVmFyaWFibGVzMTAwAExvY2tPbmVGb3JSZWFk
AElEVFNWYXJpYWJsZTEwMABnZXRfSXRlbQBnZXRfVmFsdWUAVG9TdHJpbmcAVW5sb2NrAExvY2tP
bmVGb3JXcml0ZQBCb29sZWFuAHNldF9WYWx1ZQBUcmltAGdldF9JbnZhcmlhbnRDdWx0dXJlAElG
b3JtYXRQcm92aWRlcgBEYXRlVGltZVN0eWxlcwBUcnlQYXJzZUV4YWN0AEludDY0AEZvcm1hdABU
b1VwcGVyAG9wX0VxdWFsaXR5AEludDMyAFRyeVBhcnNlAENvbmNhdABnZXRfTGVuZ3RoAFBhZExl
ZnQAR2V0U3RyaW5nAElzTnVsbABHZXRJbnQ2NABzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVy
YXRpb25FeGNlcHRpb24AU3lzdGVtLkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRy
aWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBn
ZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IA
U0NfNTI4NDQ3YzRlMTU3NGI0YThmNmU0MDZjYjkwNzEyZTIuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAAAAD0kAbgBwAHUAdAAgADAAAA1FAHIAcgBvAHIAcwAAH1UAcwBlAHIAOgA6AEYA
aQBsAGUAXwBOAGEAbQBlAAAnTABpAG4AZQAgAHsAMAB9ADoAIAB7ADEAfQAgACgAewAyAH0AKQAA
IVUAcwBlAHIAOgA6AEQAYQB0AGEAXwBFAHIAcgBvAHIAADFVAHMAZQByADoAOgBFAHIAcgBvAHIA
TQBlAHMAcwBhAGcAZQBPAHUAdABwAHUAdAAAAQAjRABhAHQAZQAgAGkAcwAgAHIAZQBxAHUAaQBy
AGUAZAAuAAAVeQB5AHkAeQAtAE0ATQAtAGQAZAABG0kAbgB2AGEAbABpAGQAIABEAGEAdABlAC4A
AB9GAFAAIABNAEQAIAByAGUAcQB1AGkAcgBlAGQALgAAA0YAAANNAABdSQBuAHYAYQBsAGkAZAAg
AEYAUAAgAE0ARAAuACAASQB0ACAAcwBoAG8AdQBsAGQAIABiAGUAIABlAGkAdABoAGUAcgAgACcA
RgAnACAAbwByACAAJwBNACcALgABL0kAbgB0AHIAYQBuAHMAaQB0ACAAUQB0AHkAIAByAGUAcQB1
AGkAcgBlAGQALgAALUkAbgB2AGEAbABpAGQAIABJAG4AdAByAGEAbgBzAGkAdAAgAFEAdAB5AC4A
AAtJAHQAZQBtACAAABcgAG4AbwB0ACAAZgBvAHUAbgBkAC4AAFlJAHQAZQBtACAAcwBoAG8AdQBs
AGQAIABiAGUAIABuAG8AIABsAG8AbgBnAGUAcgAgAHQAaABhAG4AIAAxADQAIABjAGgAYQByAGEA
YwB0AGUAcgBzAC4AAC9DAE8AUwBUAF8AVgBBAEwAVQBFACAAaQBzACAAcgBlAHEAdQBpAHIAZQBk
AC4AAClJAG4AdgBhAGwAaQBkACAASQB0AGUAbQAgAEMAbwBzAHQAIAAyAC4AACVTAHQAbwByAGUA
IABpAHMAIAByAGUAcQB1AGkAcgBlAGQALgAAWVMAdABvAHIAZQAgAHMAaABvAHUAbABkACAAYgBl
ACAAbgBvACAAbABvAG4AZwBlAHIAIAB0AGgAYQBuACAANQAgAGMAaABhAHIAYQBjAHQAZQByAHMA
LgAAMU8AbgAgAEgAYQBuAGQAIABRAHQAeQAgAGkAcwAgAHIAZQBxAHUAaQByAGUAZAAuAAApSQBu
AHYAYQBsAGkAZAAgAE8AbgAgAEgAYQBuAGQAIABRAHQAeQAuAAAzUgBFAFQAQQBJAEwAXwBWAEEA
TABVAEUAIABpAHMAIAByAGUAcQB1AGkAcgBlAGQALgAAK0kAbgB2AGEAbABpAGQAIABSAEUAVABB
AEkATABfAFYAQQBMAFUARQAuAAAJIAAgAAoACgAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQBy
AHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEA
cwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABp
AG4AcwB0AGUAYQBkAC4AAHFTAEMAXwA1ADIAOAA0ADQANwBjADQAZQAxADUANwA0AGIANABhADgA
ZgA2AGUANAAwADYAYwBiADkAMAA3ADEAMgBlADIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAGoI6C4o+ClBkdzevK1zVIIACImEXc2AgMyRCLd6XFYZNOCJAwYSGAMG
EhwDIAABAwYSFAIGCAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBg4CBgIGIAIBEhAOCSAD
ARIVHQgSGQMgAA4DIAACAyAACgQgAQEOBCABAQIFIAEBER0EIAEBCAUgAQERIQMoAA4DKAACAygA
CgQoABEdAygACAQoABEhAwYSBQUgAQESBQMGEiUDBhIpBAAAEiUEAAASKQUAAQESKQQIABIlBAgA
EikDBhIkBAAAEiQECAASJAYgAgIOEWEFIAEdCAgGAAIIEhkOAwcBCAQBAAAABCAAEmkHIAIBDhAS
bQUgARJxHAMgABwEBwESbQQgAQEcDAAFAg4OEnkRfRARHQcABA4OHBwcBQACAg4OBgACAg4QCAYA
Aw4ODg4DIAAIBwACAg4QESEFIAIOCAMbBxYOAg4RHQIOAg4IAg4CDhEhAg4CDggCDhEhAwYSFQMG
HQgEIAEOCAQgAQIIBCABCggFIAIBCBwIAAESgJERgJUFIAASgJkHIAIBDhKAmQQHARIlBiABARGA
oQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTI4NDQ3YzRlMTU3NGI0YThmNmU0
MDZjYjkwNzEyZTIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNAAACAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQRPAAAAAAAAAAAAAB5PAAAAIAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAQTwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAsAMAAAAA
AAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
AB9mchcAAAEAH2ZyFz8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAA
JAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA1ADIAOAA0ADQANwBj
ADQAZQAxADUANwA0AGIANABhADgAZgA2AGUANAAwADYAYwBiADkAMAA3ADEAMgBlADIAAABAAA8A
AQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANgAwADAAMgAuADIANgAxADQAMwAA
AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBEAEQAQgBCADYAOQA0ADQA
OABDADMANwA0ADIANABBAEIAQQA0ADYARgA5AEYANQAyADcARQAzADUAQgA1ADgALgBkAGwAbAAA
AEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAA
QAAgACAAMgAwADEANAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABT
AEMAXwBEAEQAQgBCADYAOQA0ADQAOABDADMANwA0ADIANABBAEIAQQA0ADYARgA5AEYANQAyADcA
RQAzADUAQgA1ADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8ANQAyADgANAA0ADcAYwA0AGUAMQA1ADcANABiADQAYQA4AGYANgBlADQAMAA2AGMAYgA5ADAA
NwAxADIAZQAyAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2
ADAAMAAyAC4AMgA2ADEANAAzAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA2ADAAMAAyAC4AMgA2ADEANAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAADA/AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_ddbb69448c37424aba46f9f527e35b58</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">fc27418f0745f219c2ba849d4345ca3c</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[STORE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="STORE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[STORE]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[DATE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DATE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[DATE]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[ITEM]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ITEM"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ITEM]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[ONHAND_QTY]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ONHAND_QTY"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ONHAND_QTY]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[INTRANSIT_QTY]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="INTRANSIT_QTY"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[INTRANSIT_QTY]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[FP_MD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="FP_MD"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[FP_MD]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[NET_ONHAND_QTY]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="NET_ONHAND_QTY"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[NET_ONHAND_QTY]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[COST_VALUE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="COST_VALUE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[COST_VALUE]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[RETAIL_VALUE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="RETAIL_VALUE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[RETAIL_VALUE]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[DUNE_UNIQUE_ID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DUNE_UNIQUE_ID"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[DUNE_UNIQUE_ID]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[LineNumber]"
                              cachedDataType="i8"
                              cachedName="LineNumber"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[LineNumber]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0].Columns[ITEM_Source]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ITEM_Source"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ITEM_Source]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedStore]"
                              codePage="1252"
                              dataType="str"
                              length="6"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedStore]"
                              name="ParsedStore" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedDate]"
                              dataType="dbDate"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedDate]"
                              name="ParsedDate" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedItem]"
                              codePage="1252"
                              dataType="str"
                              length="14"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedItem]"
                              name="ParsedItem" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedFpMd]"
                              codePage="1252"
                              dataType="str"
                              length="1"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedFpMd]"
                              name="ParsedFpMd" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedIntransitQty]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedIntransitQty]"
                              name="ParsedIntransitQty" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedOnHandQty]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedOnHandQty]"
                              name="ParsedOnHandQty" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedRetailPrice]"
                              dataType="numeric"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedRetailPrice]"
                              name="ParsedRetailPrice"
                              precision="19"
                              scale="7" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedItemCost2]"
                              dataType="numeric"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedItemCost2]"
                              name="ParsedItemCost2"
                              precision="19"
                              scale="7" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Errors]"
                          hasSideEffects="true"
                          name="Errors">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Errors].Columns[File_Name]"
                              codePage="1252"
                              dataType="str"
                              length="1000"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Errors].Columns[File_Name]"
                              name="File_Name" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Errors].Columns[Store_Code]"
                              codePage="1252"
                              dataType="str"
                              length="6"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Errors].Columns[Store_Code]"
                              name="Store_Code" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Errors].Columns[Error_Message]"
                              codePage="1252"
                              dataType="str"
                              length="1000"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Errors].Columns[Error_Message]"
                              name="Error_Message" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination"
                      componentClassID="DTSAdapter.RawDestination.3"
                      contactInfo="Writes raw data that will not require parsing or translation. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers.;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Writes raw data that will not require parsing or translation. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers."
                      name="Raw File Destination"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the file."
                          name="AccessMode"
                          typeConverter="AccessMode">1</property>
                        <property
                          dataType="System.Null"
                          description="Output file name"
                          name="FileName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.NonValidatingFileNameEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
                        <property
                          dataType="System.String"
                          description="Name of the variable that contains the file name"
                          name="FileNameVariable">User::Stock_RAW_FQN</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates what option is used to write to the file."
                          name="WriteOption"
                          typeConverter="WriteOption">0</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input]"
                          hasSideEffects="true"
                          name="Raw File Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[ParsedStore]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="6"
                              cachedName="ParsedStore"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedStore]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[ParsedDate]"
                              cachedDataType="dbDate"
                              cachedName="ParsedDate"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedDate]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[ParsedItem]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="14"
                              cachedName="ParsedItem"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedItem]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[ParsedFpMd]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="1"
                              cachedName="ParsedFpMd"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedFpMd]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[ParsedIntransitQty]"
                              cachedDataType="i4"
                              cachedName="ParsedIntransitQty"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedIntransitQty]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[ParsedOnHandQty]"
                              cachedDataType="i4"
                              cachedName="ParsedOnHandQty"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedOnHandQty]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[ParsedRetailPrice]"
                              cachedDataType="numeric"
                              cachedName="ParsedRetailPrice"
                              cachedPrecision="19"
                              cachedScale="7"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedRetailPrice]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[ParsedItemCost2]"
                              cachedDataType="numeric"
                              cachedName="ParsedItemCost2"
                              cachedPrecision="19"
                              cachedScale="7"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0].Columns[ParsedItemCost2]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[Store_BKey]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="7"
                              cachedName="Store_BKey"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Store_BKey]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[Partner_Id]"
                              cachedDataType="i4"
                              cachedName="Partner_Id"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Partner_Id]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[Partner_Code]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4"
                              cachedName="Partner_Code"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Partner_Code]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input].Columns[DWStoreNumber]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="5"
                              cachedName="DWStoreNumber"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Match Output].Columns[DWStoreNumber]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File"
                      componentClassID="DTSAdapter.FlatFileSource.3"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="2057"
                      name="Stock File"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">true</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Stock_File 1]"
                          connectionManagerRefId="Package.ConnectionManagers[Stock_File 1]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[STORE]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[STORE]"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[STORE]"
                              name="STORE"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[DATE]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[DATE]"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[DATE]"
                              name="DATE"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[ITEM]"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]"
                              name="ITEM"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ONHAND_QTY]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[ONHAND_QTY]"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ONHAND_QTY]"
                              name="ONHAND_QTY"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[INTRANSIT_QTY]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[INTRANSIT_QTY]"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[INTRANSIT_QTY]"
                              name="INTRANSIT_QTY"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[FP_MD]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[FP_MD]"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[FP_MD]"
                              name="FP_MD"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[NET_ONHAND_QTY]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[NET_ONHAND_QTY]"
                              length="50"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[NET_ONHAND_QTY]"
                              name="NET_ONHAND_QTY"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[COST_VALUE]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[COST_VALUE]"
                              length="50"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[COST_VALUE]"
                              name="COST_VALUE"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[RETAIL_VALUE]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[RETAIL_VALUE]"
                              length="50"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[RETAIL_VALUE]"
                              name="RETAIL_VALUE"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[DUNE_UNIQUE_ID]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[DUNE_UNIQUE_ID]"
                              length="50"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[DUNE_UNIQUE_ID]"
                              name="DUNE_UNIQUE_ID"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[STORE]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="STORE" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[DATE]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="DATE" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[ITEM]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="ITEM" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[ONHAND_QTY]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="ONHAND_QTY" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[INTRANSIT_QTY]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="INTRANSIT_QTY" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[FP_MD]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="FP_MD" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[NET_ONHAND_QTY]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="NET_ONHAND_QTY" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[COST_VALUE]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="COST_VALUE" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[RETAIL_VALUE]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="RETAIL_VALUE" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].ExternalColumns[DUNE_UNIQUE_ID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              name="DUNE_UNIQUE_ID" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW"
                      componentClassID="DTSTransform.Lookup.3"
                      contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                      description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                      name="Store Exists in DW"
                      usesDispositions="true"
                      version="6">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the SQL statement that generates the lookup table."
                          expressionType="Notify"
                          name="SqlCommand"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT
Store_Number
,Store_BKey
FROM Store_Dim
WHERE Zone_Type ='Partner'</property>
                        <property
                          dataType="System.String"
                          description="Specifies a SQL statement that uses parameters to generate the lookup table."
                          expressionType="Notify"
                          name="SqlCommandParam"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (SELECT
Store_Number
,Store_BKey
FROM Store_Dim
WHERE Zone_Type ='Partner') [refTable]
where [refTable].[Store_BKey] = ?</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of connection used to access the reference dataset."
                          name="ConnectionType"
                          typeConverter="LookupConnectionType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the cache type of the lookup table."
                          name="CacheType"
                          typeConverter="CacheType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                          name="NoMatchBehavior"
                          typeConverter="LookupNoMatchBehavior">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                          name="NoMatchCachePercentage">0</property>
                        <property
                          dataType="System.Int32"
                          description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                          name="MaxMemoryUsage">25</property>
                        <property
                          dataType="System.Int64"
                          description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                          name="MaxMemoryUsage64">25</property>
                        <property
                          dataType="System.String"
                          description="Indicates whether to reference metadata in an XML format."
                          name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Store_Number" dataType="DT_STR" length="5" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Store_BKey" dataType="DT_STR" length="7" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                          name="ParameterMap">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Store_BKey]};</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the column code page to use when code page information is unavailable from the data source."
                          name="DefaultCodePage">1252</property>
                        <property
                          dataType="System.Boolean"
                          description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                          name="TreatDuplicateKeysAsError">false</property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Connections[OleDbConnection]"
                          connectionManagerID="{D4D5696D-0846-4E54-9532-91E01EAA1E84}:external"
                          connectionManagerRefId="Project.ConnectionManagers[Data_Warehouse]"
                          description="Connection manager used to access lookup data."
                          name="OleDbConnection" />
                      </connections>
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Inputs[Lookup Input]"
                          name="Lookup Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Inputs[Lookup Input].Columns[Store_BKey]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="7"
                              cachedName="Store_BKey"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output].Columns[Store_BKey]">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table that a column joins."
                                  name="JoinToReferenceColumn">Store_BKey</property>
                                <property
                                  dataType="System.Null"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn" />
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Match Output]"
                          errorOrTruncationOperation="Lookup"
                          errorRowDisposition="IgnoreFailure"
                          exclusionGroup="1"
                          name="Lookup Match Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Match Output].Columns[DWStoreNumber]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Copy Column"
                              length="5"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Match Output].Columns[DWStoreNumber]"
                              name="DWStoreNumber"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.String"
                                  description="Specifies the column in the reference table from which a column is copied."
                                  name="CopyFromReferenceColumn">Store_Number</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup No Match Output]"
                          description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                          exclusionGroup="1"
                          name="Lookup No Match Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Inputs[Lookup Input]">
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Error Output]"
                          exclusionGroup="1"
                          isErrorOut="true"
                          name="Lookup Error Output"
                          synchronousInputId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Inputs[Lookup Input]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All"
                      componentClassID="DTSTransform.UnionAll.3"
                      contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                      name="Union All"
                      version="1">
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1]"
                          name="Union All Input 1">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[STORE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="STORE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[STORE]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[STORE]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[DATE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DATE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[DATE]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[DATE]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[ITEM]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ITEM"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ITEM]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[ONHAND_QTY]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ONHAND_QTY"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ONHAND_QTY]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ONHAND_QTY]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[INTRANSIT_QTY]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="INTRANSIT_QTY"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[INTRANSIT_QTY]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[INTRANSIT_QTY]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[FP_MD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="FP_MD"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[FP_MD]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[FP_MD]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[NET_ONHAND_QTY]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="NET_ONHAND_QTY"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[NET_ONHAND_QTY]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[NET_ONHAND_QTY]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[COST_VALUE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="COST_VALUE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[COST_VALUE]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[COST_VALUE]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[RETAIL_VALUE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="RETAIL_VALUE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[RETAIL_VALUE]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[RETAIL_VALUE]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[DUNE_UNIQUE_ID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DUNE_UNIQUE_ID"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[DUNE_UNIQUE_ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[DUNE_UNIQUE_ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[LineNumber]"
                              cachedDataType="i8"
                              cachedName="LineNumber"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number.Outputs[Output 0].Columns[LineNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[LineNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1].Columns[ITEM_Source]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ITEM_Source"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Output].Columns[ITEM_Source]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ITEM_Source]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2]"
                          hasSideEffects="true"
                          name="Union All Input 2">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[STORE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="STORE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[STORE]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[STORE]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[DATE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="DATE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[DATE]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[DATE]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[ITEM]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ITEM"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ITEM]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ITEM]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[ONHAND_QTY]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ONHAND_QTY"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[ONHAND_QTY]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ONHAND_QTY]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[INTRANSIT_QTY]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="INTRANSIT_QTY"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[INTRANSIT_QTY]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[INTRANSIT_QTY]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[FP_MD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="FP_MD"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[FP_MD]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[FP_MD]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[NET_ONHAND_QTY]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="NET_ONHAND_QTY"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[NET_ONHAND_QTY]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[NET_ONHAND_QTY]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[COST_VALUE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="COST_VALUE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[COST_VALUE]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[COST_VALUE]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[RETAIL_VALUE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="RETAIL_VALUE"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[RETAIL_VALUE]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[RETAIL_VALUE]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[DUNE_UNIQUE_ID]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="50"
                              cachedName="DUNE_UNIQUE_ID"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output].Columns[DUNE_UNIQUE_ID]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[DUNE_UNIQUE_ID]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[LineNumber]"
                              cachedDataType="i8"
                              cachedName="LineNumber"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number.Outputs[Output 0].Columns[LineNumber]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[LineNumber]}</property>
                              </properties>
                            </inputColumn>
                            <inputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2].Columns[ITEM_Source]"
                              cachedDataType="wstr"
                              cachedLength="100"
                              cachedName="ITEM_Source"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Output].Columns[ITEM_Source]">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.Int32"
                                  description="Output column lineage ID"
                                  name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ITEM_Source]}</property>
                              </properties>
                            </inputColumn>
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                        <input
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 4]"
                          dangling="true"
                          hasSideEffects="true"
                          name="Union All Input 4">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1]"
                          name="Union All Output 1">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[STORE]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[STORE]"
                              name="STORE" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[DATE]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[DATE]"
                              name="DATE" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ITEM]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ITEM]"
                              name="ITEM" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ONHAND_QTY]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ONHAND_QTY]"
                              name="ONHAND_QTY" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[INTRANSIT_QTY]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[INTRANSIT_QTY]"
                              name="INTRANSIT_QTY" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[FP_MD]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[FP_MD]"
                              name="FP_MD" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[NET_ONHAND_QTY]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[NET_ONHAND_QTY]"
                              name="NET_ONHAND_QTY" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[COST_VALUE]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[COST_VALUE]"
                              name="COST_VALUE" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[RETAIL_VALUE]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[RETAIL_VALUE]"
                              name="RETAIL_VALUE" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[DUNE_UNIQUE_ID]"
                              codePage="1252"
                              dataType="str"
                              length="50"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[DUNE_UNIQUE_ID]"
                              name="DUNE_UNIQUE_ID" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[LineNumber]"
                              dataType="i8"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[LineNumber]"
                              name="LineNumber" />
                            <outputColumn
                              refId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ITEM_Source]"
                              dataType="wstr"
                              length="100"
                              lineageId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1].Columns[ITEM_Source]"
                              name="ITEM_Source" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Derived Column Output]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Derived Column Output1]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Inputs[Lookup Input]"
                      name="Derived Column Output"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Outputs[Derived Column Output]" />
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Flat File Source Output]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number.Inputs[Input 0]"
                      name="Flat File Source Output"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Lookup Match Output]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 2]"
                      name="Lookup Match Output"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Lookup Match Output1]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Inputs[Input 0]"
                      name="Lookup Match Output"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Lookup Match Output2]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Inputs[Union All Input 1]"
                      name="Lookup Match Output"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Outputs[Lookup Match Output]" />
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Lookup No Match Output]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode.Inputs[Lookup Input]"
                      name="Lookup No Match Output"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU.Outputs[Lookup No Match Output]" />
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Output 0]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column.Inputs[Derived Column Input]"
                      name="Output 0"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Outputs[Output 0]" />
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Output 01]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN.Inputs[Derived Column Input]"
                      name="Output 0"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number.Outputs[Output 0]" />
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Output 02]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination.Inputs[Raw File Destination Input]"
                      name="Output 0"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error.Outputs[Output 0]" />
                    <path
                      refId="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Union All Output 1]"
                      endId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data.Inputs[Input 0]"
                      name="Union All Output 1"
                      startId="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All.Outputs[Union All Output 1]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Stock File (ST)\Stage"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{86DAB553-B0EB-43E6-BEE2-C3115EA027C4}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:LocaleID="-1"
              DTS:ObjectName="Stage">
              <DTS:Variables />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two"
                  DTS:CreationName="SSIS.Pipeline.3"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{C4F569EC-7AF5-4561-BED3-2F9B514EC53E}"
                  DTS:ExecutableType="SSIS.Pipeline.3"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Match and Load To Stage Two"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <pipeline
                      version="1">
                      <components>
                        <component
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns"
                          componentClassID="DTSTransform.UnionAll.3"
                          contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                          name="Add unknowns"
                          version="1">
                          <inputs>
                            <input
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 6]"
                              hasSideEffects="true"
                              name="Union All Input 6">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 6].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="15"
                                  cachedName="ParsedItem"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedItem]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedItem]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 6].Columns[ParsedStore]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="5"
                                  cachedName="ParsedStore"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedStore]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedStore]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 6].Columns[ParsedFpMd]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="1"
                                  cachedName="ParsedFpMd"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedFpMd]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedFpMd]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 6].Columns[Store_BKey]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="7"
                                  cachedName="Store_BKey"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Store_BKey]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Store_BKey]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 6].Columns[Partner_Id]"
                                  cachedDataType="i4"
                                  cachedName="Partner_Id"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Partner_Id]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Partner_Id]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 6].Columns[Partner_Code]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="Partner_Code"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Partner_Code]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Partner_Code]}</property>
                                  </properties>
                                </inputColumn>
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                            <input
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 1]"
                              hasSideEffects="true"
                              name="Union All Input 1">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 1].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="15"
                                  cachedName="ParsedItem"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedItem]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedItem]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 1].Columns[ParsedStore]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="5"
                                  cachedName="ParsedStore"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedStore]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedStore]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 1].Columns[ParsedFpMd]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="1"
                                  cachedName="ParsedFpMd"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedFpMd]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedFpMd]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 1].Columns[Store_BKey]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="7"
                                  cachedName="Store_BKey"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Store_BKey]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Store_BKey]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 1].Columns[Partner_Id]"
                                  cachedDataType="i4"
                                  cachedName="Partner_Id"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Partner_Id]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Partner_Id]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 1].Columns[Partner_Code]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="Partner_Code"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Partner_Code]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Partner_Code]}</property>
                                  </properties>
                                </inputColumn>
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                            <input
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 2]"
                              dangling="true"
                              hasSideEffects="true"
                              name="Union All Input 2">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1]"
                              name="Union All Output 1">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedQty]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedQty]"
                                  name="ParsedQty" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  length="15"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedItem]"
                                  name="ParsedItem" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedStore]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedStore]"
                                  name="ParsedStore" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedFpMd]"
                                  name="ParsedFpMd" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Store_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  length="7"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Store_BKey]"
                                  name="Store_BKey" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Partner_Id]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Partner_Id]"
                                  name="Partner_Id" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Partner_Code]"
                                  name="Partner_Code" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code"
                          componentClassID="DTSTransform.Lookup.3"
                          contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                          description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                          name="Check The Dune DW for Item Code"
                          usesDispositions="true"
                          version="6">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the SQL statement that generates the lookup table."
                              expressionType="Notify"
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">Select UPPER(LTRIM(RTRIM(Item_Code)))

 as Item_Code
,LTRIM(RTRIM(GTIN)) as GTIN 
,Item_Dim_Id
from Product_Dim</property>
                            <property
                              dataType="System.String"
                              description="Specifies a SQL statement that uses parameters to generate the lookup table."
                              expressionType="Notify"
                              name="SqlCommandParam"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (Select UPPER(LTRIM(RTRIM(Item_Code)))

 as Item_Code
,LTRIM(RTRIM(GTIN)) as GTIN 
,Item_Dim_Id
from Product_Dim) [refTable]
where [refTable].[GTIN] = ?</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of connection used to access the reference dataset."
                              name="ConnectionType"
                              typeConverter="LookupConnectionType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the cache type of the lookup table."
                              name="CacheType"
                              typeConverter="CacheType">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                              name="NoMatchBehavior"
                              typeConverter="LookupNoMatchBehavior">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                              name="NoMatchCachePercentage">0</property>
                            <property
                              dataType="System.Int32"
                              description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                              name="MaxMemoryUsage">25</property>
                            <property
                              dataType="System.Int64"
                              description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                              name="MaxMemoryUsage64">25</property>
                            <property
                              dataType="System.String"
                              description="Indicates whether to reference metadata in an XML format."
                              name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Item_Code" dataType="DT_STR" length="20" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="GTIN" dataType="DT_STR" length="15" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Item_Dim_Id" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                              name="ParameterMap">#{Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\361:invalid};</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                              name="TreatDuplicateKeysAsError">false</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Connections[OleDbConnection]"
                              connectionManagerID="{D4D5696D-0846-4E54-9532-91E01EAA1E84}:external"
                              connectionManagerRefId="Project.ConnectionManagers[Data_Warehouse]"
                              description="Connection manager used to access lookup data."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Inputs[Lookup Input]"
                              name="Lookup Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Inputs[Lookup Input].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="15"
                                  cachedName="ParsedItem"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedItem]">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Specifies the column in the reference table that a column joins."
                                      name="JoinToReferenceColumn">GTIN</property>
                                    <property
                                      dataType="System.Null"
                                      description="Specifies the column in the reference table from which a column is copied."
                                      name="CopyFromReferenceColumn" />
                                  </properties>
                                </inputColumn>
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup Match Output]"
                              errorOrTruncationOperation="Lookup"
                              exclusionGroup="1"
                              name="Lookup Match Output"
                              synchronousInputId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Inputs[Lookup Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup Match Output].Columns[Item_Dim_Id]"
                                  dataType="i4"
                                  errorOrTruncationOperation="Copy Column"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup Match Output].Columns[Item_Dim_Id]"
                                  name="Item_Dim_Id"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      dataType="System.String"
                                      description="Specifies the column in the reference table from which a column is copied."
                                      name="CopyFromReferenceColumn">Item_Dim_Id</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup No Match Output]"
                              description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                              exclusionGroup="1"
                              name="Lookup No Match Output"
                              synchronousInputId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Inputs[Lookup Input]">
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Lookup Error Output"
                              synchronousInputId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Inputs[Lookup Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage"
                          componentClassID="DTSAdapter.OLEDBDestination.3"
                          contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          name="Partner_Stock_Stage"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[dbo].[Partner_Stock_Stage]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">false</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">2147483647</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Connections[OleDbConnection]"
                              connectionManagerID="{f9082835-573f-4b99-905a-183d8460eeb8}:external"
                              connectionManagerRefId="Project.ConnectionManagers[Management]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="15"
                                  cachedName="ParsedItem"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItem]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedItem]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].Columns[ParsedStore]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="5"
                                  cachedName="ParsedStore"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedStore]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedStore]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].Columns[ParsedFpMd]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="1"
                                  cachedName="ParsedFpMd"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedFpMd]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[ParsedFpMd]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].Columns[Store_BKey]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="7"
                                  cachedName="Store_BKey"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[Store_BKey]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Store_BKey]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].Columns[Partner_Id]"
                                  cachedDataType="i4"
                                  cachedName="Partner_Id"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Id]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Partner_Id]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].Columns[Partner_Code]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="Partner_Code"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Code]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1].Columns[Partner_Code]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  length="15"
                                  name="ParsedItem" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedStore]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="ParsedStore" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  name="ParsedFpMd" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[Store_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  length="7"
                                  name="Store_BKey" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Id]"
                                  dataType="i4"
                                  name="Partner_Id" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  name="Partner_Code" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[Item_Dim_Id]"
                                  dataType="i4"
                                  name="Item_Dim_Id" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedDate]"
                                  dataType="dbDate"
                                  name="ParsedDate" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedIntransitQty]"
                                  dataType="i4"
                                  name="ParsedIntransitQty" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedOnHandQty]"
                                  dataType="i4"
                                  name="ParsedOnHandQty" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItemCost2]"
                                  dataType="numeric"
                                  name="ParsedItemCost2"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedRetailPrice]"
                                  dataType="numeric"
                                  name="ParsedRetailPrice"
                                  precision="19"
                                  scale="7" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage"
                          componentClassID="DTSAdapter.OLEDBSource.3"
                          contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                          description="OLE DB Source"
                          name="Stock_Stage"
                          usesDispositions="true"
                          version="7">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[dbo].[Stock_Stage]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">SELECT 
            CASE WHEN LEFT(LTRIM(RTRIM(ParsedItem)), 1) = '0' THEN [ParsedItem]
                 WHEN LEFT(LTRIM(RTRIM(ParsedItem)), 1) &lt;&gt; '0'
                 THEN RIGHT('0' + LTRIM(RTRIM(ParsedItem)), 15)
                 ELSE 'b'
            END ParsedItem ,
            ParsedStore ,
            ParsedFpMd ,
         ParsedIntransitQty ,
           ParsedOnHandQty ,
           ParsedItemCost2 ,
           ParsedRetailPrice ,
		   ParsedDate,
            Store_BKey ,
            Partner_Id ,
            Partner_Code
    FROM    dbo.Stock_Stage</property>
                            <property
                              dataType="System.String"
                              description="The variable that contains the SQL command to be executed."
                              name="SqlCommandVariable"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">2</property>
                            <property
                              dataType="System.String"
                              description="The mappings between the parameters in the SQL command and variables."
                              name="ParameterMapping"></property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Connections[OleDbConnection]"
                              connectionManagerID="{f9082835-573f-4b99-905a-183d8460eeb8}:external"
                              connectionManagerRefId="Project.ConnectionManagers[Management]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output]"
                              name="OLE DB Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedItem]"
                                  length="15"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedItem]"
                                  name="ParsedItem"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedStore]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedStore]"
                                  length="5"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedStore]"
                                  name="ParsedStore"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedFpMd]"
                                  length="1"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedFpMd]"
                                  name="ParsedFpMd"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Store_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[Store_BKey]"
                                  length="7"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Store_BKey]"
                                  name="Store_BKey"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Partner_Id]"
                                  dataType="i4"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[Partner_Id]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Partner_Id]"
                                  name="Partner_Id"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[Partner_Code]"
                                  length="4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[Partner_Code]"
                                  name="Partner_Code"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedIntransitQty]"
                                  dataType="i4"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedIntransitQty]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedIntransitQty]"
                                  name="ParsedIntransitQty"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedOnHandQty]"
                                  dataType="i4"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedOnHandQty]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedOnHandQty]"
                                  name="ParsedOnHandQty"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedItemCost2]"
                                  dataType="numeric"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedItemCost2]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedItemCost2]"
                                  name="ParsedItemCost2"
                                  precision="19"
                                  scale="7"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedRetailPrice]"
                                  dataType="numeric"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedRetailPrice]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedRetailPrice]"
                                  name="ParsedRetailPrice"
                                  precision="19"
                                  scale="7"
                                  truncationRowDisposition="FailComponent" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedDate]"
                                  dataType="dbDate"
                                  errorOrTruncationOperation="Conversion"
                                  errorRowDisposition="FailComponent"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedDate]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].Columns[ParsedDate]"
                                  name="ParsedDate"
                                  truncationRowDisposition="FailComponent" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  length="15"
                                  name="ParsedItem" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedStore]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="ParsedStore" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  name="ParsedFpMd" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[Store_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  length="7"
                                  name="Store_BKey" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[Partner_Id]"
                                  dataType="i4"
                                  name="Partner_Id" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  name="Partner_Code" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedIntransitQty]"
                                  dataType="i4"
                                  name="ParsedIntransitQty" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedOnHandQty]"
                                  dataType="i4"
                                  name="ParsedOnHandQty" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedItemCost2]"
                                  dataType="numeric"
                                  name="ParsedItemCost2"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedRetailPrice]"
                                  dataType="numeric"
                                  name="ParsedRetailPrice"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output].ExternalColumns[ParsedDate]"
                                  dataType="dbDate"
                                  name="ParsedDate" />
                              </externalMetadataColumns>
                            </output>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output]"
                              isErrorOut="true"
                              name="OLE DB Source Error Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  length="15"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedItem]"
                                  name="ParsedItem" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedStore]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedStore]"
                                  name="ParsedStore" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedFpMd]"
                                  name="ParsedFpMd" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedIntransitQty]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedIntransitQty]"
                                  name="ParsedIntransitQty" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedOnHandQty]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedOnHandQty]"
                                  name="ParsedOnHandQty" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedItemCost2]"
                                  dataType="numeric"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedItemCost2]"
                                  name="ParsedItemCost2"
                                  precision="19"
                                  scale="7" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedRetailPrice]"
                                  dataType="numeric"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedRetailPrice]"
                                  name="ParsedRetailPrice"
                                  precision="19"
                                  scale="7" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[Store_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  length="7"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[Store_BKey]"
                                  name="Store_BKey" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[Partner_Id]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[Partner_Id]"
                                  name="Partner_Id" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[Partner_Code]"
                                  name="Partner_Code" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedDate]"
                                  dataType="dbDate"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Error Output].Columns[ParsedDate]"
                                  name="ParsedDate" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW"
                          componentClassID="DTSTransform.DerivedColumn.3"
                          contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                          name="Unknown in DW"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Inputs[Derived Column Input]"
                              description="Input to the Derived Column Transformation"
                              name="Derived Column Input">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Outputs[Derived Column Output]"
                              description="Default Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              name="Derived Column Output"
                              synchronousInputId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Outputs[Derived Column Output].Columns[Unknown_Item_Dim_Id]"
                                  dataType="i4"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Outputs[Derived Column Output].Columns[Unknown_Item_Dim_Id]"
                                  name="Unknown_Item_Dim_Id"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">@[User::UnknownItem_Dim_Id]</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">@[User::UnknownItem_Dim_Id]</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Outputs[Derived Column Error Output]"
                              description="Error Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Derived Column Error Output"
                              synchronousInputId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two.Paths[Derived Column Output]"
                          endId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 1]"
                          name="Derived Column Output"
                          startId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Outputs[Derived Column Output]" />
                        <path
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two.Paths[Lookup Match Output]"
                          endId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Inputs[Union All Input 6]"
                          name="Lookup Match Output"
                          startId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup Match Output]" />
                        <path
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two.Paths[Lookup No Match Output]"
                          endId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW.Inputs[Derived Column Input]"
                          name="Lookup No Match Output"
                          startId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Outputs[Lookup No Match Output]" />
                        <path
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two.Paths[OLE DB Source Output]"
                          endId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code.Inputs[Lookup Input]"
                          name="OLE DB Source Output"
                          startId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage.Outputs[OLE DB Source Output]" />
                        <path
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two.Paths[Union All Output 1]"
                          endId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage.Inputs[OLE DB Destination Input]"
                          name="Union All Output 1"
                          startId="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns.Outputs[Union All Output 1]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
                <DTS:Executable
                  DTS:refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock"
                  DTS:CreationName="SSIS.Pipeline.3"
                  DTS:DelayValidation="True"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{303B77A7-3ECC-4C4F-802D-CBD42C58469E}"
                  DTS:ExecutableType="SSIS.Pipeline.3"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Stage Stock"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <pipeline
                      version="1">
                      <components>
                        <component
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source"
                          componentClassID="DTSAdapter.RawSource.3"
                          contactInfo="Reads raw data from a flat file that was previously written by the Raw File destination. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers.;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="Reads raw data from a flat file that was previously written by the Raw File destination. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers."
                          name="Raw File Source"
                          version="1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the file."
                              name="AccessMode"
                              typeConverter="AccessMode">1</property>
                            <property
                              dataType="System.Null"
                              description="Output file name"
                              name="FileName"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.NonValidatingFileNameEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
                            <property
                              dataType="System.String"
                              description="Name of the variable that contains the file name"
                              name="FileNameVariable">User::Stock_RAW_FQN</property>
                          </properties>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output]"
                              name="Raw File Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedStore]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedStore]"
                                  length="6"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedStore]"
                                  name="ParsedStore" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedDate]"
                                  dataType="dbDate"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedDate]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedDate]"
                                  name="ParsedDate" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedItem]"
                                  length="14"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedItem]"
                                  name="ParsedItem" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedFpMd]"
                                  length="1"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedFpMd]"
                                  name="ParsedFpMd" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedIntransitQty]"
                                  dataType="i4"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedIntransitQty]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedIntransitQty]"
                                  name="ParsedIntransitQty" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedOnHandQty]"
                                  dataType="i4"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedOnHandQty]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedOnHandQty]"
                                  name="ParsedOnHandQty" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedRetailPrice]"
                                  dataType="numeric"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedRetailPrice]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedRetailPrice]"
                                  name="ParsedRetailPrice"
                                  precision="19"
                                  scale="7" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedItemCost2]"
                                  dataType="numeric"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedItemCost2]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedItemCost2]"
                                  name="ParsedItemCost2"
                                  precision="19"
                                  scale="7" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[Store_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Store_BKey]"
                                  length="7"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[Store_BKey]"
                                  name="Store_BKey" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[Partner_Id]"
                                  dataType="i4"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Partner_Id]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[Partner_Id]"
                                  name="Partner_Id" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Partner_Code]"
                                  length="4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[Partner_Code]"
                                  name="Partner_Code" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[DWStoreNumber]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[DWStoreNumber]"
                                  length="5"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[DWStoreNumber]"
                                  name="DWStoreNumber" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedStore]"
                                  codePage="1252"
                                  dataType="str"
                                  length="6"
                                  name="ParsedStore" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedDate]"
                                  dataType="dbDate"
                                  name="ParsedDate" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  length="14"
                                  name="ParsedItem" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  name="ParsedFpMd" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedIntransitQty]"
                                  dataType="i4"
                                  name="ParsedIntransitQty" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedOnHandQty]"
                                  dataType="i4"
                                  name="ParsedOnHandQty" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedRetailPrice]"
                                  dataType="numeric"
                                  name="ParsedRetailPrice"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[ParsedItemCost2]"
                                  dataType="numeric"
                                  name="ParsedItemCost2"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Store_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  length="7"
                                  name="Store_BKey" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Partner_Id]"
                                  dataType="i4"
                                  name="Partner_Id" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  name="Partner_Code" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].ExternalColumns[DWStoreNumber]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="DWStoreNumber" />
                              </externalMetadataColumns>
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage"
                          componentClassID="DTSAdapter.OLEDBDestination.3"
                          contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          name="Stage"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[dbo].[Stock_Stage]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">false</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS,ROWS_PER_BATCH = 10000</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">2147483647</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Connections[OleDbConnection]"
                              connectionManagerID="{f9082835-573f-4b99-905a-183d8460eeb8}:external"
                              connectionManagerRefId="Project.ConnectionManagers[Management]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[ParsedStore]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="6"
                                  cachedName="ParsedStore"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedStore]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedStore]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[ParsedDate]"
                                  cachedDataType="dbDate"
                                  cachedName="ParsedDate"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedDate]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedDate]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="14"
                                  cachedName="ParsedItem"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItem]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedItem]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[ParsedFpMd]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="1"
                                  cachedName="ParsedFpMd"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedFpMd]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedFpMd]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[ParsedIntransitQty]"
                                  cachedDataType="i4"
                                  cachedName="ParsedIntransitQty"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedIntransitQty]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedIntransitQty]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[ParsedOnHandQty]"
                                  cachedDataType="i4"
                                  cachedName="ParsedOnHandQty"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedOnHandQty]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedOnHandQty]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[ParsedRetailPrice]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedRetailPrice"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedRetailPrice]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedRetailPrice]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[ParsedItemCost2]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedItemCost2"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItemCost2]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[ParsedItemCost2]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[Store_BKey]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="7"
                                  cachedName="Store_BKey"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[Store_BKey]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[Store_BKey]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[Partner_Id]"
                                  cachedDataType="i4"
                                  cachedName="Partner_Id"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Id]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[Partner_Id]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].Columns[Partner_Code]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="Partner_Code"
                                  externalMetadataColumnId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Code]"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output].Columns[Partner_Code]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  length="15"
                                  name="ParsedItem" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedStore]"
                                  codePage="1252"
                                  dataType="str"
                                  length="5"
                                  name="ParsedStore" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedDate]"
                                  dataType="dbDate"
                                  name="ParsedDate" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  name="ParsedFpMd" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedIntransitQty]"
                                  dataType="i4"
                                  name="ParsedIntransitQty" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedOnHandQty]"
                                  dataType="i4"
                                  name="ParsedOnHandQty" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItemCost2]"
                                  dataType="numeric"
                                  name="ParsedItemCost2"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[ParsedRetailPrice]"
                                  dataType="numeric"
                                  name="ParsedRetailPrice"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[Store_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  length="7"
                                  name="Store_BKey" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Id]"
                                  dataType="i4"
                                  name="Partner_Id" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  name="Partner_Code" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock.Paths[Raw File Source Output]"
                          endId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage.Inputs[OLE DB Destination Input]"
                          name="Raw File Source Output"
                          startId="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source.Outputs[Raw File Source Output]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
              <DTS:PrecedenceConstraints>
                <DTS:PrecedenceConstraint
                  DTS:refId="Package\ETL\Foreach Stock File (ST)\Stage.PrecedenceConstraints[Constraint]"
                  DTS:CreationName=""
                  DTS:DTSID="{14E4DCF4-8071-4B51-8E9A-A6CD1B386429}"
                  DTS:From="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock"
                  DTS:LogicalAnd="True"
                  DTS:ObjectName="Constraint"
                  DTS:To="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two" />
              </DTS:PrecedenceConstraints>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Stock File (ST)\Truncate Staging Table"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{FF89687A-1CDA-47AE-8B19-279478BF420A}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate Staging Table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="TRUNCATE TABLE Stock_Stage;&#xA;TRUNCATE TABLE Partner_Stock_Stage&#xA;TRUNCATE TABLE Item_MappedTo_Stock" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{61E65E28-E190-49D6-9AD9-58150A7C842B}"
              DTS:From="Package\ETL\Foreach Stock File (ST)\Data_Error False"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL\Foreach Stock File (ST)\RAW Stock" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{18716CF7-CDA5-4E3A-AA23-6A27851BE908}"
              DTS:From="Package\ETL\Foreach Stock File (ST)\Log File Success"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL\Foreach Stock File (ST)\Merge Stock AP" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{4973EB3E-8DDF-4196-A4FC-E1B967283704}"
              DTS:From="Package\ETL\Foreach Stock File (ST)\Stage"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\ETL\Foreach Stock File (ST)\Archive File" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{2B9D8B7F-D847-4B2B-B2DD-EF9CF59E9479}"
              DTS:From="Package\ETL\Foreach Stock File (ST)\Truncate Staging Table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\ETL\Foreach Stock File (ST)\Log File Process Starting" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{BB1ECC34-6D6E-4308-91AE-68ED33089170}"
              DTS:From="Package\ETL\Foreach Stock File (ST)\Log File Process Starting"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\ETL\Foreach Stock File (ST)\Data_Error False" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{A4D039FE-7A09-4C90-8232-8C19AF10DA04}"
              DTS:From="Package\ETL\Foreach Stock File (ST)\Email and Archive"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\ETL\Foreach Stock File (ST)\Log File Failed" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 8]"
              DTS:CreationName=""
              DTS:DTSID="{4932F27E-83A1-4358-AC4F-88385F28CD97}"
              DTS:From="Package\ETL\Foreach Stock File (ST)\Archive File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 8"
              DTS:To="Package\ETL\Foreach Stock File (ST)\Log File Success" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Has Errors]"
              DTS:CreationName=""
              DTS:DTSID="{D294CBE6-0318-4AB6-9A1B-C450339F97BA}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::Data_Error]==TRUE"
              DTS:From="Package\ETL\Foreach Stock File (ST)\RAW Stock"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Has Errors"
              DTS:To="Package\ETL\Foreach Stock File (ST)\Email and Archive" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[No Errors]"
              DTS:CreationName=""
              DTS:DTSID="{B666E52C-2D07-4CF6-8B6B-2BBAD46ABA3C}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::Data_Error]==FALSE"
              DTS:From="Package\ETL\Foreach Stock File (ST)\RAW Stock"
              DTS:LogicalAnd="True"
              DTS:ObjectName="No Errors"
              DTS:To="Package\ETL\Foreach Stock File (ST)\Stage" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{D636E9FD-37C6-468D-957C-377D2A395AA1}"
              DTS:ObjectName="{D636E9FD-37C6-468D-957C-377D2A395AA1}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::File_Name" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\ETL.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{DAA05F82-3256-4C40-A956-8AE58841B5B0}"
          DTS:EventID="171977484"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{A911A116-44C6-4D11-B485-3141CDA936BB}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">0</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL.EventHandlers[OnError]\Success False"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Expression Task"
              DTS:DTSID="{BDE76947-87B5-4ED3-954A-6B5B62AB748F}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Success False"
              DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; � 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::Success]=false" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Partner Codes"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F867E1E4-D9E9-48AB-AF2E-359C2773E003}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Partner Codes"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
          SQLTask:SqlStatementSource="Select Partner_Id,SUBSTRING(Partner_Code,1,2) from Partner_LookUp where partner_code = ?"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Partner_Id" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="1"
            SQLTask:DtsVariableName="User::Partner_Code" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::PartnerCode"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Log End"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F5E526E9-E3A4-4976-87EE-13282ED912AB}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Log End"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
          SQLTask:SqlStatementSource="EXEC dbo.EtlProcessLogInsert&#xA;    @EtlName = 'Partner_Stock_to_DWt'&#xA;   , -- varchar(1000)&#xA;    @EtlFileName = ''&#xA;   , -- varchar(1000)&#xA;    @EtlMessage = '===== Stock To DW has finished. =====' -- varchar(1000)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{D673C173-55C1-4F12-9531-56B987FACC1C}"
      DTS:From="Package\ETL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Log End" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{8660950E-C35F-4585-86B1-AE190454E45F}"
      DTS:From="Package\Get Partner Codes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\ETL" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="135,42"
          Id="Package\ETL\Foreach Stock File (ST)\Archive File"
          TopLeft="56.0000000000001,721.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\ETL\Foreach Stock File (ST)\Data_Error False"
          TopLeft="305,209.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\ETL\Foreach Stock File (ST)\Email and Archive"
          TopLeft="315,482.5" />
        <NodeLayout
          Size="148,42"
          Id="Package\ETL\Foreach Stock File (ST)\Log File Failed"
          TopLeft="324.5,590.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\ETL\Foreach Stock File (ST)\Log File Process Starting"
          TopLeft="286.5,107.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\ETL\Foreach Stock File (ST)\Log File Success"
          TopLeft="44.5000000000001,823.5" />
        <NodeLayout
          Size="155,42"
          Id="Package\ETL\Foreach Stock File (ST)\Merge Stock AP"
          TopLeft="46.0000000000001,925.5" />
        <NodeLayout
          Size="133,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock"
          TopLeft="318,311.5" />
        <NodeLayout
          Size="225,42"
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two"
          TopLeft="3.50000000000001,120.5" />
        <NodeLayout
          Size="136,42"
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock"
          TopLeft="47,24.5" />
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\Stage.PrecedenceConstraints[Constraint]"
          TopLeft="115.5,66.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="236,218"
          Size="236,260"
          Id="Package\ETL\Foreach Stock File (ST)\Stage"
          TopLeft="5.50000000000006,413.5" />
        <NodeLayout
          Size="190,42"
          Id="Package\ETL\Foreach Stock File (ST)\Truncate Staging Table"
          TopLeft="289.5,5.5" />
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint]"
          TopLeft="384.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 1]"
          TopLeft="123.5,865.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 2]"
          TopLeft="123.5,673.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 4]"
          TopLeft="384.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 6]"
          TopLeft="384.5,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 7]"
          TopLeft="398,524.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66"
              Start="0,0"
              End="0,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Constraint 8]"
          TopLeft="123.5,763.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Has Errors]"
          TopLeft="401.416666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,129"
              Start="0,0"
              End="0,121.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,121.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-32.35123046875,52.75,64.7024609375,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[No Errors]"
          TopLeft="363.666666666667,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-240.166666666667,60"
              Start="0,0"
              End="-240.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.4279346210996" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.4279346210996"
                    Point2="0,24.4279346210996"
                    Point3="-4,24.4279346210996" />
                  <mssgle:LineSegment
                    End="-236.166666666667,24.4279346210996" />
                  <mssgle:CubicBezierSegment
                    Point1="-236.166666666667,24.4279346210996"
                    Point2="-240.166666666667,24.4279346210996"
                    Point3="-240.166666666667,28.4279346210996" />
                  <mssgle:LineSegment
                    End="-240.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-150.254563802083,29.4279346210996,60.3424609375,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="488,1023"
          Size="488,1066"
          Id="Package\ETL\Foreach Stock File (ST)"
          TopLeft="5.50000000000014,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="499,1127"
          Size="499,1170"
          Id="Package\ETL"
          TopLeft="5.50000000000017,107.5" />
        <NodeLayout
          Size="167,42"
          Id="Package\Get Partner Codes"
          TopLeft="171.5,5.5" />
        <NodeLayout
          Size="119,42"
          Id="Package\Log End"
          TopLeft="195.5,1337.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="255,1277.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="255,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\ETL.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\ETL.EventHandlers[OnError]\Success False"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <DtsEventHandler
    design-time-name="Package\ETL\Foreach Stock File (ST)\Merge Stock AP.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\ETL\Foreach Stock File (ST)\Merge Stock AP.EventHandlers[OnError]\Execute SQL Task"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\ETL\Foreach Stock File (ST)\RAW Stock">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="164,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\Check Store Error"
          TopLeft="429.5,770" />
        <NodeLayout
          Size="140,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU"
          TopLeft="300,284" />
        <NodeLayout
          Size="177,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\Raw File Destination"
          TopLeft="423,872.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\Union All"
          TopLeft="451,424" />
        <NodeLayout
          Size="156,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\Derived Column"
          TopLeft="430,603.5" />
        <NodeLayout
          Size="105,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\GTIN"
          TopLeft="320,192" />
        <NodeLayout
          Size="132,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\Parse Data"
          TopLeft="444.5,514" />
        <NodeLayout
          Size="126,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\Stock File"
          TopLeft="306.5,23" />
        <NodeLayout
          Size="163,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\Add Line Number"
          TopLeft="289,115.5" />
        <NodeLayout
          Size="168,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\Store Exists in DW"
          TopLeft="427.5,682" />
        <NodeLayout
          Size="167,42"
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode"
          TopLeft="564,282" />
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Union All Output 1]"
          TopLeft="511.5,466">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Output 02]"
          TopLeft="511.5,812">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.5"
              Start="0,0"
              End="0,53">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,20.783203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Output 01]"
          TopLeft="371.5,157.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.5"
              Start="0,0"
              End="0,27">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Output 0]"
          TopLeft="509.25,556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.5"
              Start="0,0"
              End="0,40">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,14.283203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Lookup No Match Output]"
          TopLeft="440,304">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="124,0"
              Start="0,0"
              End="116.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="116.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="2.44361328125,5,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Lookup Match Output2]"
          TopLeft="370,326">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="123.333333333333,98"
              Start="0,0"
              End="123.333333333333,90.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.0449438202247" />
                  <mssgle:CubicBezierSegment
                    Point1="0,54.0449438202247"
                    Point2="0,58.0449438202247"
                    Point3="4,58.0449438202247" />
                  <mssgle:LineSegment
                    End="119.333333333333,58.0449438202247" />
                  <mssgle:CubicBezierSegment
                    Point1="119.333333333333,58.0449438202247"
                    Point2="123.333333333333,58.0449438202247"
                    Point3="123.333333333333,62.0449438202247" />
                  <mssgle:LineSegment
                    End="123.333333333333,90.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="13.4752799479165,63.0449438202247,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Lookup Match Output1]"
          TopLeft="511.5,724">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,13.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Lookup Match Output]"
          TopLeft="667.5,324">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-135.833333333333,100"
              Start="0,0"
              End="-135.833333333333,92.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.2295345104334" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.2295345104334"
                    Point2="0,59.2295345104334"
                    Point3="-4,59.2295345104334" />
                  <mssgle:LineSegment
                    End="-131.833333333333,59.2295345104334" />
                  <mssgle:CubicBezierSegment
                    Point1="-131.833333333333,59.2295345104334"
                    Point2="-135.833333333333,59.2295345104334"
                    Point3="-135.833333333333,63.2295345104334" />
                  <mssgle:LineSegment
                    End="-135.833333333333,92.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-116.108053385417,64.2295345104334,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Flat File Source Output]"
          TopLeft="370,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.5"
              Start="0,0"
              End="0,43">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Derived Column Output1]"
          TopLeft="509.75,645.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.5"
              Start="0,0"
              End="0,29">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\RAW Stock.Paths[Derived Column Output]"
          TopLeft="371.25,234">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_SKU">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ETL\Foreach Stock File (ST)\RAW Stock\Lookup_ItemCode">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="139,42"
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage"
          TopLeft="313.5,37.5" />
        <NodeLayout
          Size="177,42"
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage"
          TopLeft="332.5,461" />
        <NodeLayout
          Size="157,42"
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Unknown in DW"
          TopLeft="74.5,247.5" />
        <NodeLayout
          Size="247,42"
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Check The Dune DW for Item Code"
          TopLeft="260.5,149.5" />
        <NodeLayout
          Size="150,42"
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Add unknowns"
          TopLeft="347,331.5" />
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two.Paths[Union All Output 1]"
          TopLeft="421.5,373.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,87.5"
              Start="0,0"
              End="0,80">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two.Paths[OLE DB Source Output]"
          TopLeft="383.5,79.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70"
              Start="0,0"
              End="0,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two.Paths[Lookup No Match Output]"
          TopLeft="384,191.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-231,56"
              Start="0,0"
              End="-231,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24"
                    Point2="0,28"
                    Point3="-4,28" />
                  <mssgle:LineSegment
                    End="-227,28" />
                  <mssgle:CubicBezierSegment
                    Point1="-227,28"
                    Point2="-231,28"
                    Point3="-231,32" />
                  <mssgle:LineSegment
                    End="-231,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-171.30638671875,33,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two.Paths[Lookup Match Output]"
          TopLeft="422.916666666667,191.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,140"
              Start="0,0"
              End="0,132.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,132.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,60.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two.Paths[Derived Column Output]"
          TopLeft="153,289.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="245.333333333333,42"
              Start="0,0"
              End="245.333333333333,34.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.934036939314" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.934036939314"
                    Point2="0,24.934036939314"
                    Point3="4,24.934036939314" />
                  <mssgle:LineSegment
                    End="241.333333333333,24.934036939314" />
                  <mssgle:CubicBezierSegment
                    Point1="241.333333333333,24.934036939314"
                    Point2="245.333333333333,24.934036939314"
                    Point3="245.333333333333,28.934036939314" />
                  <mssgle:LineSegment
                    End="245.333333333333,34.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Stock_Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\ETL\Foreach Stock File (ST)\Stage\Match and Load To Stage Two\Partner_Stock_Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="108,42"
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage"
          TopLeft="65.5,144.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Raw File Source"
          TopLeft="40,16" />
        <EdgeLayout
          Id="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock.Paths[Raw File Source Output]"
          TopLeft="118.75,58">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,86.5"
              Start="0,0"
              End="0,79">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\ETL\Foreach Stock File (ST)\Stage\Stage Stock\Stage">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PrecedenceConstraint
    design-time-name="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[Has Errors]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package\ETL\Foreach Stock File (ST).PrecedenceConstraints[No Errors]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>