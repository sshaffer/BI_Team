<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/20/2013 1:53:01 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="JWOLFITZ-IT"
  DTS:CreatorName="DUNE\jwolfisz"
  DTS:DTSID="{37BFBB43-9395-41EF-B023-AC3C74548AFE}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="2057"
  DTS:ObjectName="Product"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="555"
  DTS:VersionGUID="{FBB77519-6FFF-4A19-93F2-BBEFB7AD49D2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DuneSMTP]"
      DTS:CreationName="SMTP"
      DTS:DTSID="{F8EC5ED9-C6D2-4EF3-8F28-8970A71020D6}"
      DTS:ObjectName="DuneSMTP">
      <DTS:ObjectData>
        <SmtpConnectionManager
          ConnectionString="SmtpServer=smtp-relay.dune.co.uk;UseWindowsAuthentication=False;EnableSsl=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Products_File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{A059FF4B-EBEF-4A33-8524-B0897E1B0F0A}"
      DTS:ObjectName="Products_File">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::Products_File_FQN]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2057"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ITEM"
              DTS:DTSID="{BD13B9D7-9959-465A-AD5B-1982B98A5F34}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName=" ITEM_COST1"
              DTS:DTSID="{46F062CC-3694-4414-AE59-8712FD92E67D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName=" CURRENT_SEASON"
              DTS:DTSID="{D90BDDA7-CEF1-43F4-BA23-B5127F0F7B3C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName=" ORIGINAL_SEASON"
              DTS:DTSID="{BB04E05E-D688-450B-9E1A-3103D7420693}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName=" FP_MD"
              DTS:DTSID="{C9E7281C-2AEE-41B7-829B-DC8C283E2602}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName=" ORIGINAL_PRICE"
              DTS:DTSID="{AA251BEE-29E0-4C0F-899F-B34D5875DB70}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName=" TICKET_PRICE"
              DTS:DTSID="{0D9F1790-4CEA-48A0-A471-2EABDB578F43}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2227B0B7-3AC5-47A1-85F1-6F4DC6A8DFDC}"
      DTS:ObjectName="PartnerCode">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{218A4777-57C6-47D2-8260-75541F18E188}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Data_Error">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F1FF3F82-6D5A-4426-A5FB-3E16410A2C67}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ErrorMessageOutput">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B16C90F3-DB76-4299-976E-93568FF07E6A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Error_Messages">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{238D5D5C-A5DD-4163-B046-C3CC2F66AF86}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="SUBSTRING( @[User::FilePartnerCode] ,4,2)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePartnerCode">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{38B79157-64A5-478D-9CAB-68D56B090C11}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::FilePath]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">\\Bisdw-cl01\FTP\Partner\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8C9FD33E-4CAC-4995-898A-8CFBD97DF1E4}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="File_Name">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{551250A2-AB28-49B4-8D59-EFFAC7A0192F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::SourceFolder] +  @[$Package::PartnerCode]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullPartnerPath">
      <DTS:VariableValue
        DTS:DataType="8">\\Bisdw-cl01\FTP\Partner\Source\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BEE08D9E-0ABF-4BC6-9DF8-F54151DE37FC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::ArchiveFolder] +  @[$Package::PartnerCode] + &quot;\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Full_Archive_Path">
      <DTS:VariableValue
        DTS:DataType="8">\\Bisdw-cl01\FTP\Partner\Archive\\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{02E60E8B-E36A-489D-AEA3-491058227338}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="IP_Table_Name">
      <DTS:VariableValue
        DTS:DataType="8">IPDIVSN</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{80627821-9784-439B-B837-096F07A4C645}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Last_Id">
      <DTS:VariableValue
        DTS:DataType="17">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C0EEE2C8-BB9A-4BDC-83A5-38AF82125A2E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Load_Id">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D8710D0-7ABF-485E-8A69-4BB6A27C90CB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Load_Log_Id">
      <DTS:VariableValue
        DTS:DataType="20">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5A8AA4B8-AB36-4E02-8B3E-6449BD410896}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PartnerName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6E053BFA-49B5-431B-92D3-F981055F391E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Partner_Code">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FBE1BC7F-6ABD-4EDD-8246-49D53A84CAC0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Partner_Folder">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B87A343F-9FD2-49F0-BEBF-FD503E2D1D47}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Partner_Id">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1213FE28-1EC2-417C-BDCF-E24F7331596F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Process_Date">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C8D0E104-4E55-460C-91E8-AD74B93F30E0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::File_Name]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Products_File_FQN">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C3A2745B-8611-4B45-AC25-FF3DE6D8F62C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::Partner_RAW_Folder] + @[User::Partner_Code] + &quot;\\&quot; +  &quot;Products.RAW&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Products_RAW_FQN">
      <DTS:VariableValue
        DTS:DataType="8">\\Bisdw-cl01\FTP\Partner\Cache\RAW\Partner\\Products.RAW</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DFF16DB2-24E5-42D4-9212-6E7AB7650AA2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Row_Count">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9E5140D4-01BC-43DD-8309-5FBC9AFA38BF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Source">
      <DTS:VariableValue
        DTS:DataType="8">Apparel</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE4D049B-F25A-4B5F-875B-25CF3703DC82}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Success">
      <DTS:VariableValue
        DTS:DataType="11">-1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F7886C55-A51E-475C-AA2D-BFD96CD9D981}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Table_Name">
      <DTS:VariableValue
        DTS:DataType="8">Product</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{94D4A085-80B2-4472-A76E-0BEA01A0A78B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Technical_Contacts">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\ETL"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{DC4AC80C-5B11-40DE-A7C6-1D6FC78762AF}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="ETL">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\ETL\AP Merge Products to DW"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{479156D5-6B0F-492D-81EA-F970C671C04D}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="AP Merge Products to DW"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
              SQLTask:SqlStatementSource="EXEC dbo.AP_ProductToDW;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL\ED Merge Products to DW"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{FA642DD1-5B26-4FF5-B68A-1E76851F6B50}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="ED Merge Products to DW"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
              SQLTask:SqlStatementSource="EXEC dbo.ED_ProductToDW;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL\Foreach Product File (PR)"
          DTS:CreationName="STOCK:FOREACHLOOP"
          DTS:Description="Foreach Loop Container"
          DTS:DTSID="{2101EE0C-CC58-496A-86E9-BAAD38BCA41B}"
          DTS:ExecutableType="STOCK:FOREACHLOOP"
          DTS:LocaleID="-1"
          DTS:ObjectName="Foreach Product File (PR)">
          <DTS:ForEachEnumerator
            DTS:CreationName="DTS.ForEachFileEnumerator.3"
            DTS:DTSID="{E1226476-4903-448A-BF56-90124D9AF20C}"
            DTS:ObjectName="{E1226476-4903-448A-BF56-90124D9AF20C}">
            <DTS:PropertyExpression
              DTS:Name="Directory">@[User::FullPartnerPath]</DTS:PropertyExpression>
            <DTS:ObjectData>
              <ForEachFileEnumeratorProperties>
                <FEFEProperty
                  Folder="\\Bisdw-cl01\FTP\Partner\Source\" />
                <FEFEProperty
                  FileSpec="PR_*.csv" />
                <FEFEProperty
                  FileNameRetrievalType="0" />
                <FEFEProperty
                  Recurse="0" />
              </ForEachFileEnumeratorProperties>
            </DTS:ObjectData>
          </DTS:ForEachEnumerator>
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Archive File"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{0DDDA12B-3623-472D-88FF-6B223DC0007B}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Archive File"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_9b03573421024ad7ad5dc22949fda44c"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Full_Archive_Path,User::Products_File_FQN">
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
#endregion

namespace ST_9b03573421024ad7ad5dc22949fda44c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            Variables vars = null;

            /* Archive the file to archive folder */
            Dts.VariableDispenser.LockOneForRead("User::Full_Archive_Path", ref vars);
            string ArchiveFolder = vars["User::Full_Archive_Path"].Value.ToString();
            vars.Unlock();

            Dts.VariableDispenser.LockOneForRead("User::Products_File_FQN", ref vars);
            string ProductsFileFQN = vars["User::Products_File_FQN"].Value.ToString();
            vars.Unlock();

            string FileName = Path.GetFileName(ProductsFileFQN);

            string ArchiveFileFQN = ArchiveFolder + FileName;

            try
            {
                /* Check if file exists */
                if (File.Exists(ArchiveFileFQN))
                {
                    /* Add ticks to the end to make it unique if it exists */
                    File.Move(ArchiveFileFQN, ArchiveFileFQN + "." + DateTime.Now.Ticks.ToString());
                }

                File.Move(ProductsFileFQN, ArchiveFileFQN);

                /* dont set success if its failed before */
                if (Dts.TaskResult != (int)ScriptResults.Failure)
                {
                    Dts.TaskResult = (int)ScriptResults.Success;
                }
            }
            catch (IOException e)
            {
                Dts.Events.FireError(-1, "Error Archive", "Unable to move or rename file. Erorr Message: " + e.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_9b03573421024ad7ad5dc22949fda44c.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{8878498F-B4A3-4B5A-9BE4-106C5A171AAC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_9b03573421024ad7ad5dc22949fda44c</RootNamespace>
    <AssemblyName>ST_9b03573421024ad7ad5dc22949fda44c</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{C51432DE-6978-4E0D-B6A0-C151679CC3FC}</msb:ProjectId>
		<msb:CodeName>ST_9b03573421024ad7ad5dc22949fda44c</msb:CodeName>
		<msb:DisplayName>ST_9b03573421024ad7ad5dc22949fda44c</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_9b03573421024ad7ad5dc22949fda44c.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9b03573421024ad7ad5dc22949fda44c.Properties.Settings.get_Default():ST_9b03573421024ad7ad5dc22949fda44c.Properties.Sett" +
    "ings")]

namespace ST_9b03573421024ad7ad5dc22949fda44c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_9b03573421024ad7ad5dc22949fda44c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_9b03573421024ad7ad5dc22949fda44c")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9b03573421024ad7ad5dc22949fda44c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9b03573421024ad7ad5dc22949fda44c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_9b03573421024ad7ad5dc22949fda44c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_9b03573421024ad7ad5dc22949fda44c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_9b03573421024ad7ad5dc22949fda44c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_9b03573421024ad7ad5dc22949fda44c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGNKVFYAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAbjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQxAABXAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
MQAAAAAAAEgAAAACAAUAuCIAAFwOAAABAAAAAAAAAAAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABswBgAaAQAAAgAAERQKAigWAAAKbxcAAApycwAAcBIAbxgAAAoGcnMA
AHBvGQAACm8aAAAKbxsAAAoLBm8cAAAKAigWAAAKbxcAAApyowAAcBIAbxgAAAoGcqMAAHBvGQAA
Cm8aAAAKbxsAAAoMBm8cAAAKCCgdAAAKDQcJKB4AAAoTBBEEKB8AAAosKhEEEQRy0wAAcCggAAAK
EwYSBighAAAKEwcSBygiAAAKKCMAAAooJAAACggRBCgkAAAKAigWAAAKbyUAAAoXLgwCKBYAAAoW
byYAAArePhMFAigWAAAKbycAAAoVctcAAHBy8wAAcBEFbygAAAooHgAACnJRAQBwFm8pAAAKJgIo
FgAAChdvJgAACt4AAigWAAAKFm8mAAAKKgAAARAAAAAAeABXzwA+JgAAAR4CKCoAAAoqAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABIBAAAI34AALQE
AACUBgAAI1N0cmluZ3MAAAAASAsAAFQBAAAjVVMAnAwAABAAAAAjR1VJRAAAAKwMAACwAQAAI0Js
b2IAAAAAAAAAAgAAAVcdogEJAwAAAPolMwAWAAABAAAAJgAAAAUAAAAGAAAACQAAAAEAAAAqAAAA
AgAAAA8AAAACAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAACgABAAAAAAAGAMEAugAK
AN0AyAAOAD0BFAEGAFkBugAGAG8BXgEGAKABiwEGAFcCPQIGAIICcAIGAJkCcAIGALYCcAIGANUC
cAIGAO4CcAIGAAcDcAIGACIDcAIGAD0DcAIGAFYDcAIGAI8DbwMGAK8DbwMGAOADzQMGAP0DugAG
AAIEugAGACYEcAIKAFIEPAQKAGsEPAQGAIAEbwMOAKIEFAEOAMQEFAESAB0F/QQSAEUF/QQSAF4F
/QQGAJQFigUGAKUFugAGALMFigUGAL8FugAGANoFugAOAAMGFAEGACIGugAGAEIGigUAAAAAAQAA
AAAAAQABAAAAEAAyADwABQABAAEAAAEQAGsAPAAJAAMABQABABAAdAB/AA0ABAAIAAMBAACjAAAA
EQAEAAoAEQB/ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAUCAAAAAAgxi8ARsAAQBY
IAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCgIAAAAACWCAYCPQACALMg
AAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACAPQhAAAAAIYYvAEbAAIAAAAB
ADcCOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgA
gQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsAoQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8
ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAvBZIA4QBPBZcA6QBnBZ8A8QBwBaUACQB6BakA6QCDBRsA
+QCZBa0AAQGsBbIACQG4BbgAEQHIBb0AEQHQBcMAGQF6BakAAQGsBccACQHgBc4A2QDlBdQA2QD0
BV0A2QAXBtgAKQEsBqkAIQE4Bt4AGQC8ARsACAAUAE4ACAAYAFMAKQCTAIAALgAbAGgBLgAjAGgB
LgBjAI4BLgALAPcALgATAD8BLgAzAD8BLgArAGgBLgA7AG4BLgBDAGgBLgBbAIUBQwBrAFMASQCT
AIAAYQCbAFMAgwCrAFMAdQDnAAIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMAAgADAAUA
AQAEAAUAAgAFAAcABIAAAAEAAACuFvFQAAAAAAAAfwAAAAQAAAAAAAAAAAAAAAEAsQAAAAAABAAA
AAAAAAAAAAAAAQC6AAAAAAALAAAAAAAAAAAAAAAKAPUAAAAAAAsAAAAAAAAAAAAAAAoA3gQAAAAA
AAAAAAEAAABOBgAABQAEAAAAADxNb2R1bGU+AFNUXzliMDM1NzM0MjEwMjRhZDdhZDVkYzIyOTQ5
ZmRhNDRjLmRsbABSZXNvdXJjZXMAU1RfOWIwMzU3MzQyMTAyNGFkN2FkNWRjMjI5NDlmZGE0NGMu
UHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUXzliMDM1NzM0MjEwMjRhZDdhZDVkYzIy
OTQ5ZmRhNDRjAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdl
cgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1
bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBD
dWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBT
dWNjZXNzAEZhaWx1cmUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5
Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNz
ZW1ibHkAZ2V0X0Fzc2VtYmx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
LmNjdG9yAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBTY3JpcHRPYmplY3RNb2Rl
bABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlRGlzcGVuc2VyAGdldF9WYXJpYWJsZURpc3BlbnNlcgBW
YXJpYWJsZXMATG9ja09uZUZvclJlYWQAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3Ry
aW5nAFVubG9jawBTeXN0ZW0uSU8AUGF0aABHZXRGaWxlTmFtZQBTdHJpbmcAQ29uY2F0AEZpbGUA
RXhpc3RzAERhdGVUaW1lAGdldF9Ob3cAZ2V0X1RpY2tzAEludDY0AE1vdmUAZ2V0X1Rhc2tSZXN1
bHQAc2V0X1Rhc2tSZXN1bHQARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfRXZlbnRzAEV4Y2VwdGlv
bgBnZXRfTWVzc2FnZQBGaXJlRXJyb3IASU9FeGNlcHRpb24AU1RfOWIwMzU3MzQyMTAyNGFkN2Fk
NWRjMjI5NDlmZGE0NGMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8A
OQBiADAAMwA1ADcAMwA0ADIAMQAwADIANABhAGQANwBhAGQANQBkAGMAMgAyADkANAA5AGYAZABh
ADQANABjAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAvVQBzAGUA
cgA6ADoARgB1AGwAbABfAEEAcgBjAGgAaQB2AGUAXwBQAGEAdABoAAAvVQBzAGUAcgA6ADoAUABy
AG8AZAB1AGMAdABzAF8ARgBpAGwAZQBfAEYAUQBOAAADLgAAG0UAcgByAG8AcgAgAEEAcgBjAGgA
aQB2AGUAAF1VAG4AYQBiAGwAZQAgAHQAbwAgAG0AbwB2AGUAIABvAHIAIAByAGUAbgBhAG0AZQAg
AGYAaQBsAGUALgAgAEUAcgBvAHIAcgAgAE0AZQBzAHMAYQBnAGUAOgAgAAABAAAbPz89rCwRS495
CO3DPaqYAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAAS
FQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAA
ElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQcgAgEOEBJ1BSABEnkc
AyAAHAMgAA4EAAEODgUAAg4ODgQAAQIOBQAAEYCJAyAACgYAAw4ODg4FAAIBDg4DIAAIBSAAEoCR
CCAFAggODg4IDwcIEnUODg4OEoCZEYCJCkcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF85YjAzNTczNDIx
MDI0YWQ3YWQ1ZGMyMjk0OWZkYTQ0YwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDEzAAAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAAPDEAAAAAAAAAAAAAXjEAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAxAAAAAAAAAAAAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAPFQrhYAAAEA8VCuFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwA5AGIAMAAzADUANwAzADQAMgAxADAAMgA0AGEAZAA3AGEAZAA1AGQAYwAyADIAOQA0ADkAZgBk
AGEANAA0AGMAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA4ADAA
NgAuADIAMAA3ADIAMQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwA5
AGIAMAAzADUANwAzADQAMgAxADAAMgA0AGEAZAA3AGEAZAA1AGQAYwAyADIAOQA0ADkAZgBkAGEA
NAA0AGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMwAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAFQAXwA5AGIAMAAzADUANwAzADQAMgAxADAAMgA0AGEAZAA3AGEAZAA1
AGQAYwAyADIAOQA0ADkAZgBkAGEANAA0AGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBUAF8AOQBiADAAMwA1ADcAMwA0ADIAMQAwADIANABhAGQANwBhAGQANQBk
AGMAMgAyADkANAA5AGYAZABhADQANABjAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA1ADgAMAA2AC4AMgAwADcAMgAxAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADgAMAA2AC4AMgAwADcAMgAxAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Check Products"
              DTS:CreationName="SSIS.Pipeline.3"
              DTS:Description="Data Flow Task"
              DTS:DTSID="{97032855-C5E9-4AD5-91C7-4008CCF342D5}"
              DTS:ExecutableType="SSIS.Pipeline.3"
              DTS:LocaleID="-1"
              DTS:ObjectName="Check Products"
              DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <pipeline
                  version="1">
                  <components>
                    <component
                      refId="Package\ETL\Foreach Product File (PR)\Check Products\Add Line Number"
                      componentClassID="DTS.ManagedComponentWrapper.3"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Add Line Number"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    Int64 LineNumber = 2;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.LineNumber = LineNumber;
        LineNumber = LineNumber + 1;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_97f9afba2c71434e9ca1f27947ce7580.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E8F34C04-5670-4F54-8A17-C7C18BBF55C4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_97f9afba2c71434e9ca1f27947ce7580</RootNamespace>
    <AssemblyName>SC_97f9afba2c71434e9ca1f27947ce7580</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 LineNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool LineNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Settings.get_Default():SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Sett" +
    "ings")]

namespace SC_97f9afba2c71434e9ca1f27947ce7580.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_97f9afba2c71434e9ca1f27947ce7580</msb:CodeName>
		<msb:ProjectId>{B83913D7-0C65-4083-ADEB-75D50861AD9E}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_97f9afba2c71434e9ca1f27947ce7580</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_97f9afba2c71434e9ca1f27947ce7580.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_97f9afba2c71434e9ca1f27947ce7580")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_97f9afba2c71434e9ca1f27947ce7580")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_97f9afba2c71434e9ca1f27947ce7580.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_97f9afba2c71434e9ca1f27947ce7580.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_97f9afba2c71434e9ca1f27947ce7580.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALfSyVUAAAAAAAAAAOAAAiELAQsAABIAAAAIAAAAAAAAvjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGgxAABTAAAAAEAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
MQAAAAAAAEgAAAACAAUAcCIAAPgOAAABAAAAAAAAALghAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnMOAAAGfQEAAAQCAnMPAAAGfQIAAAQqkgRy
AQAAcBpvDgAACiwVAgUCAygPAAAKDgRzCQAABm8DAAAGKkorBwIDbwQAAAYDbwwAAAYt8SoGKh4C
KBEAAAoqHgIoEgAACipyAwJ7AwAABG8KAAAGAgJ7AwAABBdqWH0DAAAEKj4CGGp9AwAABAIoAQAA
BioqAgMEBSgTAAAKKjoCFgOMGAAAASgUAAAKKloDLAgCFigVAAAKKnIRAABwcxYAAAp6HgIoFwAA
CioeAigYAAAKKjoCKBkAAAoCA30EAAAEKjoCKBkAAAoCA30FAAAEKh4CKBkAAAoqAAATMAIALQAA
AAEAABF+BgAABC0gcq4AAHDQBwAAAigbAAAKbxwAAApzHQAACgoGgAYAAAR+BgAABCoafgcAAAQq
HgKABwAABCoafggAAAQqLnMVAAAGgAgAAAQqHgIoIAAACioAAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAsBQAAI34AAJgFAACgBgAAI1N0cmluZ3MA
AAAAOAwAACABAAAjVVMAWA0AABAAAAAjR1VJRAAAAGgNAACQAQAAI0Jsb2IAAAAAAAAAAgAAAVcV
ogEJAQAAAPolMwAWAAABAAAAIAAAAAgAAAAIAAAAFgAAAA8AAAAgAAAADwAAAAEAAAADAAAABQAA
AAYAAAABAAAABAAAAAEAAAAAAAoAAQAAAAAABgDuAM0ABgD+AM0ACgAbARQBDgA3ASIBEgB2Ac0A
BgCFAc0ACgBZAkgCCgCKAnUCCgBjA0kDCgCOA3wDCgClA3wDCgDCA3wDCgDhA3wDCgD6A3wDCgAT
BHwDCgAuBHwDCgBJBHwDCgBiBHwDCgCbBHsECgC7BHsECgD9BBQBCgAEBRQBBgAtBc0ACgBUBRQB
CgBrBRQBCgCYBYUFCgC1BRQBCgC6BRQBCgDeBXwDDgAKBvQFDgAjBvQFCgA4BnsEAAAAAAEAAAAA
AAEAAQABABAAMgAAAAUAAQABAAEAEABAAAAACAADAAUAAQAQAEsAAAAJAAQACQABABAAWAAAAA0A
BAAOAAEAEABkAAAADQAFAA8AAAAQAG4AeAANAAYAEAAAARAApwB4ABEACAAUAAYAWAATAAYAZAAX
AAEAywEvAAEAOAJSAAEAOAJSABEAaQJcABEAlgJgABEA2gJ+AFAgAAAAAIYYTwEbAAEAcCAAAAAA
xgCTAR8AAQCVIAAAAADGAaABKQAFAKggAAAAAMYBtAEpAAYAqiAAAAAAxgDWARsABwCyIAAAAADG
AOEBGwAHALogAAAAAMYAtAEpAAcA1yAAAAAAhhhPARsACADnIAAAAACGGE8BMgAIAPIgAAAAAIYI
7QE8AAsAASEAAAAAhgj8AUEADAAYIQAAAACGABICRgANACAhAAAAAIYAGgJGAA0AKCEAAAAAhhhP
AVYADQA3IQAAAACGGE8BVgAOAEYhAAAAAIMYTwEbAA8AUCEAAAAAkwimAmQADwCJIQAAAACTCLoC
aQAPAJAhAAAAAJMIxgJuAA8AmCEAAAAAlgjqAoIAEACrIQAAAACGGE8BGwAQAJ8hAAAAAJEYUwbV
ABAAAAABAP4CAAACAAYDAAADABADAAAEABcDAAABABADAAABACEDAAABACEDAAABABADAAACACUD
AAADABcDAAABADkDAAABADkDAAABAD8DAAABAD8DAAABADkDSQBPAYwAUQBPAYwAWQBPAYwAYQBP
AYwAaQBPAYwAcQBPAYwAeQBPAYwAgQBPAYwAiQBPAYwAkQBPAYwAmQBPAZEAoQBPARsACQBPARsA
qQAVBZYACQAcBZ0AuQBPARsACQDWARsACQDhARsAEQBPATIAEQBaBagAEQBjBZEAyQBPAYwAEQAS
AkYAEQAaAkYAGQBPARsA0QBPARsA2QDMBa4A2QDnBbUAOQBPAboA8QBPAcYAAQFPARsAIQBPARsA
LgAbAEoBLgBjAHABLgALANkALgATACEBLgAjAEoBLgArAEoBLgAzACEBLgA7AFABLgBDAEoBLgBb
AGcBYwCDAKMAaQDzAMwAiQDzAMwA4wDTAKMAAQH7AKMAwQAEAAEABwADAAgABQAAAMsBSgAAACYC
TgAAAFkCdAAAANICeQAAAPYChwABAAoAAwABAAsABQACABEABwACABIACQABABMACQACABQACwAE
gAAAAQAAAEUW20sAAAAAAADZBAAACwAAAAAAAAAAAAAAAQCwAAAAAAAEAAAAAAAAAAAAAAAKAAsB
AAAAAAQAAAAAAAAAAAAAAAoAFAEAAAAACwAAAAAAAAAAAAAAAQBVAQAAAAAAAAAAAQAAAFoGAAAA
AAAAADxNb2R1bGU+AFNDXzk3ZjlhZmJhMmM3MTQzNGU5Y2ExZjI3OTQ3Y2U3NTgwLmRsbABVc2Vy
Q29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQwQnVmZmVyAENvbm5lY3Rpb25zAFZhcmlhYmxlcwBS
ZXNvdXJjZXMAU0NfOTdmOWFmYmEyYzcxNDM0ZTljYTFmMjc5NDdjZTc1ODAuUHJvcGVydGllcwBT
ZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIAbXNjb3JsaWIAU3lzdGVt
AE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQAuY3Rv
cgBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXRO
YW1lTWFwAFByb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cATGluZU51bWJlcgBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHNldF9MaW5lTnVtYmVyAHNl
dF9MaW5lTnVtYmVyX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AExpbmVOdW1iZXJfSXNOdWxs
AFBhcmVudENvbXBvbmVudABTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJj
ZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0
X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJ
bnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRw
dXRNYXAAUm93AEJ1ZmZlckNvbHVtbkluZGV4ZXMAdmFsdWUAQ29tcG9uZW50AFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9u
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9u
QXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxh
eGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ185N2Y5YWZi
YTJjNzE0MzRlOWNhMWYyNzk0N2NlNzU4MABTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMA
R2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBJ
bnQ2NABzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3lzdGVtLkRp
YWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU0NfOTdmOWFmYmEyYzcxNDM0ZTljYTFm
Mjc5NDdjZTc1ODAuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAAAPSQBuAHAAdQB0
ACAAMAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBl
ACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUA
ZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAHFTAEMAXwA5
ADcAZgA5AGEAZgBiAGEAMgBjADcAMQA0ADMANABlADkAYwBhADEAZgAyADcAOQA0ADcAYwBlADcA
NQA4ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAGkVDW6V9qhD
huTdF8iNSPAACImEXc2AgMyRCLd6XFYZNOCJAwYSFAMGEhgDIAABCSAEAQgOEhUSGQUgAQESEAIG
CgkgAwESFR0IEhkEIAEBCgQgAQECAyAAAgMoAAoDKAACAwYSBQUgAQESBQMGEh0DBhIhBAAAEh0E
AAASIQUAAQESIQQIABIdBAgAEiEDBhIgBAAAEiAECAASIAQgAQEOBCABAQgGIAICDhFZBSABHQgI
BAEAAAAFIAIBCBwGAAESbRFxBCAAEnUGIAIBDhJ1BAcBEh0FIAEBEX0IAQACAAAAAAADAAABRwEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVU
IEZyYW1ld29yayA0KAEAI1NDXzk3ZjlhZmJhMmM3MTQzNGU5Y2ExZjI3OTQ3Y2U3NTgwAAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTMAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEAkDEAAAAAAAAAAAAArjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAxAAAAAAAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABANtLRRYAAAEA20tFFj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAOwCAAABADAAMAAw
ADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwA5ADcAZgA5AGEAZgBiAGEAMgBjADcAMQA0ADMANABlADkAYwBhADEAZgAyADcAOQA0ADcAYwBl
ADcANQA4ADAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQA3ADAA
MQAuADEAOQA0ADEAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA5
ADcAZgA5AGEAZgBiAGEAMgBjADcAMQA0ADMANABlADkAYwBhADEAZgAyADcAOQA0ADcAYwBlADcA
NQA4ADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEAMwAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkA
bABlAG4AYQBtAGUAAABTAEMAXwA5ADcAZgA5AGEAZgBiAGEAMgBjADcAMQA0ADMANABlADkAYwBh
ADEAZgAyADcAOQA0ADcAYwBlADcANQA4ADAALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQA
TgBhAG0AZQAAAAAAUwBDAF8AOQA3AGYAOQBhAGYAYgBhADIAYwA3ADEANAAzADQAZQA5AGMAYQAx
AGYAMgA3ADkANAA3AGMAZQA3ADUAOAAwAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA1ADcAMAAxAC4AMQA5ADQAMQA5AAAAAABIAA8AAQBBAHMAcwBlAG0AYgBs
AHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA1ADcAMAAxAC4AMQA5ADQAMQA5AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAMAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_97f9afba2c71434e9ca1f27947ce7580</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">2cafb31362db6a47f02497c8957616be</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Product File (PR)\Check Products\Add Line Number.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Product File (PR)\Check Products\Add Line Number.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\ETL\Foreach Product File (PR)\Check Products\Add Line Number.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Add Line Number.Outputs[Output 0].Columns[LineNumber]"
                              dataType="i8"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Add Line Number.Outputs[Output 0].Columns[LineNumber]"
                              name="LineNumber" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data"
                      componentClassID="DTS.ManagedComponentWrapper.3"
                      contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                      description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                      name="Parse Data"
                      version="8">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Stores the source code of the component"
                          isArray="true"
                          name="SourceCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="30">
                            <arrayElement
                              dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ErrorsBuffer ErrorsBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ErrorsBuffer)
        {
            ErrorsBuffer.SetEndOfRowset();
            ErrorsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Errors"))
            {
                ErrorsBuffer = new ErrorsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Text;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    string File_Name;
    string ErrorFormat;
    bool hasErrors = false;
    string ErrorMessageOutput;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        IDTSVariables100 vars = null;

        VariableDispenser.LockOneForRead("User::File_Name", ref vars);
        File_Name = vars["User::File_Name"].Value.ToString();
        vars.Unlock();

        ErrorFormat = "Line {0}: {1} ({2})";
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (hasErrors)
        {
            IDTSVariables100 vars = null;
            VariableDispenser.LockOneForWrite("User::Data_Error", ref vars);
            vars["User::Data_Error"].Value = true;
            vars.Unlock();

            VariableDispenser.LockOneForWrite("User::ErrorMessageOutput", ref vars);
            vars["User::ErrorMessageOutput"].Value = ErrorMessageOutput;
            vars.Unlock();
        }
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string errorMessage;

        
        /* Current Season */
        bool currentSeasonHasErrors = false;
        string currentSeasonErrorText = "";
        int currentSeasonYear;

        //EDCON have a valid season of "NONE" so if the current season equals "NONE" then skip the validation
        if (Row.CURRENTSEASON.Trim() != "NONE")
        {
            if (Row.CURRENTSEASON.Trim().Length != 4)
            {
                currentSeasonErrorText = "Current Season should be 4 characters in length";
                currentSeasonHasErrors = true;
            }
            else if (
                !(
                    Row.CURRENTSEASON.Trim().StartsWith("SS", StringComparison.InvariantCultureIgnoreCase) ||
                    Row.CURRENTSEASON.Trim().StartsWith("AW", StringComparison.InvariantCultureIgnoreCase)
                )
            )
            {
                currentSeasonErrorText = "Current Season should start with AW or SS";
                currentSeasonHasErrors = true;
            }
            else if (
                Row.CURRENTSEASON.Trim().Length == 4 ?
                !int.TryParse(Row.CURRENTSEASON.Trim().Substring(2, 2), out currentSeasonYear) :
                false
                )
            {
                currentSeasonErrorText = "Current Season should end with a 2 character representation of the year.";
                currentSeasonHasErrors = true;
            }

            if (currentSeasonHasErrors)
            {
                Row.ParsedCurrentSeason_IsNull = true;
                errorMessage = string.Format(ErrorFormat, Row.LineNumber, currentSeasonErrorText, Row.CURRENTSEASON_IsNull ? "" : Row.CURRENTSEASON);
                AddErrorRow(Row, errorMessage);
            }
            else
            {
                Row.ParsedCurrentSeason = Row.CURRENTSEASON.Trim().ToUpper();
            }
        }
        /* Current Season End */

        /* Original Season */
        bool originalSeasonHasErrors = false;
        string originalSeasonErrorText = "";
        int originalSeasonYear;

                //EDCON have a valid season of "NONE" so if the current season equals "NONE" then skip the validation
        if (Row.CURRENTSEASON.Trim() != "NONE")
        {

            if (Row.ORIGINALSEASON.Trim().Length != 4)
            {
                originalSeasonErrorText = "Original Season should be 4 characters in length";
                originalSeasonHasErrors = true;
            }
            else if (
                !(
                    Row.ORIGINALSEASON.Trim().StartsWith("SS", StringComparison.InvariantCultureIgnoreCase) ||
                    Row.ORIGINALSEASON.Trim().StartsWith("AW", StringComparison.InvariantCultureIgnoreCase)
                )
            )
            {
                originalSeasonErrorText = "Original Season should start with AW or SS";
                originalSeasonHasErrors = true;
            }
            else if (
                Row.ORIGINALSEASON.Trim().Length == 4 ?
                !int.TryParse(Row.ORIGINALSEASON.Trim().Substring(2, 2), out originalSeasonYear) :
                false
                )
            {
                originalSeasonErrorText = "Original Season should end with a 2 character representation of the year.";
                originalSeasonHasErrors = true;
            }

            if (originalSeasonHasErrors)
            {
                Row.ParsedOriginalSeason_IsNull = true;
                errorMessage = string.Format(ErrorFormat, Row.LineNumber, originalSeasonErrorText, Row.ORIGINALSEASON_IsNull ? "" : Row.ORIGINALSEASON);
                AddErrorRow(Row, errorMessage);
            }
            else
            {
                Row.ParsedOriginalSeason = Row.ORIGINALSEASON.Trim().ToUpper();
            }
        }
        /* Original Season End */

        /* FP MD */
        bool fpMdHasErrors = false;
        string fpMdErrorText = "";
        if (Row.FPMD.Trim().Length != 1)
        {
            fpMdErrorText = "FP MD Flag should only be a single character.";
            fpMdHasErrors = true;
        }
        else if (!(Row.FPMD.Trim().ToUpper() == "F" || Row.FPMD.Trim().ToUpper() == "M"))
        {
            fpMdErrorText = "FP MD Flag should either be 'F' or 'M'.";
            fpMdHasErrors = true;
        }

        if (fpMdHasErrors)
        {
            Row.ParsedFpMd_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, fpMdErrorText, Row.FPMD_IsNull ? "" : Row.FPMD);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedFpMd = Row.FPMD.Trim().ToUpper();
        }
        /* FP MD End */

       /* Item */
        bool itemHasErrors = false;
        string itemErrorText = "";
        if (string.IsNullOrWhiteSpace(Row.ITEM.Trim()))
        {
            itemErrorText = "Item is required.";
            itemHasErrors = true;
        }

        //int itemFirstCharacter;
        //if (Row.ITEM.Trim().Length > 13)
        //{
        //    itemErrorText = "Item should be no longer than 13 characters.";
        //    itemHasErrors = true;
        //}
        //else if (!int.TryParse(Row.ITEM.Trim().Substring(0, 1), out itemFirstCharacter))
        //{
        //    itemErrorText = "Item should start with a number.";
        //    itemHasErrors = true;
        //}

        if (itemHasErrors)
        {
            Row.ParsedItem_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, itemErrorText, Row.ITEM_IsNull ? "" : Row.ITEM);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedItem = Row.ITEM.Trim();
        }
        /* Item End */

        /* Item Cost */
        bool itemCost1HasErrors = false;
        string itemCost1ErrorText = "";
        decimal itemCost1;

        if (!decimal.TryParse(Row.ITEMCOST1.Trim(), out itemCost1))
        {
            itemCost1ErrorText = "Invalid Item Cost 1.";
            itemCost1HasErrors = true;
        }

        if (itemCost1HasErrors)
        {
            Row.ParsedItemCost1_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, itemCost1ErrorText, Row.ITEMCOST1_IsNull ? "" : Row.ITEMCOST1);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedItemCost1 = itemCost1;
        }
        /* Item Cost End */

        /* Original Cost */
        bool originalPriceHasErrors = false;
        string originalPriceErrorText = "";
        decimal originalPrice;
        if (!decimal.TryParse(Row.ORIGINALPRICE.Trim(), out originalPrice))
        {         
            originalPriceErrorText = "Invalid Original Price.";
            originalPriceHasErrors = true;
        }

        if (originalPriceHasErrors)
        {
            Row.ParsedOriginalPrice_IsNull = true;
            errorMessage = string.Format(ErrorFormat, Row.LineNumber, originalPriceErrorText, Row.ORIGINALPRICE_IsNull ? "" : Row.ORIGINALPRICE);
            AddErrorRow(Row, errorMessage);
        }
        else
        {
            Row.ParsedOriginalPrice = originalPrice;
        }
        /* Original Cost End */

        ///* Ticket Price */
        //bool ticketPriceHasErrors = false;
        //string ticketPriceErrorText = "";
        //decimal ticketPrice;

        //if (!decimal.TryParse(Row.TICKETPRICE.Trim(), out ticketPrice))
        //{
        //    ticketPriceErrorText = "Invalid Ticket Price.";
        //    ticketPriceHasErrors = true;
        //}

        //if (ticketPriceHasErrors)
        //{
        //    Row.ParsedTicketPrice_IsNull = true;
        //    errorMessage = string.Format(ErrorFormat, Row.LineNumber, ticketPriceErrorText, Row.TICKETPRICE_IsNull ? "" : Row.TICKETPRICE);
        //    AddErrorRow(Row, errorMessage);
        //}
        //else
        //{
        //    Row.ParsedTicketPrice = ticketPrice;
        //}
        ///* Ticket Price End */
    
    }

    public void AddErrorRow(Input0Buffer Row, string ErrorMessage)
    {
        hasErrors = true;

        //ErrorMessageOutput += ErrorMessage + "\n";

        StringBuilder sb = new StringBuilder(ErrorMessageOutput);
        sb.AppendLine(ErrorMessage);
        ErrorMessageOutput = sb.ToString();
        

        ErrorsBuffer.AddRow();
        ErrorsBuffer.FileName = File_Name;
        ErrorsBuffer.ErrorMessage = ErrorMessage;
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ITEM
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool ITEM_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ITEMCOST1
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool ITEMCOST1_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String CURRENTSEASON
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool CURRENTSEASON_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String ORIGINALSEASON
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool ORIGINALSEASON_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String FPMD
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool FPMD_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String ORIGINALPRICE
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool ORIGINALPRICE_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String TICKETPRICE
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool TICKETPRICE_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int64 LineNumber
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[7]);
        }
    }
    public bool LineNumber_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String ParsedItem
    {
        set
        {
            this[8] = value;
        }
    }
    public bool ParsedItem_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal ParsedItemCost1
    {
        set
        {
            this[9] = value;
        }
    }
    public bool ParsedItemCost1_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParsedFpMd
    {
        set
        {
            this[10] = value;
        }
    }
    public bool ParsedFpMd_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParsedOriginalSeason
    {
        set
        {
            this[11] = value;
        }
    }
    public bool ParsedOriginalSeason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParsedCurrentSeason
    {
        set
        {
            this[12] = value;
        }
    }
    public bool ParsedCurrentSeason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal ParsedTicketPrice
    {
        set
        {
            this[13] = value;
        }
    }
    public bool ParsedTicketPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal ParsedOriginalPrice
    {
        set
        {
            this[14] = value;
        }
    }
    public bool ParsedOriginalPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ErrorsBuffer: ScriptBuffer

{
    public ErrorsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ErrorMessage
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ErrorMessage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FileName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Settings.get_Default():SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Sett" +
    "ings")]

namespace SC_528447c4e1574b4a8f6e406cb90712e2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_528447c4e1574b4a8f6e406cb90712e2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_528447c4e1574b4a8f6e406cb90712e2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Project]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_528447c4e1574b4a8f6e406cb90712e2</msb:CodeName>
		<msb:ProjectId>{8DA29315-E1D9-45A0-A969-BE3DCC89F5C9}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_528447c4e1574b4a8f6e406cb90712e2</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_528447c4e1574b4a8f6e406cb90712e2.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_528447c4e1574b4a8f6e406cb90712e2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_528447c4e1574b4a8f6e406cb90712e2")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_528447c4e1574b4a8f6e406cb90712e2.csproj]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9200834C-8192-4034-AF1D-ED80F977E054}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_528447c4e1574b4a8f6e406cb90712e2</RootNamespace>
    <AssemblyName>SC_528447c4e1574b4a8f6e406cb90712e2</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Stores the binary representation of the component"
                          isArray="true"
                          name="BinaryCode"
                          state="cdata">
                          <arrayElements
                            arrayElementCount="2">
                            <arrayElement
                              dataType="System.String"><![CDATA[SC_528447c4e1574b4a8f6e406cb90712e2.dll]]></arrayElement>
                            <arrayElement
                              dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABK/zVYAAAAAAAAAAOAAAiELAQsAACwAAAAIAAAAAAAA3ksA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIxLAABPAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA5CsAAAAgAAAALAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAuAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADA
SwAAAAAAAEgAAAACAAUAiCoAAAQhAAABAAAAAAAAANApAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnM3AAAGfQEAAAQCAnM4AAAGfQIAAAQqAzAE
AE8AAAAAAAAABHIBAABwGm8OAAAKLBUCBQIDKA8AAAoOBHMOAAAGbwcAAAYFbxAAAAosIwICewQA
AAQXWH0EAAAEAnsEAAAEFzMMAm8DAAAGAigEAAAGKgYqbgJ7AwAABCwSAnsDAAAEbzUAAAYCFH0D
AAAEKgAAABMwBQA9AAAAAQAAERYKKy4EBpQOBHIRAABwKBEAAAozGQIFBpoCBAaUKA8AAAoOBHMv
AAAGfQMAAAQGF1gKBgMyzgJvBgAABioGKkorBwIDbwgAAAYDby0AAAYt8SoGKhMwAwBHAAAAAgAA
EQIoEwAAChQKAigUAAAKch8AAHASAG8VAAAKAgZyHwAAcG8WAAAKbxcAAApvGAAACn0FAAAEBm8Z
AAAKAnI/AABwfQYAAAQqABMwAwBtAAAAAgAAEQIoGgAACgJ7BwAABCxeFAoCKBQAAApyZwAAcBIA
bxsAAAoGcmcAAHBvFgAACheMHAAAAW8cAAAKBm8ZAAAKAigUAAAKcokAAHASAG8bAAAKBnKJAABw
bxYAAAoCewgAAARvHAAACgZvGQAACioAAAATMAQARgQAAAMAABEWC3K7AABwDANvEwAABm8dAAAK
cr0AAHAoHgAACjnqAAAAA28TAAAGbx0AAApvHwAAChouCnLHAABwDBcLK3YDbxMAAAZvHQAACnIn
AQBwGW8gAAAKLSIDbxMAAAZvHQAACnItAQBwGW8gAAAKLQpyMwEAcAwXCys8A28TAAAGbx0AAApv
HwAAChouAxYrHANvEwAABm8dAAAKGBhvIQAAChIDKCIAAAoW/gEsCHKHAQBwDBcLByw+AxdvKAAA
BgJ7BgAABANvHQAABoweAAABCANvFAAABi0IA28TAAAGKwVyuwAAcCgjAAAKCgIDBigMAAAGKxYD
A28TAAAGbx0AAApvJAAACm8nAAAGFhMEcrsAAHATBQNvEwAABm8dAAAKcr0AAHAoHgAACjnyAAAA
A28VAAAGbx0AAApvHwAAChouDHIaAgBwEwUXEwQregNvFQAABm8dAAAKcicBAHAZbyAAAAotJANv
FQAABm8dAAAKci0BAHAZbyAAAAotDHJ8AgBwEwUXEwQrPgNvFQAABm8dAAAKbx8AAAoaLgMWKxwD
bxUAAAZvHQAAChgYbyEAAAoSBigiAAAKFv4BLApy0gIAcBMFFxMEEQQsPwMXbyYAAAYCewYAAAQD
bx0AAAaMHgAAAREFA28WAAAGLQgDbxUAAAYrBXK7AABwKCMAAAoKAgMGKAwAAAYrFgMDbxUAAAZv
HQAACm8kAAAKbyUAAAYWEwdyuwAAcBMIA28XAAAGbx0AAApvHwAAChcuDHJnAwBwEwgXEwcrQgNv
FwAABm8dAAAKbyQAAApywwMAcCglAAAKLSYDbxcAAAZvHQAACm8kAAAKcscDAHAoJQAACi0KcssD
AHATCBcTBxEHLD8DF28kAAAGAnsGAAAEA28dAAAGjB4AAAERCANvGAAABi0IA28XAAAGKwVyuwAA
cCgjAAAKCgIDBigMAAAGKxYDA28XAAAGbx0AAApvJAAACm8jAAAGFhMJcrsAAHATCgNvDwAABm8d
AAAKKCYAAAosCnIbBABwEwoXEwkRCSw/AxdvIAAABgJ7BgAABANvHQAABoweAAABEQoDbxAAAAYt
CANvDwAABisFcrsAAHAoIwAACgoCAwYoDAAABisRAwNvDwAABm8dAAAKbx8AAAYWEwtyuwAAcBMM
A28RAAAGbx0AAAoSDSgnAAAKLQpyPwQAcBMMFxMLEQssPwMXbyIAAAYCewYAAAQDbx0AAAaMHgAA
AREMA28SAAAGLQgDbxEAAAYrBXK7AABwKCMAAAoKAgMGKAwAAAYrCAMRDW8hAAAGFhMOcrsAAHAT
DwNvGQAABm8dAAAKEhAoJwAACi0KcmkEAHATDxcTDhEOLD4DF28sAAAGAnsGAAAEA28dAAAGjB4A
AAERDwNvGgAABi0IA28ZAAAGKwVyuwAAcCgjAAAKCgIDBigMAAAGKgMREG8rAAAGKgAAEzACAFAA
AAAEAAARAhd9BwAABAJ7CAAABHMoAAAKCgYEbykAAAomAgZvGAAACn0IAAAEAnsDAAAEbzQAAAYC
ewMAAAQCewUAAARvMgAABgJ7AwAABARvMAAABioeAigBAAAGKioCAwQFKCoAAAoqUgJ7KwAACgJ7
LAAAChaUby0AAAoqIgIWKC4AAAoqUgJ7KwAACgJ7LAAACheUby0AAAoqIgIXKC4AAAoqUgJ7KwAA
CgJ7LAAAChiUby0AAAoqIgIYKC4AAAoqUgJ7KwAACgJ7LAAAChmUby0AAAoqIgIZKC4AAAoqUgJ7
KwAACgJ7LAAAChqUby0AAAoqIgIaKC4AAAoqUgJ7KwAACgJ7LAAAChuUby0AAAoqIgIbKC4AAAoq
UgJ7KwAACgJ7LAAAChyUby0AAAoqIgIcKC4AAAoqUgJ7KwAACgJ7LAAACh2Uby8AAAoqIgIdKC4A
AAoqJgIeAygwAAAKKloDLAgCHigxAAAKKnKZBABwczIAAAp6PgIfCQOMBwAAASgwAAAKKl4DLAkC
HwkoMQAACipymQQAcHMyAAAKeioCHwoDKDAAAAoqXgMsCQIfCigxAAAKKnKZBABwczIAAAp6KgIf
CwMoMAAACipeAywJAh8LKDEAAAoqcpkEAHBzMgAACnoqAh8MAygwAAAKKl4DLAkCHwwoMQAACipy
mQQAcHMyAAAKej4CHw0DjAcAAAEoMAAACipeAywJAh8NKDEAAAoqcpkEAHBzMgAACno+Ah8OA4wH
AAABKDAAAAoqXgMsCQIfDigxAAAKKnKZBABwczIAAAp6HgIoMwAACioeAig0AAAKKioCAwQFKCoA
AAoqJgIWAygwAAAKKloDLAgCFigxAAAKKnKZBABwczIAAAp6JgIXAygwAAAKKloDLAgCFygxAAAK
KnKZBABwczIAAAp6HgIoNQAACioeAig2AAAKKh4CKDQAAAoqOgIoNwAACgIDfQkAAAQqOgIoNwAA
CgIDfQoAAAQqHgIoNwAACioTMAIALQAAAAUAABF+CwAABC0gcjYFAHDQCAAAAig5AAAKbzoAAApz
OwAACgoGgAsAAAR+CwAABCoafgwAAAQqHgKADAAABCoafg0AAAQqLnM+AAAGgA0AAAQqHgIoPgAA
CioAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAKgKAAAj
fgAAFAsAAOQNAAAjU3RyaW5ncwAAAAD4GAAAqAUAACNVUwCgHgAAEAAAACNHVUlEAAAAsB4AAFQC
AAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+iUzABYAAAEAAAAnAAAACQAAAA0AAAA/AAAAKAAA
AD4AAAAPAAAABQAAAAQAAAAlAAAAJgAAAAEAAAAFAAAAAQAAAAAACgABAAAAAAAGAPsA2gAGAAsB
2gAKACgBIQEOAEQBLwESAJIB2gAGAKEB2gAKAMgDIQEKAMwHuwcKAP0H6AcKAPAI1ggKABsJCQkK
ADIJCQkKAE8JCQkKAG4JCQkKAIcJCQkKAKAJCQkKALsJCQkKANYJCQkKAO8JCQkKACgKCAoKAEgK
CAoKAIoKIQEKAJEKIQEGANYK2gAWAEgLIAsWAHcLIAsWAJcLIAsKANoLIQEKAB8MIQEKAC4MIQEK
AG4MYgwKALIMIQEKAN8MzAwKAPwMIQEKAAENIQEKACUNCQkOAFENOw0OAGoNOw0KAH8NCAoAAAAA
AQAAAAAAAQABAAEAEAAyAAAABQABAAEAAQAQAEAAAAAIAAUACQABABAASwAAAAkACQAOAAEAEABY
AAAACQAJAC8AAQAQAGUAAAANAAkANwABABAAcQAAAA0ACgA4AAAAEAB7AIUADQALADkAAAEQALQA
hQARAA0APQAGAGUAEwAGAHEAFwAGAFgAHwABAGIBIwABACkCQgABADMCQgABAD8CRQABAEkCQgAB
AKsHhgABAKsHhgARANwHkAARAAkIlAARAE0IsgBQIAAAAACGGFwBGwABAHAgAAAAAMYArwEmAAEA
yyAAAAAAxgG8ARsABQDNIAAAAACBAMoBGwAFAOwgAAAAAMYA3gEwAAUANSEAAAAAxgHqARsACQA3
IQAAAADGAf4BPAAJAEohAAAAAMYBEgI8AAoATCEAAAAAxgBcAhsACwCgIQAAAADGAGcCGwALABwi
AAAAAMYAEgI8AAsAcCYAAAAAhgBzAkgADADMJgAAAACGGFwBGwAOANQmAAAAAIYYXAFPAA4A3yYA
AAAAhgh/AlkAEQD0JgAAAACGCIgCXQARAP0mAAAAAIYImAJZABEAEicAAAAAhgimAl0AEQAbJwAA
AACGCLsCWQARADAnAAAAAIYIzQJdABEAOScAAAAAhgjmAlkAEQBOJwAAAACGCPkCXQARAFcnAAAA
AIYIEwNZABEAbCcAAAAAhggcA10AEQB1JwAAAACGCCwDWQARAIonAAAAAIYIPgNdABEAkycAAAAA
hghXA1kAEQCoJwAAAACGCGcDXQARALEnAAAAAIYIfgNhABEAxicAAAAAhgiNA10AEQDPJwAAAACG
CKMDZQARANknAAAAAIYIsgNqABIA8CcAAAAAhgjQA28AEwAAKAAAAACGCOQDagAUABgoAAAAAIYI
/wNlABUAIygAAAAAhggOBGoAFgA7KAAAAACGCCQEZQAXAEYoAAAAAIYIPQRqABgAXigAAAAAhghd
BGUAGQBpKAAAAACGCHUEagAaAIEoAAAAAIYIlARvABsAkSgAAAAAhgiqBGoAHACpKAAAAACGCMcE
bwAdALkoAAAAAIYI3wRqAB4A0SgAAAAAhgD+BF0AHwDZKAAAAACGAAYFXQAfAOEoAAAAAIYYXAFP
AB8A7CgAAAAAhggRB2UAIgD2KAAAAACGCCIHagAjAA0pAAAAAIYIOgdlACQAFykAAAAAhghHB2oA
JQAuKQAAAACGAFsHGwAmADYpAAAAAIYAYgcbACYAPikAAAAAhgAGBV0AJgBGKQAAAACGGFwBigAm
AFUpAAAAAIYYXAGKACcAZCkAAAAAgxhcARsAKABsKQAAAACTCBkImAAoAKUpAAAAAJMILQidACgA
rCkAAAAAkwg5CKIAKAC0KQAAAACWCF0ItgApAMcpAAAAAIYYXAEbACkAuykAAAAAkRiaDZkBKQAA
AAEAcQgAAAIAeQgAAAMAgwgAAAQAiggAAAEAlAgAAAIAnAgAAAMApggAAAQAiggAAAEAgwgAAAEA
rggAAAEArggAAAEArggAAAIAcQcAAAEAgwgAAAIAsggAAAMAiggAAAEAxggAAAEAxggAAAEAxggA
AAEAxggAAAEAxggAAAEAxggAAAEAxggAAAEAxggAAAEAxggAAAEAxggAAAEAxggAAAEAxggAAAEA
xggAAAEAxggAAAEAgwgAAAIAsggAAAMAiggAAAEAxggAAAEAxggAAAEAxggAAAEAxggAAAEAzAgA
AAEAzAgAAAEAxghRAFwBZQBZAFwBZQBhAFwBZQBpAFwBZQBxAFwBZQB5AFwBZQCBAFwBZQCJAFwB
ZQCRAFwBZQCZAFwBZQChAFwBwACpAFwBGwAJAFwBGwCxAKIKxQAJAKkKzAApALoKXQAJAMoK0gDB
AFwBGwAJAFwCGwAJAGEL4gDJAIgL5wDRAKcL7wDZALAL9QAZALoLWQDRAMMLGwAJAGcCGwDJAMoL
5wDZAOIL/gCxAOwLWQCxAPELAwGxAP8LCQGxAAoMxQCxABUMDQHpACUMEwGxADQMGgGxADsMWQCx
AEMMAwGxAE8MIgE5ACUMJwH5AFwBZQD5AHwMRQERAFwBTwARAIMIUAERALIIVAEpAIcMWAERAJEM
XQEpAJgMYgERAKEMZwERAKoMwAABAVwBZQARAP4EXQARAAYFXQARAFsHGwARAGIHGwAZAFwBGwAJ
AVwBGwARARMNbQERAS4NdgFBAFwBfAEpAVwBiQE5AVwBGwAhAFwBGwAuABsADgIuAGMANAIuAAsA
nQEuABMA5QEuACMADgIuACsADgIuADMA5QEuADsAFAIuAEMADgIuAFsAKwJjAJMA3QADAcMB3QCh
AesB3QBpBOMBkAGJBOMBkAHZAPkALwFLAYQBBAABAAUAHwAIACMACQAlAAAAEgV1AAAAFwV5AAAA
IwV1AAAALQV5AAAAPgV1AAAATAV5AAAAYQV1AAAAcAV5AAAAhgV1AAAAiwV5AAAAlwV1AAAApQV5
AAAAugV1AAAAxgV5AAAA2QV9AAAA5AV5AAAA9gV1AAAAAQZ5AAAAEwaBAAAAIwZ5AAAAOgZ1AAAA
RQZ5AAAAVwZ1AAAAbAZ5AAAAiAZ1AAAAnAZ5AAAAtwaBAAAAyQZ5AAAA4gaBAAAA9gZ5AAAAcQd1
AAAAfgd5AAAAkgd1AAAAmwd5AAAAzAeoAAAARQitAAAAaQi7AAIADwADAAIAEAAFAAIAEQAHAAIA
EgAJAAIAEwALAAIAFAANAAIAFQAPAAIAFgARAAIAFwATAAIAGAAVAAIAGQAXAAIAGgAZAAIAGwAb
AAIAHAAdAAIAHQAfAAIAHgAhAAEAHwAjAAEAIAAlAAEAIQAnAAEAIgApAAEAIwArAAEAJAAtAAEA
JQAvAAEAJgAxAAEAJwAzAAEAKAA1AAEAKQA3AAEAKgA5AAEAKwA7AAEALAA9AAEAMAA/AAEAMQBB
AAEAMgBDAAEAMwBFAAIAOgBHAAIAOwBJAAEAPABJAAIAPQBLAASAAAABAAAAChdJZgAAAAAAAGYK
AAALAAAAAAAAAAAAAAABAL0AAAAAAAQAAAAAAAAAAAAAAAoAGAEAAAAABAAAAAAAAAAAAAAACgAh
AQAAAAALAAAAAAAAAAAAAAABAHEBAAAAAAsAAAAAAAAAAAAAAAEA/QoAAAAAAAAAAAEAAAChDQAA
AAAAPE1vZHVsZT4AU0NfNTI4NDQ3YzRlMTU3NGI0YThmNmU0MDZjYjkwNzEyZTIuZGxsAFVzZXJD
b21wb25lbnQAU2NyaXB0TWFpbgBJbnB1dDBCdWZmZXIARXJyb3JzQnVmZmVyAENvbm5lY3Rpb25z
AFZhcmlhYmxlcwBSZXNvdXJjZXMAU0NfNTI4NDQ3YzRlMTU3NGI0YThmNmU0MDZjYjkwNzEyZTIu
UHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdENvbXBvbmVudABTY3JpcHRCdWZmZXIAbXNj
b3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQAuY3RvcgBJbnB1dHNGaW5pc2hlZABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5l
SG9zdABQaXBlbGluZUJ1ZmZlcgBPdXRwdXROYW1lTWFwAFByb2Nlc3NJbnB1dABGaW5pc2hPdXRw
dXRzAE1hcmtPdXRwdXRzRmluaXNoZWQAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBJ
bnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cARmlsZV9OYW1lAEVycm9y
Rm9ybWF0AGhhc0Vycm9ycwBFcnJvck1lc3NhZ2VPdXRwdXQAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0
ZQBBZGRFcnJvclJvdwBnZXRfSVRFTQBnZXRfSVRFTV9Jc051bGwAZ2V0X0lURU1DT1NUMQBnZXRf
SVRFTUNPU1QxX0lzTnVsbABnZXRfQ1VSUkVOVFNFQVNPTgBnZXRfQ1VSUkVOVFNFQVNPTl9Jc051
bGwAZ2V0X09SSUdJTkFMU0VBU09OAGdldF9PUklHSU5BTFNFQVNPTl9Jc051bGwAZ2V0X0ZQTUQA
Z2V0X0ZQTURfSXNOdWxsAGdldF9PUklHSU5BTFBSSUNFAGdldF9PUklHSU5BTFBSSUNFX0lzTnVs
bABnZXRfVElDS0VUUFJJQ0UAZ2V0X1RJQ0tFVFBSSUNFX0lzTnVsbABnZXRfTGluZU51bWJlcgBn
ZXRfTGluZU51bWJlcl9Jc051bGwAc2V0X1BhcnNlZEl0ZW0Ac2V0X1BhcnNlZEl0ZW1fSXNOdWxs
AERlY2ltYWwAc2V0X1BhcnNlZEl0ZW1Db3N0MQBzZXRfUGFyc2VkSXRlbUNvc3QxX0lzTnVsbABz
ZXRfUGFyc2VkRnBNZABzZXRfUGFyc2VkRnBNZF9Jc051bGwAc2V0X1BhcnNlZE9yaWdpbmFsU2Vh
c29uAHNldF9QYXJzZWRPcmlnaW5hbFNlYXNvbl9Jc051bGwAc2V0X1BhcnNlZEN1cnJlbnRTZWFz
b24Ac2V0X1BhcnNlZEN1cnJlbnRTZWFzb25fSXNOdWxsAHNldF9QYXJzZWRUaWNrZXRQcmljZQBz
ZXRfUGFyc2VkVGlja2V0UHJpY2VfSXNOdWxsAHNldF9QYXJzZWRPcmlnaW5hbFByaWNlAHNldF9Q
YXJzZWRPcmlnaW5hbFByaWNlX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AElURU0ASVRFTV9J
c051bGwASVRFTUNPU1QxAElURU1DT1NUMV9Jc051bGwAQ1VSUkVOVFNFQVNPTgBDVVJSRU5UU0VB
U09OX0lzTnVsbABPUklHSU5BTFNFQVNPTgBPUklHSU5BTFNFQVNPTl9Jc051bGwARlBNRABGUE1E
X0lzTnVsbABPUklHSU5BTFBSSUNFAE9SSUdJTkFMUFJJQ0VfSXNOdWxsAFRJQ0tFVFBSSUNFAFRJ
Q0tFVFBSSUNFX0lzTnVsbABMaW5lTnVtYmVyAExpbmVOdW1iZXJfSXNOdWxsAFBhcnNlZEl0ZW0A
UGFyc2VkSXRlbV9Jc051bGwAUGFyc2VkSXRlbUNvc3QxAFBhcnNlZEl0ZW1Db3N0MV9Jc051bGwA
UGFyc2VkRnBNZABQYXJzZWRGcE1kX0lzTnVsbABQYXJzZWRPcmlnaW5hbFNlYXNvbgBQYXJzZWRP
cmlnaW5hbFNlYXNvbl9Jc051bGwAUGFyc2VkQ3VycmVudFNlYXNvbgBQYXJzZWRDdXJyZW50U2Vh
c29uX0lzTnVsbABQYXJzZWRUaWNrZXRQcmljZQBQYXJzZWRUaWNrZXRQcmljZV9Jc051bGwAUGFy
c2VkT3JpZ2luYWxQcmljZQBQYXJzZWRPcmlnaW5hbFByaWNlX0lzTnVsbABzZXRfRXJyb3JNZXNz
YWdlAHNldF9FcnJvck1lc3NhZ2VfSXNOdWxsAHNldF9GaWxlTmFtZQBzZXRfRmlsZU5hbWVfSXNO
dWxsAEFkZFJvdwBTZXRFbmRPZlJvd3NldABFcnJvck1lc3NhZ2UARXJyb3JNZXNzYWdlX0lzTnVs
bABGaWxlTmFtZQBGaWxlTmFtZV9Jc051bGwAUGFyZW50Q29tcG9uZW50AFN5c3RlbS5SZXNvdXJj
ZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1
cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQASW5w
dXRJRABJbnB1dE5hbWUAQnVmZmVyAE91dHB1dE1hcABPdXRwdXRzAE91dHB1dElEcwBCdWZmZXJz
AFJvdwBCdWZmZXJDb2x1bW5JbmRleGVzAHZhbHVlAENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJp
YnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU0NfNTI4NDQ3YzRlMTU3
NGI0YThmNmU0MDZjYjkwNzEyZTIAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENv
bHVtbkluZGV4ZXMAZ2V0X0VuZE9mUm93c2V0AEdldE91dHB1dElEAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAElEVFNWYXJpYWJsZURpc3Bl
bnNlcjEwMABnZXRfVmFyaWFibGVEaXNwZW5zZXIASURUU1ZhcmlhYmxlczEwMABMb2NrT25lRm9y
UmVhZABJRFRTVmFyaWFibGUxMDAAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFRvU3RyaW5nAFVubG9jawBM
b2NrT25lRm9yV3JpdGUAQm9vbGVhbgBzZXRfVmFsdWUAVHJpbQBvcF9JbmVxdWFsaXR5AGdldF9M
ZW5ndGgAU3RhcnRzV2l0aABTdWJzdHJpbmcASW50MzIAVHJ5UGFyc2UASW50NjQARm9ybWF0AFRv
VXBwZXIAb3BfRXF1YWxpdHkASXNOdWxsT3JXaGl0ZVNwYWNlAFN5c3RlbS5UZXh0AFN0cmluZ0J1
aWxkZXIAQXBwZW5kTGluZQBHZXRTdHJpbmcASXNOdWxsAEdldEludDY0AHNldF9JdGVtAFNldE51
bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAC5jY3RvcgBTQ181Mjg0NDdjNGUxNTc0YjRhOGY2ZTQwNmNiOTA3MTJlMi5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAA9JAG4AcAB1AHQAIAAwAAANRQByAHIAbwByAHMAAB9V
AHMAZQByADoAOgBGAGkAbABlAF8ATgBhAG0AZQAAJ0wAaQBuAGUAIAB7ADAAfQA6ACAAewAxAH0A
IAAoAHsAMgB9ACkAACFVAHMAZQByADoAOgBEAGEAdABhAF8ARQByAHIAbwByAAAxVQBzAGUAcgA6
ADoARQByAHIAbwByAE0AZQBzAHMAYQBnAGUATwB1AHQAcAB1AHQAAAEACU4ATwBOAEUAAF9DAHUA
cgByAGUAbgB0ACAAUwBlAGEAcwBvAG4AIABzAGgAbwB1AGwAZAAgAGIAZQAgADQAIABjAGgAYQBy
AGEAYwB0AGUAcgBzACAAaQBuACAAbABlAG4AZwB0AGgAAAVTAFMAAAVBAFcAAFNDAHUAcgByAGUA
bgB0ACAAUwBlAGEAcwBvAG4AIABzAGgAbwB1AGwAZAAgAHMAdABhAHIAdAAgAHcAaQB0AGgAIABB
AFcAIABvAHIAIABTAFMAAICRQwB1AHIAcgBlAG4AdAAgAFMAZQBhAHMAbwBuACAAcwBoAG8AdQBs
AGQAIABlAG4AZAAgAHcAaQB0AGgAIABhACAAMgAgAGMAaABhAHIAYQBjAHQAZQByACAAcgBlAHAA
cgBlAHMAZQBuAHQAYQB0AGkAbwBuACAAbwBmACAAdABoAGUAIAB5AGUAYQByAC4AAGFPAHIAaQBn
AGkAbgBhAGwAIABTAGUAYQBzAG8AbgAgAHMAaABvAHUAbABkACAAYgBlACAANAAgAGMAaABhAHIA
YQBjAHQAZQByAHMAIABpAG4AIABsAGUAbgBnAHQAaAAAVU8AcgBpAGcAaQBuAGEAbAAgAFMAZQBh
AHMAbwBuACAAcwBoAG8AdQBsAGQAIABzAHQAYQByAHQAIAB3AGkAdABoACAAQQBXACAAbwByACAA
UwBTAACAk08AcgBpAGcAaQBuAGEAbAAgAFMAZQBhAHMAbwBuACAAcwBoAG8AdQBsAGQAIABlAG4A
ZAAgAHcAaQB0AGgAIABhACAAMgAgAGMAaABhAHIAYQBjAHQAZQByACAAcgBlAHAAcgBlAHMAZQBu
AHQAYQB0AGkAbwBuACAAbwBmACAAdABoAGUAIAB5AGUAYQByAC4AAFtGAFAAIABNAEQAIABGAGwA
YQBnACAAcwBoAG8AdQBsAGQAIABvAG4AbAB5ACAAYgBlACAAYQAgAHMAaQBuAGcAbABlACAAYwBo
AGEAcgBhAGMAdABlAHIALgAAA0YAAANNAABPRgBQACAATQBEACAARgBsAGEAZwAgAHMAaABvAHUA
bABkACAAZQBpAHQAaABlAHIAIABiAGUAIAAnAEYAJwAgAG8AcgAgACcATQAnAC4AASNJAHQAZQBt
ACAAaQBzACAAcgBlAHEAdQBpAHIAZQBkAC4AAClJAG4AdgBhAGwAaQBkACAASQB0AGUAbQAgAEMA
bwBzAHQAIAAxAC4AAC9JAG4AdgBhAGwAaQBkACAATwByAGkAZwBpAG4AYQBsACAAUAByAGkAYwBl
AC4AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAg
AHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUA
IAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAABxUwBDAF8ANQAy
ADgANAA0ADcAYwA0AGUAMQA1ADcANABiADQAYQA4AGYANgBlADQAMAA2AGMAYgA5ADAANwAxADIA
ZQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABkLlEeBYO6RYW+
cKOZzvXIAAiJhF3NgIDMkQi3elxWGTTgiQMGEhgDBhIcAyAAAQMGEhQCBggJIAQBCA4SFRIZCyAE
AQgdCB0SFRIZBSABARIQAgYOAgYCBiACARIQDgkgAwESFR0IEhkDIAAOAyAAAgMgAAoEIAEBDgQg
AQECBSABAREdAygADgMoAAIDKAAKBCgAER0DBhIFBSABARIFAwYSIQMGEiUEAAASIQQAABIlBQAB
ARIlBAgAEiEECAASJQMGEiQEAAASJAQIABIkBCABAQgGIAICDhFdBSABHQgIBgACCBIZDgMHAQgE
AQAAAAQgABJlByACAQ4QEmkFIAESbRwDIAAcBAcBEmkEIAEBHAUAAgIODgMgAAgFIAIOCAgGAAIC
DhAIBwAEDg4cHBwEAAECDgcAAgIOEBEdFQcRDgIOCAIOCAIOAg4CDhEdAg4RHQUgARJ9DgQHARJ9
AwYSFQMGHQgEIAEOCAQgAQIIBCABCggFIAIBCBwIAAESgIkRgI0FIAASgJEHIAIBDhKAkQQHARIh
BiABARGAmQgBAAIAAAAAAAMAAAFHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQoAQAjU0NfNTI4NDQ3YzRlMTU3NGI0
YThmNmU0MDZjYjkwNzEyZTIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxNAAACAEACAAAAAAA
HgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQC0SwAAAAAAAAAAAADOSwAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAwEsAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAA
gAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACwAwAA
AAAAAAAAAACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAA
AAEASWYKFwAAAQBJZgoXPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYA
aQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMA
AAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAA
cAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADUAMgA4ADQANAA3
AGMANABlADEANQA3ADQAYgA0AGEAOABmADYAZQA0ADAANgBjAGIAOQAwADcAMQAyAGUAMgAAAEAA
DwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA1ADgAOQA4AC4AMgA2ADEAOAA1
AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADUAMgA4ADQANAA3AGMA
NABlADEANQA3ADQAYgA0AGEAOABmADYAZQA0ADAANgBjAGIAOQAwADcAMQAyAGUAMgAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQA0AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAQwBfADUAMgA4ADQANAA3AGMANABlADEANQA3ADQAYgA0AGEAOABmADYAZQA0ADAANgBjAGIA
OQAwADcAMQAyAGUAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AEMAXwA1ADIAOAA0ADQANwBjADQAZQAxADUANwA0AGIANABhADgAZgA2AGUANAAwADYAYwBiADkA
MAA3ADEAMgBlADIAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADUAOAA5ADgALgAyADYAMQA4ADUAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADUAOAA5ADgALgAyADYAMQA4ADUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAA4DsAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                          </arrayElements>
                        </property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                          name="VSTAProjectName"
                          typeConverter="NOTBROWSABLE">SC_528447c4e1574b4a8f6e406cb90712e2</property>
                        <property
                          dataType="System.String"
                          description="Specifies the programming language used by the script."
                          name="ScriptLanguage"
                          typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read-only variables."
                          name="ReadOnlyVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="Specifies a comma-separated list of read/write variables."
                          name="ReadWriteVariables"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                        <property
                          dataType="System.String"
                          description="List of breakpoints present on the script."
                          isArray="true"
                          name="BreakpointCollection"
                          typeConverter="NOTBROWSABLE">
                          <arrayElements
                            arrayElementCount="0" />
                        </property>
                        <property
                          dataType="System.String"
                          description="Checksum to match component metedata against compiled codes."
                          name="MetadataChecksum"
                          typeConverter="NOTBROWSABLE">306b5e37e3c2e4c2507b33fddbe20e4d</property>
                        <property
                          dataType="System.String"
                          name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0]"
                          hasSideEffects="true"
                          name="Input 0">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0].Columns[ITEM]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName="ITEM"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ITEM]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0].Columns[ ITEM_COST1]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName=" ITEM_COST1"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ ITEM_COST1]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0].Columns[ CURRENT_SEASON]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName=" CURRENT_SEASON"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ CURRENT_SEASON]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0].Columns[ ORIGINAL_SEASON]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName=" ORIGINAL_SEASON"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ ORIGINAL_SEASON]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0].Columns[ FP_MD]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName=" FP_MD"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ FP_MD]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0].Columns[ ORIGINAL_PRICE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName=" ORIGINAL_PRICE"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ ORIGINAL_PRICE]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0].Columns[ TICKET_PRICE]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="100"
                              cachedName=" TICKET_PRICE"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ TICKET_PRICE]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0].Columns[LineNumber]"
                              cachedDataType="i8"
                              cachedName="LineNumber"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Add Line Number.Outputs[Output 0].Columns[LineNumber]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0]"
                          name="Output 0"
                          synchronousInputId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0]">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedItem]"
                              codePage="1252"
                              dataType="str"
                              length="15"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedItem]"
                              name="ParsedItem" />
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedItemCost1]"
                              dataType="numeric"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedItemCost1]"
                              name="ParsedItemCost1"
                              precision="19"
                              scale="7" />
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedFpMd]"
                              codePage="1252"
                              dataType="str"
                              length="1"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedFpMd]"
                              name="ParsedFpMd" />
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedOriginalSeason]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedOriginalSeason]"
                              name="ParsedOriginalSeason" />
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedCurrentSeason]"
                              codePage="1252"
                              dataType="str"
                              length="4"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedCurrentSeason]"
                              name="ParsedCurrentSeason" />
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedTicketPrice]"
                              dataType="numeric"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedTicketPrice]"
                              name="ParsedTicketPrice"
                              precision="19"
                              scale="7" />
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedOriginalPrice]"
                              dataType="numeric"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedOriginalPrice]"
                              name="ParsedOriginalPrice"
                              precision="19"
                              scale="7" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                        <output
                          refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Errors]"
                          hasSideEffects="true"
                          name="Errors">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Errors].Columns[Error_Message]"
                              codePage="1252"
                              dataType="str"
                              length="1000"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Errors].Columns[Error_Message]"
                              name="Error_Message" />
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Errors].Columns[File_Name]"
                              codePage="1252"
                              dataType="str"
                              length="1000"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Errors].Columns[File_Name]"
                              name="File_Name" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File"
                      componentClassID="DTSAdapter.FlatFileSource.3"
                      contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                      description="Flat File Source"
                      localeId="2057"
                      name="Products File"
                      usesDispositions="true"
                      version="1">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Specifies whether zero-length columns are treated as null."
                          name="RetainNulls">false</property>
                        <property
                          dataType="System.String"
                          description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                          name="FileNameColumnName"></property>
                      </properties>
                      <connections>
                        <connection
                          refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Connections[FlatFileConnection]"
                          connectionManagerID="Package.ConnectionManagers[Products_File]"
                          connectionManagerRefId="Package.ConnectionManagers[Products_File]"
                          name="FlatFileConnection" />
                      </connections>
                      <outputs>
                        <output
                          refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output]"
                          name="Flat File Source Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ITEM]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ITEM]"
                              length="100"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ITEM]"
                              name="ITEM"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ ITEM_COST1]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ ITEM_COST1]"
                              length="100"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ ITEM_COST1]"
                              name=" ITEM_COST1"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ CURRENT_SEASON]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ CURRENT_SEASON]"
                              length="100"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ CURRENT_SEASON]"
                              name=" CURRENT_SEASON"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ ORIGINAL_SEASON]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ ORIGINAL_SEASON]"
                              length="100"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ ORIGINAL_SEASON]"
                              name=" ORIGINAL_SEASON"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ FP_MD]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ FP_MD]"
                              length="100"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ FP_MD]"
                              name=" FP_MD"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ ORIGINAL_PRICE]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ ORIGINAL_PRICE]"
                              length="100"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ ORIGINAL_PRICE]"
                              name=" ORIGINAL_PRICE"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ TICKET_PRICE]"
                              codePage="1252"
                              dataType="str"
                              errorOrTruncationOperation="Conversion"
                              errorRowDisposition="FailComponent"
                              externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ TICKET_PRICE]"
                              length="100"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].Columns[ TICKET_PRICE]"
                              name=" TICKET_PRICE"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                                  name="FastParse">false</property>
                                <property
                                  dataType="System.Boolean"
                                  description="Indicates whether the data is in binary format."
                                  name="UseBinaryFormat">false</property>
                              </properties>
                            </outputColumn>
                          </outputColumns>
                          <externalMetadataColumns
                            isUsed="True">
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ITEM]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name="ITEM" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ ITEM_COST1]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name=" ITEM_COST1" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ CURRENT_SEASON]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name=" CURRENT_SEASON" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ ORIGINAL_SEASON]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name=" ORIGINAL_SEASON" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ FP_MD]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name=" FP_MD" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ ORIGINAL_PRICE]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name=" ORIGINAL_PRICE" />
                            <externalMetadataColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output].ExternalColumns[ TICKET_PRICE]"
                              codePage="1252"
                              dataType="str"
                              length="100"
                              name=" TICKET_PRICE" />
                          </externalMetadataColumns>
                        </output>
                        <output
                          refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Error Output]"
                          isErrorOut="true"
                          name="Flat File Source Error Output">
                          <outputColumns>
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              codePage="1252"
                              dataType="text"
                              description="Flat File Source Error Output Column"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                              name="Flat File Source Error Output Column" />
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                              name="ErrorCode"
                              specialFlags="1" />
                            <outputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              dataType="i4"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                              name="ErrorColumn"
                              specialFlags="2" />
                          </outputColumns>
                          <externalMetadataColumns />
                        </output>
                      </outputs>
                    </component>
                    <component
                      refId="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW"
                      componentClassID="DTSAdapter.RawDestination.3"
                      contactInfo="Writes raw data that will not require parsing or translation. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers.;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
                      description="Writes raw data that will not require parsing or translation. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers."
                      name="Products RAW"
                      version="2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the mode used to access the file."
                          name="AccessMode"
                          typeConverter="AccessMode">1</property>
                        <property
                          dataType="System.Null"
                          description="Output file name"
                          name="FileName"
                          UITypeEditor="Microsoft.DataTransformationServices.Controls.NonValidatingFileNameEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
                        <property
                          dataType="System.String"
                          description="Name of the variable that contains the file name"
                          name="FileNameVariable">User::Products_RAW_FQN</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates what option is used to write to the file."
                          name="WriteOption"
                          typeConverter="WriteOption">0</property>
                      </properties>
                      <inputs>
                        <input
                          refId="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW.Inputs[Raw File Destination Input]"
                          hasSideEffects="true"
                          name="Raw File Destination Input">
                          <inputColumns>
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW.Inputs[Raw File Destination Input].Columns[ParsedItemCost1]"
                              cachedDataType="numeric"
                              cachedName="ParsedItemCost1"
                              cachedPrecision="19"
                              cachedScale="7"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedItemCost1]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW.Inputs[Raw File Destination Input].Columns[ParsedFpMd]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="1"
                              cachedName="ParsedFpMd"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedFpMd]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW.Inputs[Raw File Destination Input].Columns[ParsedOriginalSeason]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4"
                              cachedName="ParsedOriginalSeason"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedOriginalSeason]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW.Inputs[Raw File Destination Input].Columns[ParsedCurrentSeason]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="4"
                              cachedName="ParsedCurrentSeason"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedCurrentSeason]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW.Inputs[Raw File Destination Input].Columns[ParsedTicketPrice]"
                              cachedDataType="numeric"
                              cachedName="ParsedTicketPrice"
                              cachedPrecision="19"
                              cachedScale="7"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedTicketPrice]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW.Inputs[Raw File Destination Input].Columns[ParsedOriginalPrice]"
                              cachedDataType="numeric"
                              cachedName="ParsedOriginalPrice"
                              cachedPrecision="19"
                              cachedScale="7"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedOriginalPrice]" />
                            <inputColumn
                              refId="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW.Inputs[Raw File Destination Input].Columns[ParsedItem]"
                              cachedCodepage="1252"
                              cachedDataType="str"
                              cachedLength="15"
                              cachedName="ParsedItem"
                              lineageId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0].Columns[ParsedItem]" />
                          </inputColumns>
                          <externalMetadataColumns />
                        </input>
                      </inputs>
                    </component>
                  </components>
                  <paths>
                    <path
                      refId="Package\ETL\Foreach Product File (PR)\Check Products.Paths[Flat File Source Output]"
                      endId="Package\ETL\Foreach Product File (PR)\Check Products\Add Line Number.Inputs[Input 0]"
                      name="Flat File Source Output"
                      startId="Package\ETL\Foreach Product File (PR)\Check Products\Products File.Outputs[Flat File Source Output]" />
                    <path
                      refId="Package\ETL\Foreach Product File (PR)\Check Products.Paths[Output 0]"
                      endId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Inputs[Input 0]"
                      name="Output 0"
                      startId="Package\ETL\Foreach Product File (PR)\Check Products\Add Line Number.Outputs[Output 0]" />
                    <path
                      refId="Package\ETL\Foreach Product File (PR)\Check Products.Paths[Output 01]"
                      endId="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW.Inputs[Raw File Destination Input]"
                      name="Output 0"
                      startId="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data.Outputs[Output 0]" />
                  </paths>
                </pipeline>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Data_Error False"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Expression Task"
              DTS:DTSID="{430E2F14-7074-45AA-B888-85FF1E06F79E}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Data_Error False"
              DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; � 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::Data_Error] = false" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Email and Archive"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Script Task"
              DTS:DTSID="{562B8062-E3F5-4A83-9D5B-49ED047F84C7}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Email and Archive"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <ScriptProject
                  Name="ST_c98f359c2129446398acfbbbfb6c7957"
                  VSTAMajorVersion="3"
                  VSTAMinorVersion="0"
                  Language="CSharp"
                  ReadOnlyVariables="User::Full_Archive_Path,User::Products_File_FQN">
                  <ProjectItem
                    Name="Properties\Resources.resx"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c98f359c2129446398acfbbbfb6c7957.Properties.Settings.get_Default():ST_c98f359c2129446398acfbbbfb6c7957.Properties.Sett" +
    "ings")]

namespace ST_c98f359c2129446398acfbbbfb6c7957.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
                  <ProjectItem
                    Name="ST_c98f359c2129446398acfbbbfb6c7957.csproj"
                    Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{B5BDEF23-52E3-406A-B533-398DA477FDE9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_c98f359c2129446398acfbbbfb6c7957</RootNamespace>
    <AssemblyName>ST_c98f359c2129446398acfbbbfb6c7957</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
                  <ProjectItem
                    Name="ScriptMain.cs"
                    Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Net.Mail;
using System.Data.OleDb;
using System.Net;
using System.Text;
using System.IO;
#endregion

namespace ST_c98f359c2129446398acfbbbfb6c7957
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            Variables vars = null;

            /* SMTP Variables */
            Dts.VariableDispenser.LockOneForRead("$Project::SMTPServerName", ref vars);
            string SMTPServerName = vars["$Project::SMTPServerName"].Value.ToString();
            vars.Unlock();

            Dts.VariableDispenser.LockOneForRead("$Project::SMTPPort", ref vars);
            int SMTPPort = int.Parse(vars["$Project::SMTPPort"].Value.ToString());
            vars.Unlock();

            Dts.VariableDispenser.LockOneForRead("$Project::SMTPRequiresSSL", ref vars);
            bool SMTPRequiresSSL = bool.Parse(vars["$Project::SMTPRequiresSSL"].Value.ToString());
            vars.Unlock();

            Dts.VariableDispenser.LockOneForRead("$Project::SMTPRequiresAuthentication", ref vars);
            bool SMTPRequiresAuthentication = bool.Parse(vars["$Project::SMTPRequiresAuthentication"].Value.ToString());
            vars.Unlock();
            /* SMTP Variables End */

            Dts.VariableDispenser.LockOneForRead("$Project::PartnerAlertEmailList", ref vars);
            string ApparelAlertEmailList = vars["$Project::PartnerAlertEmailList"].Value.ToString();
            vars.Unlock();    
            
            Dts.VariableDispenser.LockOneForRead("User::ErrorMessageOutput", ref vars);
            string ErrorMessageOutput = vars["User::ErrorMessageOutput"].Value.ToString();
            vars.Unlock();
           
            Dts.VariableDispenser.LockOneForRead("User::Products_File_FQN", ref vars);
            string ProductsFileFQN = vars["User::Products_File_FQN"].Value.ToString();
            vars.Unlock();
            
            string FileName = Path.GetFileName(ProductsFileFQN);

            SmtpClient SMTPServer = new SmtpClient(SMTPServerName, SMTPPort);
            SMTPServer.DeliveryMethod = SmtpDeliveryMethod.Network;
            SMTPServer.EnableSsl = SMTPRequiresSSL;
            SMTPServer.UseDefaultCredentials = SMTPRequiresAuthentication;

            StringBuilder EmailBody = new StringBuilder();
            EmailBody.AppendLine("Error processing data file " + FileName + ". The following errors have occurred. Please correct and resend file.");
            EmailBody.AppendLine();
            EmailBody.Append(ErrorMessageOutput);

            MailMessage EmailMessage = new MailMessage();
            string EmailSubject = "Dune Data Warehouse Data Load Failure";
            string[] emailList = ApparelAlertEmailList.Split(new char[] { ',' });
            foreach (string e in emailList)
            {
                EmailMessage.To.Add(e);
            }
            EmailMessage.From = new MailAddress("PartnerAdministrator@thedunegroup.com");
            EmailMessage.Body = EmailBody.ToString();
            EmailMessage.Subject = EmailSubject;
            EmailMessage.Attachments.Add(new Attachment(ProductsFileFQN));
            EmailMessage.IsBodyHtml = false;

            try
            {
                SMTPServer.Send(EmailMessage);
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (SmtpFailedRecipientsException e)
            {
                Dts.Events.FireError(-1, "Email", "Unable to send email to all receipients. Error Message: " + e.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
            catch (SmtpException e)
            {
                Dts.Events.FireError(-1, "Email", "Unable to send email. Error Message: " + e.Message + "\r\n" + e.InnerException, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }

            /* Get rid of the email so we can move the file */
            EmailMessage.Dispose();

            /* Archive the file to errors folder */
            Dts.VariableDispenser.LockOneForRead("User::Full_Error_Path", ref vars);
            string ErrorFolder = vars["User::Full_Error_Path"].Value.ToString();
            vars.Unlock();

            string ErrorFileFQN = ErrorFolder + FileName;

            try
            {

                /* Check if file exists */
                if (File.Exists(ErrorFileFQN))
                {
                    /* Add ticks to the end to make it unique if it exists */
                    File.Move(ErrorFileFQN, ErrorFileFQN + "." + DateTime.Now.Ticks.ToString());
                }

                File.Move(ProductsFileFQN, ErrorFileFQN);

                /* dont set success if its failed before */
                if (Dts.TaskResult != (int)ScriptResults.Failure)
                {
                    Dts.TaskResult = (int)ScriptResults.Success;
                }
            }
            catch (IOException e)
            {
                Dts.Events.FireError(-1, "Error Archive", "Unable to move or rename file. Erorr Message: " + e.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
                  <ProjectItem
                    Name="Project"
                    Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_c98f359c2129446398acfbbbfb6c7957</msb:CodeName>
		<msb:ProjectId>{C5A9FB68-0131-47D7-AC6F-50BE3EC447F4}</msb:ProjectId>
		<msb:DisplayName>ST_c98f359c2129446398acfbbbfb6c7957</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_c98f359c2129446398acfbbbfb6c7957.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\AssemblyInfo.cs"
                    Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_c98f359c2129446398acfbbbfb6c7957")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_c98f359c2129446398acfbbbfb6c7957")]
[assembly: AssemblyCopyright("Copyright @  2013")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Settings.settings"
                    Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
                  <ProjectItem
                    Name="Properties\Resources.Designer.cs"
                    Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c98f359c2129446398acfbbbfb6c7957.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c98f359c2129446398acfbbbfb6c7957.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_c98f359c2129446398acfbbbfb6c7957.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_c98f359c2129446398acfbbbfb6c7957.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_c98f359c2129446398acfbbbfb6c7957.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
                  <BinaryItem
                    Name="ST_c98f359c2129446398acfbbbfb6c7957.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAADFhVgAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAcjoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACA6AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAeBoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABU
OgAAAAAAAEgAAAACAAUA3CQAAIwUAAABAAAAAAAAAGg5AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwDtAwAAAQAAERQKAigQAAAKbxEAAApyAQAAcBIAbxIA
AAoGcgEAAHBvEwAACm8UAAAKbxUAAAoLBm8WAAAKAigQAAAKbxEAAApyMwAAcBIAbxIAAAoGcjMA
AHBvEwAACm8UAAAKbxUAAAooFwAACgwGbxYAAAoCKBAAAApvEQAACnJZAABwEgBvEgAACgZyWQAA
cG8TAAAKbxQAAApvFQAACigYAAAKDQZvFgAACgIoEAAACm8RAAAKco0AAHASAG8SAAAKBnKNAABw
bxMAAApvFAAACm8VAAAKKBgAAAoTBAZvFgAACgIoEAAACm8RAAAKctcAAHASAG8SAAAKBnLXAABw
bxMAAApvFAAACm8VAAAKBm8WAAAKAigQAAAKbxEAAApyFwEAcBIAbxIAAAoGchcBAHBvEwAACm8U
AAAKbxUAAAoTBQZvFgAACgIoEAAACm8RAAAKckkBAHASAG8SAAAKBnJJAQBwbxMAAApvFAAACm8V
AAAKEwYGbxYAAAoRBigZAAAKEwcHCHMaAAAKEwgRCBZvGwAAChEICW8cAAAKEQgRBG8dAAAKcx4A
AAoTCREJcnkBAHARB3KxAQBwKB8AAApvIAAACiYRCW8hAAAKJhEJEQVvIgAACiZzIwAAChMKcj4C
AHATCxeNKAAAASUWHyydbyQAAAoTDRYTDisbEQ0RDpoTDxEKbyUAAAoRD28mAAAKEQ4XWBMOEQ4R
DY5pMt0RCnKKAgBwcycAAApvKAAAChEKEQlvFQAACm8pAAAKEQoRC28qAAAKEQpvKwAAChEGcywA
AApvLQAAChEKFm8uAAAKEQgRCm8vAAAKAigQAAAKFm8wAAAK3ZoAAAATEAIoEAAACm8xAAAKFXLW
AgBwcuICAHAREG8yAAAKKDMAAApyVAMAcBZvNAAACiYCKBAAAAoXbzAAAAreXBMRAigQAAAKbzEA
AAoVctYCAHAajRkAAAElFnJWAwBwoiUXERFvMgAACqIlGHKiAwBwoiUZERFvNQAACqIoNgAACnJU
AwBwFm80AAAKJgIoEAAAChdvMAAACt4AEQpvNwAACgIoEAAACm8RAAAKcqgDAHASAG8SAAAKBnKo
AwBwbxMAAApvFAAACm8VAAAKBm8WAAAKEQcoMwAAChMMEQwoOAAACiwqEQwRDHLUAwBwKDkAAAoT
EhISKDoAAAoTExITKDsAAAooHwAACig8AAAKEQYRDCg8AAAKAigQAAAKbz0AAAoXLgwCKBAAAAoW
bzAAAArePhMUAigQAAAKbzEAAAoVctgDAHBy9AMAcBEUbzIAAAooMwAACnJUAwBwFm80AAAKJgIo
EAAAChdvMAAACt4AKgAAAAEoAAAAAGACGnoCPhMAAAEAAGACGrgCXBQAAAEAAFYDWK4DPhYAAAEe
Aig+AAAKKh4CKD8AAAoqrn4BAAAELR5yUgQAcNADAAACKEAAAApvQQAACnNCAAAKgAEAAAR+AQAA
BCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoQwAACioucwgAAAaAAwAABCoAAEJTSkIBAAEAAAAA
AAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAADwFAAAjfgAAqAUAAOwHAAAjU3RyaW5ncwAAAACUDQAA
xAQAACNVUwBYEgAAEAAAACNHVUlEAAAAaBIAACQCAAAjQmxvYgAAAAAAAAACAAABVx2iCQkDAAAA
+gEzABYAAAEAAAA0AAAABQAAAAYAAAAJAAAAAQAAAEMAAAACAAAAEAAAAAEAAAACAAAAAwAAAAQA
AAABAAAAAQAAAAQAAAABAAAAAQAAAAAAaAQBAAAAAAAGANgCKgYGAGcDKgYGACQCFwYPAJ4GAAAG
AFECFAUGALsCFAUGAJwCFAUGAE4DFAUGAPgCFAUGABEDFAUGAGgCFAUGAIMCmgMKACwD6AMKAJUB
6AMOANwGNQESAKkHWAQGALQFvwcSAOIAWAQSAH4FWAQSAF0FWAQGACwBtgQGAFEFRwAGAMYEtgQG
AAcCFwYGAGYHtgQGAMYFSgYGAKMF/wQSANcBQgQSADgCQgQSALEB6gQGAOwBKgYKADAE6AMOAO4F
NQEOAO4ANQEGAA4AtgQGANcEtgQGAL0DRwASALMAWAQGALYDtgQGAK8FtgQSACYFWAQSABsHWAQS
ADwFWAQSALQHWAQGAAEAEQQKANYF6AMGAJIFtgQGABsBRwAGABQAtgQGAGABtgQGAPcAtgQGAOAH
FAUAAAAAPgAAAAAAAQABAAEAEADfBBoAOQABAAEAAAAQAFEGrQZlAAEAAwAAARAA5gatBnkAAwAH
AAMBAAAvBwAAXQAEAAoAEQDLBCgBEQCFASwBEQDGADABBgZwADQBVoATBzcBVoBlATcBUCAAAAAA
hgDlBAYAAQB0JAAAAACGGAoGBgABAHwkAAAAAIMYCgYGAAEAhCQAAAAAkwjCBTsBAQCwJAAAAACT
CG0BQAEBALckAAAAAJMIeQFFAQEAvyQAAAAAlgh/B0sBAgDGJAAAAACGGAoGBgACAM4kAAAAAJEY
EAZQAQIAAAABAI8DCQAKBgEAEQAKBgYAGQAKBgoAKQAKBhAAMQAKBhAAOQAKBhAAQQAKBhAASQAK
BhAAUQAKBhAAWQAKBhAAYQAKBhAAaQAKBgYAwQAKBgYA6QAKBhUA+QAKBgYAcQAnBzwAAQHqBUIA
CQGBAEgAeQCtBFAAEQGFA1cAyQC0A1sAeQDCAwYAGQHRAV8AIQHRAWQAKQEgAWkAgQAKBm4AgQCg
AHQAgQCfBHsAgQD5BnsAiQAKBgYAOQFfB4AAiQBVAYcAiQBVAY0AiQCZAIcAkQAKBgYAOQF5B5IA
kQCcBZkASQGQABAAUQEKBhAAkQC9BJ8AkQDTBxAAkQBtBxAAkQA9B6YAYQEKBhAADACQALUAkQCQ
BHsAgQCUALsAAQGaBwEAAQFNB8EAeQHWAFsAOQFfB8cAcQEABs0AeQFrBdYAOQFfB9wAkQDJAQYA
gQFYB2QAqQDLB+IAqQDvBucAiQG0A1sAgQGVA+sAAQGLB/EAcQAKBgYAyQAKBgYAkQEJAfUAkQHc
B/4A0QAKBgQB8QAKBgYACAAUAB4BCAAYACMBKQBzAIsBLgALAGMBLgATAGwBLgAbAIsBLgAjAJQB
LgArAL0BLgAzAL0BLgA7AL0BLgBDAJQBLgBLAMMBLgBTAL0BLgBbANoBQwBjACMBSQBzAIsBYQB7
ACMBYwBrACMBGwADAAEABAADAAAAxgVUAQAAjQFZAQAAgwdeAQIABAADAAIABQAFAAEABgAFAAIA
BwAHAKwABIAAAAEAAABYGMA+AAAAAAAAGgAAAAQAAAAAAAAAAAAAAAwBeAAAAAAACwAAAAAAAAAA
AAAAFQHJAwAAAAALAAAAAAAAAAAAAAAVAVEAAAAAAAQAAAAAAAAAAAAAAAwBtgQAAAAAAAAAAAEA
AABbBgAABQACAAAAAENvbGxlY3Rpb25gMQBJbnQzMgBJbnQ2NABTVF9jOThmMzU5YzIxMjk0NDYz
OThhY2ZiYmJmYjZjNzk1NwA8TW9kdWxlPgBTeXN0ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5N
YW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIATG9ja09uZUZvclJlYWQAQWRkAFNlbmQAQXBwZW5k
AHNldF9EZWxpdmVyeU1ldGhvZABTbXRwRGVsaXZlcnlNZXRob2QAZGVmYXVsdEluc3RhbmNlAGdl
dF9NZXNzYWdlAE1haWxNZXNzYWdlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAEZpbGUAR2V0RmlsZU5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZQBBcHBlbmRMaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9u
U2V0dGluZ3NCYXNlAERpc3Bvc2UAUGFyc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJH
ZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRl
AEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3Nl
bWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBB
c3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AGdldF9WYWx1ZQB2YWx1ZQBNb3ZlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcA
UGF0aABVbmxvY2sATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU3lzdGVtLkNvbGxlY3Rpb25zLk9iamVjdE1vZGVs
AFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTeXN0ZW0uTmV0Lk1haWwA
U1RfYzk4ZjM1OWMyMTI5NDQ2Mzk4YWNmYmJiZmI2Yzc5NTcuZGxsAHNldF9Jc0JvZHlIdG1sAHNl
dF9FbmFibGVTc2wAZ2V0X0l0ZW0AU3lzdGVtAHNldF9Gcm9tAEVudW0AcmVzb3VyY2VNYW4AQm9v
bGVhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAE1haWxBZGRyZXNzQ29sbGVjdGlvbgBBdHRhY2htZW50Q29sbGVj
dGlvbgBJT0V4Y2VwdGlvbgBTbXRwRXhjZXB0aW9uAGdldF9Jbm5lckV4Y2VwdGlvbgBTbXRwRmFp
bGVkUmVjaXBpZW50c0V4Y2VwdGlvbgBnZXRfVG8AQ3VsdHVyZUluZm8AQ2hhcgBTdHJpbmdCdWls
ZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBnZXRfVmFyaWFibGVE
aXNwZW5zZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2M5OGYzNTljMjEy
OTQ0NjM5OGFjZmJiYmZiNmM3OTU3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF9jOThmMzU5YzIxMjk0NDYzOThhY2ZiYmJmYjZjNzk1Ny5Qcm9wZXJ0aWVz
AFZhcmlhYmxlcwBTZXR0aW5ncwBnZXRfVGlja3MAc2V0X1VzZURlZmF1bHRDcmVkZW50aWFscwBT
dWNjZXNzAE1haWxBZGRyZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfQXR0YWNobWVudHMA
Z2V0X0V2ZW50cwBFeGlzdHMAQ29uY2F0AE9iamVjdABzZXRfU3ViamVjdABTcGxpdABnZXRfRGVm
YXVsdABnZXRfVGFza1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTbXRwQ2xpZW50AEF0dGFjaG1lbnQA
U3lzdGVtLlRleHQAZ2V0X05vdwBzZXRfQm9keQBnZXRfQXNzZW1ibHkAAAAAADEkAFAAcgBvAGoA
ZQBjAHQAOgA6AFMATQBUAFAAUwBlAHIAdgBlAHIATgBhAG0AZQAAJSQAUAByAG8AagBlAGMAdAA6
ADoAUwBNAFQAUABQAG8AcgB0AAAzJABQAHIAbwBqAGUAYwB0ADoAOgBTAE0AVABQAFIAZQBxAHUA
aQByAGUAcwBTAFMATAAASSQAUAByAG8AagBlAGMAdAA6ADoAUwBNAFQAUABSAGUAcQB1AGkAcgBl
AHMAQQB1AHQAaABlAG4AdABpAGMAYQB0AGkAbwBuAAA/JABQAHIAbwBqAGUAYwB0ADoAOgBQAGEA
cgB0AG4AZQByAEEAbABlAHIAdABFAG0AYQBpAGwATABpAHMAdAAAMVUAcwBlAHIAOgA6AEUAcgBy
AG8AcgBNAGUAcwBzAGEAZwBlAE8AdQB0AHAAdQB0AAAvVQBzAGUAcgA6ADoAUAByAG8AZAB1AGMA
dABzAF8ARgBpAGwAZQBfAEYAUQBOAAA3RQByAHIAbwByACAAcAByAG8AYwBlAHMAcwBpAG4AZwAg
AGQAYQB0AGEAIABmAGkAbABlACAAAICLLgAgAFQAaABlACAAZgBvAGwAbABvAHcAaQBuAGcAIABl
AHIAcgBvAHIAcwAgAGgAYQB2AGUAIABvAGMAYwB1AHIAcgBlAGQALgAgAFAAbABlAGEAcwBlACAA
YwBvAHIAcgBlAGMAdAAgAGEAbgBkACAAcgBlAHMAZQBuAGQAIABmAGkAbABlAC4AAEtEAHUAbgBl
ACAARABhAHQAYQAgAFcAYQByAGUAaABvAHUAcwBlACAARABhAHQAYQAgAEwAbwBhAGQAIABGAGEA
aQBsAHUAcgBlAABLUABhAHIAdABuAGUAcgBBAGQAbQBpAG4AaQBzAHQAcgBhAHQAbwByAEAAdABo
AGUAZAB1AG4AZQBnAHIAbwB1AHAALgBjAG8AbQAAC0UAbQBhAGkAbAAAcVUAbgBhAGIAbABlACAA
dABvACAAcwBlAG4AZAAgAGUAbQBhAGkAbAAgAHQAbwAgAGEAbABsACAAcgBlAGMAZQBpAHAAaQBl
AG4AdABzAC4AIABFAHIAcgBvAHIAIABNAGUAcwBzAGEAZwBlADoAIAAAAQBLVQBuAGEAYgBsAGUA
IAB0AG8AIABzAGUAbgBkACAAZQBtAGEAaQBsAC4AIABFAHIAcgBvAHIAIABNAGUAcwBzAGEAZwBl
ADoAIAAABQ0ACgAAK1UAcwBlAHIAOgA6AEYAdQBsAGwAXwBFAHIAcgBvAHIAXwBQAGEAdABoAAAD
LgAAG0UAcgByAG8AcgAgAEEAcgBjAGgAaQB2AGUAAF1VAG4AYQBiAGwAZQAgAHQAbwAgAG0AbwB2
AGUAIABvAHIAIAByAGUAbgBhAG0AZQAgAGYAaQBsAGUALgAgAEUAcgBvAHIAcgAgAE0AZQBzAHMA
YQBnAGUAOgAgAABxUwBUAF8AYwA5ADgAZgAzADUAOQBjADIAMQAyADkANAA0ADYAMwA5ADgAYQBj
AGYAYgBiAGIAZgBiADYAYwA3ADkANQA3AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAb8xOjO+wlQpNnbenr1YpRAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFxIAcV
Ej0OCAICDg4OEkESRRJJDg4dDggOEk0SURFVChJZBSAAEoCBBSAAEoCFByACAQ4QEj0GIAESgIkc
AyAAHAMgAA4EAAEIDgQAAQIOBAABDg4FIAIBDggGIAEBEYCZBCABAQIGAAMODg4OBSABEkUOBCAA
EkUGIAEdDh0DBSAAEoClBiABARKAqQUgABKArQgVEoC1ARKAsQUgAQETAAUgAQESSQUgABKAuQUA
Ag4ODgggBQIIDg4OCAUgABKAvQUAAQ4dHAQAABFVAyAACgUAAgEODgMgAAgIAAESgMkRgM0FIAAS
gNEHIAIBDhKA0Qi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJpAwYSbQMGEhACBggDBhEU
BAAAEmkEAAASbQUAAQESbQQAABIQAwAAAQQIABJpBAgAEm0ECAASEAgBAAgAAAAAAB4BAAEAVAIW
V3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYzk4ZjM1OWMyMTI5NDQ2Mzk4
YWNmYmJiZmI2Yzc5NTcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMwAARwEAGi5ORVRGcmFt
ZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29y
ayA0AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAASDoAAAAAAAAAAAAAYjoAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AFQ6AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQDAPlgYAAABAMA+WBg/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfAGMAOQA4AGYAMwA1ADkAYwAyADEAMgA5ADQANAA2ADMAOQA4AGEAYwBmAGIAYgBiAGYAYgA2
AGMANwA5ADUANwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA2ADIA
MwAyAC4AMQA2ADAANgA0AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
AGMAOQA4AGYAMwA1ADkAYwAyADEAMgA5ADQANAA2ADMAOQA4AGEAYwBmAGIAYgBiAGYAYgA2AGMA
NwA5ADUANwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AYwA5ADgAZgAzADUAOQBjADIAMQAyADkANAA0ADYAMwA5ADgAYQBjAGYAYgBiAGIA
ZgBiADYAYwA3ADkANQA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfAGMAOQA4AGYAMwA1ADkAYwAyADEAMgA5ADQANAA2ADMAOQA4AGEAYwBmAGIAYgBiAGYA
YgA2AGMANwA5ADUANwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4ANgAyADMAMgAuADEANgAwADYANAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANgAyADMAMgAuADEANgAwADYANAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAB0OgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
                </ScriptProject>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Log File Failed"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3F68901A-C37E-439C-9E2E-BBF1DB66C5A9}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log File Failed"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="EXEC dbo.EtlProcessLogInsert&#xA;    @EtlName = 'Store_to_Management'&#xA;   , -- varchar(1000)&#xA;    @EtlFileName = ?&#xA;   , -- varchar(1000)&#xA;    @EtlMessage = 'There has been an error while processing the file.' -- varchar(1000)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::Products_File_FQN"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Log File Process Starting"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1d77d01b-45dd-47aa-a6b1-d71d5977ecb7}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log File Process Starting"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="EXEC dbo.EtlProcessLogInsert&#xA;    @EtlName = 'Partner_Product_to_Management'&#xA;   , -- varchar(1000)&#xA;    @EtlFileName = ?&#xA;   , -- varchar(1000)&#xA;    @EtlMessage = 'Starting to process file.' -- varchar(1000)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::Products_File_FQN"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Log File Success"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{11eb15f6-e29c-44a7-a221-d2fa4a857db6}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log File Success"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="&#xA;EXEC dbo.EtlProcessLogInsert&#xA;    @EtlName = 'Partner_Product_To_Management'&#xA;   , -- varchar(1000)&#xA;    @EtlFileName = ?&#xA;   , -- varchar(1000)&#xA;    @EtlMessage = 'Product File has been staged successfully.' -- varchar(1000)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::Products_File_FQN"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Log Merge Complete"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{199d5bea-ef1f-4721-863c-a89606fad99b}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Log Merge Complete"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="&#xA;EXEC dbo.EtlProcessLogInsert&#xA;    @EtlName = 'Product_To_Management'&#xA;   , -- varchar(1000)&#xA;    @EtlFileName = ?&#xA;   , -- varchar(1000)&#xA;    @EtlMessage = 'Products have been merged.' -- varchar(1000)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="0"
                    SQLTask:DtsVariableName="User::Products_File_FQN"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="129"
                    SQLTask:ParameterSize="-1" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Merge Products"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1925C4D4-253F-43BC-8590-6D60986C7522}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Merge Products"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="EXEC dbo.MergeProductsFromStage" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Stage"
              DTS:CreationName="STOCK:SEQUENCE"
              DTS:Description="Sequence Container"
              DTS:DTSID="{1B04BCFB-3B66-4DE0-8B9F-22BF86CB560D}"
              DTS:ExecutableType="STOCK:SEQUENCE"
              DTS:LocaleID="-1"
              DTS:ObjectName="Stage">
              <DTS:Variables />
              <DTS:Executables>
                <DTS:Executable
                  DTS:refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products"
                  DTS:CreationName="SSIS.Pipeline.3"
                  DTS:DelayValidation="True"
                  DTS:Description="Data Flow Task"
                  DTS:DTSID="{239FB99F-7782-453E-8531-C4660EAA5DCE}"
                  DTS:ExecutableType="SSIS.Pipeline.3"
                  DTS:LocaleID="-1"
                  DTS:ObjectName="Stage Products"
                  DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
                  <DTS:Variables />
                  <DTS:ObjectData>
                    <pipeline
                      version="1">
                      <components>
                        <component
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode)"
                          componentClassID="DTSTransform.DerivedColumn.3"
                          contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                          name="Add Zero to GTIN(ItemCode)"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Inputs[Derived Column Input]"
                              description="Input to the Derived Column Transformation"
                              name="Derived Column Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Inputs[Derived Column Input].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="15"
                                  cachedName="ParsedItem"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItem]"
                                  truncationRowDisposition="FailComponent"
                                  usageType="readWrite">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">(DT_STR,15,1252)("0" + #{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItem]})</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">(DT_STR,15,1252)("0" + ParsedItem)</property>
                                  </properties>
                                </inputColumn>
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Outputs[Derived Column Output]"
                              description="Default Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              name="Derived Column Output"
                              synchronousInputId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Inputs[Derived Column Input]">
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Outputs[Derived Column Error Output]"
                              description="Error Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Derived Column Error Output"
                              synchronousInputId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0"
                          componentClassID="DTSTransform.ConditionalSplit.3"
                          contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                          name="Check for 1st Char 0"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Inputs[Conditional Split Input]"
                              description="Input to the Conditional Split Transformation"
                              name="Conditional Split Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Inputs[Conditional Split Input].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="15"
                                  cachedName="ParsedItem"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItem]" />
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Outputs[DoNotAddZero]"
                              description="Output 3 of the Conditional Split Transformation"
                              errorOrTruncationOperation="Computation"
                              errorRowDisposition="FailComponent"
                              exclusionGroup="1"
                              name="DoNotAddZero"
                              synchronousInputId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Inputs[Conditional Split Input]"
                              truncationRowDisposition="FailComponent">
                              <properties>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                                  name="Expression">[FINDSTRING](#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItem]},"0",1) == 1</property>
                                <property
                                  containsID="true"
                                  dataType="System.String"
                                  description="Specifies the friendly version of the expression. This expression version uses column names."
                                  expressionType="Notify"
                                  name="FriendlyExpression">FINDSTRING(ParsedItem,"0",1) == 1</property>
                                <property
                                  dataType="System.Int32"
                                  description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                                  name="EvaluationOrder">0</property>
                              </properties>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Outputs[AddZero]"
                              description="Default Output of the Conditional Split Transformation"
                              exclusionGroup="1"
                              name="AddZero"
                              synchronousInputId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Inputs[Conditional Split Input]">
                              <properties>
                                <property
                                  dataType="System.Boolean"
                                  name="IsDefaultOut">true</property>
                              </properties>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Outputs[Conditional Split Error Output]"
                              description="Error Output of the Conditional Split Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Conditional Split Error Output"
                              synchronousInputId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Inputs[Conditional Split Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column"
                          componentClassID="DTSTransform.DerivedColumn.3"
                          contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                          description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                          name="Derived Column"
                          usesDispositions="true">
                          <inputs>
                            <input
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Inputs[Derived Column Input]"
                              description="Input to the Derived Column Transformation"
                              name="Derived Column Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Inputs[Derived Column Input].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="15"
                                  cachedName="ParsedItem"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItem]" />
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output]"
                              description="Default Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              name="Derived Column Output"
                              synchronousInputId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Partner_Id]"
                                  dataType="i4"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Partner_Id]"
                                  name="Partner_Id"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">@[User::Partner_Id]</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">@[User::Partner_Id]</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  length="4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Partner_Code]"
                                  name="Partner_Code"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">(DT_STR,4,1252)(@[User::Partner_Code])</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">(DT_STR,4,1252)(@[User::Partner_Code])</property>
                                  </properties>
                                </outputColumn>
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Product_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  errorOrTruncationOperation="Computation"
                                  errorRowDisposition="FailComponent"
                                  length="17"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Product_BKey]"
                                  name="Product_BKey"
                                  truncationRowDisposition="FailComponent">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Expression"
                                      name="Expression">(DT_STR,17,1252)(@[User::Partner_Code] + #{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItem]})</property>
                                    <property
                                      containsID="true"
                                      dataType="System.String"
                                      description="Derived Column Friendly Expression"
                                      expressionType="Notify"
                                      name="FriendlyExpression">(DT_STR,17,1252)(@[User::Partner_Code] + ParsedItem)</property>
                                  </properties>
                                </outputColumn>
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                            <output
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Error Output]"
                              description="Error Output of the Derived Column Transformation"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="Derived Column Error Output"
                              synchronousInputId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Inputs[Derived Column Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items"
                          componentClassID="DTSTransform.UnionAll.3"
                          contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                          name="Merge with the Regular Items"
                          version="1">
                          <inputs>
                            <input
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1]"
                              name="Union All Input 1">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="15"
                                  cachedName="ParsedItem"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItem]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedItem]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1].Columns[ParsedItemCost1]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedItemCost1"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItemCost1]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedItemCost1]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1].Columns[ParsedFpMd]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="1"
                                  cachedName="ParsedFpMd"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedFpMd]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedFpMd]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1].Columns[ParsedOriginalSeason]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="ParsedOriginalSeason"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedOriginalSeason]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedOriginalSeason]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1].Columns[ParsedCurrentSeason]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="ParsedCurrentSeason"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedCurrentSeason]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedCurrentSeason]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1].Columns[ParsedTicketPrice]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedTicketPrice"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedTicketPrice]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedTicketPrice]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1].Columns[ParsedOriginalPrice]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedOriginalPrice"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedOriginalPrice]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedOriginalPrice]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1].Columns[Partner_Id]"
                                  cachedDataType="i4"
                                  cachedName="Partner_Id"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Partner_Id]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Partner_Id]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1].Columns[Partner_Code]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="Partner_Code"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Partner_Code]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Partner_Code]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1].Columns[Product_BKey]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="17"
                                  cachedName="Product_BKey"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Product_BKey]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Product_BKey]}</property>
                                  </properties>
                                </inputColumn>
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                            <input
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2]"
                              hasSideEffects="true"
                              name="Union All Input 2">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="15"
                                  cachedName="ParsedItem"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItem]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedItem]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2].Columns[ParsedItemCost1]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedItemCost1"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItemCost1]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedItemCost1]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2].Columns[ParsedFpMd]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="1"
                                  cachedName="ParsedFpMd"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedFpMd]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedFpMd]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2].Columns[ParsedOriginalSeason]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="ParsedOriginalSeason"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedOriginalSeason]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedOriginalSeason]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2].Columns[ParsedCurrentSeason]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="ParsedCurrentSeason"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedCurrentSeason]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedCurrentSeason]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2].Columns[ParsedTicketPrice]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedTicketPrice"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedTicketPrice]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedTicketPrice]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2].Columns[ParsedOriginalPrice]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedOriginalPrice"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedOriginalPrice]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedOriginalPrice]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2].Columns[Partner_Id]"
                                  cachedDataType="i4"
                                  cachedName="Partner_Id"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Partner_Id]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Partner_Id]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2].Columns[Partner_Code]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="Partner_Code"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Partner_Code]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Partner_Code]}</property>
                                  </properties>
                                </inputColumn>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2].Columns[Product_BKey]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="17"
                                  cachedName="Product_BKey"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output].Columns[Product_BKey]">
                                  <properties>
                                    <property
                                      containsID="true"
                                      dataType="System.Int32"
                                      description="Output column lineage ID"
                                      name="OutputColumnLineageID">#{Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Product_BKey]}</property>
                                  </properties>
                                </inputColumn>
                              </inputColumns>
                              <externalMetadataColumns />
                            </input>
                            <input
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 3]"
                              dangling="true"
                              hasSideEffects="true"
                              name="Union All Input 3">
                              <externalMetadataColumns />
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1]"
                              name="Union All Output 1">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  length="15"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedItem]"
                                  name="ParsedItem" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedItemCost1]"
                                  dataType="numeric"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedItemCost1]"
                                  name="ParsedItemCost1"
                                  precision="19"
                                  scale="7" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedFpMd]"
                                  name="ParsedFpMd" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedOriginalSeason]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedOriginalSeason]"
                                  name="ParsedOriginalSeason" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedCurrentSeason]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedCurrentSeason]"
                                  name="ParsedCurrentSeason" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedTicketPrice]"
                                  dataType="numeric"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedTicketPrice]"
                                  name="ParsedTicketPrice"
                                  precision="19"
                                  scale="7" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedOriginalPrice]"
                                  dataType="numeric"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedOriginalPrice]"
                                  name="ParsedOriginalPrice"
                                  precision="19"
                                  scale="7" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Partner_Id]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Partner_Id]"
                                  name="Partner_Id" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Partner_Code]"
                                  name="Partner_Code" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Product_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  length="17"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Product_BKey]"
                                  name="Product_BKey" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW"
                          componentClassID="DTSAdapter.RawSource.3"
                          contactInfo="Reads raw data from a flat file that was previously written by the Raw File destination. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers.;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                          description="Reads raw data from a flat file that was previously written by the Raw File destination. For example, allow packages to run faster by reading from a local raw file instead of a slow source or manually distribute data for parallel processing on multiple computers."
                          name="Products RAW"
                          version="1">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the file."
                              name="AccessMode"
                              typeConverter="AccessMode">1</property>
                            <property
                              dataType="System.Null"
                              description="Output file name"
                              name="FileName"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.NonValidatingFileNameEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
                            <property
                              dataType="System.String"
                              description="Name of the variable that contains the file name"
                              name="FileNameVariable">User::Products_RAW_FQN</property>
                          </properties>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output]"
                              name="Raw File Source Output">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedItem]"
                                  length="15"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItem]"
                                  name="ParsedItem" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItemCost1]"
                                  dataType="numeric"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedItemCost1]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedItemCost1]"
                                  name="ParsedItemCost1"
                                  precision="19"
                                  scale="7" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedFpMd]"
                                  length="1"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedFpMd]"
                                  name="ParsedFpMd" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedOriginalSeason]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedOriginalSeason]"
                                  length="4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedOriginalSeason]"
                                  name="ParsedOriginalSeason" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedCurrentSeason]"
                                  codePage="1252"
                                  dataType="str"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedCurrentSeason]"
                                  length="4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedCurrentSeason]"
                                  name="ParsedCurrentSeason" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedTicketPrice]"
                                  dataType="numeric"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedTicketPrice]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedTicketPrice]"
                                  name="ParsedTicketPrice"
                                  precision="19"
                                  scale="7" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedOriginalPrice]"
                                  dataType="numeric"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedOriginalPrice]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].Columns[ParsedOriginalPrice]"
                                  name="ParsedOriginalPrice"
                                  precision="19"
                                  scale="7" />
                              </outputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  length="15"
                                  name="ParsedItem" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedItemCost1]"
                                  dataType="numeric"
                                  name="ParsedItemCost1"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  name="ParsedFpMd" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedOriginalSeason]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  name="ParsedOriginalSeason" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedCurrentSeason]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  name="ParsedCurrentSeason" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedTicketPrice]"
                                  dataType="numeric"
                                  name="ParsedTicketPrice"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output].ExternalColumns[ParsedOriginalPrice]"
                                  dataType="numeric"
                                  name="ParsedOriginalPrice"
                                  precision="19"
                                  scale="7" />
                              </externalMetadataColumns>
                            </output>
                          </outputs>
                        </component>
                        <component
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS"
                          componentClassID="DTSAdapter.OLEDBDestination.3"
                          contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                          description="OLE DB Destination"
                          name="Stage_Product PMS"
                          usesDispositions="true"
                          version="4">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                              name="CommandTimeout">0</property>
                            <property
                              dataType="System.String"
                              description="Specifies the name of the database object used to open a rowset."
                              name="OpenRowset">[dbo].[Product_Stage]</property>
                            <property
                              dataType="System.String"
                              description="Specifies the variable that contains the name of the database object used to open a rowset."
                              name="OpenRowsetVariable"></property>
                            <property
                              dataType="System.String"
                              description="The SQL command to be executed."
                              name="SqlCommand"
                              UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the column code page to use when code page information is unavailable from the data source."
                              name="DefaultCodePage">1252</property>
                            <property
                              dataType="System.Boolean"
                              description="Forces the use of the DefaultCodePage property value when describing character data."
                              name="AlwaysUseDefaultCodePage">false</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the mode used to access the database."
                              name="AccessMode"
                              typeConverter="AccessMode">3</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepIdentity">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                              name="FastLoadKeepNulls">false</property>
                            <property
                              dataType="System.String"
                              description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                              name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                              name="FastLoadMaxInsertCommitSize">2147483647</property>
                          </properties>
                          <connections>
                            <connection
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Connections[OleDbConnection]"
                              connectionManagerID="{f9082835-573f-4b99-905a-183d8460eeb8}:external"
                              connectionManagerRefId="Project.ConnectionManagers[Management]"
                              description="The OLE DB runtime connection used to access the database."
                              name="OleDbConnection" />
                          </connections>
                          <inputs>
                            <input
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input]"
                              errorOrTruncationOperation="Insert"
                              errorRowDisposition="FailComponent"
                              hasSideEffects="true"
                              name="OLE DB Destination Input">
                              <inputColumns>
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].Columns[ParsedItem]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="15"
                                  cachedName="ParsedItem"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItem]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedItem]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].Columns[ParsedItemCost1]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedItemCost1"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItemCost1]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedItemCost1]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].Columns[ParsedFpMd]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="1"
                                  cachedName="ParsedFpMd"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedFpMd]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedFpMd]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].Columns[ParsedOriginalSeason]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="ParsedOriginalSeason"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedOriginalSeason]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedOriginalSeason]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].Columns[ParsedCurrentSeason]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="ParsedCurrentSeason"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedCurrentSeason]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedCurrentSeason]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].Columns[ParsedTicketPrice]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedTicketPrice"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedTicketPrice]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedTicketPrice]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].Columns[ParsedOriginalPrice]"
                                  cachedDataType="numeric"
                                  cachedName="ParsedOriginalPrice"
                                  cachedPrecision="19"
                                  cachedScale="7"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedOriginalPrice]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[ParsedOriginalPrice]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].Columns[Partner_Id]"
                                  cachedDataType="i4"
                                  cachedName="Partner_Id"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Id]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Partner_Id]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].Columns[Partner_Code]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="4"
                                  cachedName="Partner_Code"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Code]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Partner_Code]" />
                                <inputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].Columns[Product_BKey]"
                                  cachedCodepage="1252"
                                  cachedDataType="str"
                                  cachedLength="17"
                                  cachedName="Product_BKey"
                                  externalMetadataColumnId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[Product_BKey]"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1].Columns[Product_BKey]" />
                              </inputColumns>
                              <externalMetadataColumns
                                isUsed="True">
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItem]"
                                  codePage="1252"
                                  dataType="str"
                                  length="15"
                                  name="ParsedItem" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedItemCost1]"
                                  dataType="numeric"
                                  name="ParsedItemCost1"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedFpMd]"
                                  codePage="1252"
                                  dataType="str"
                                  length="1"
                                  name="ParsedFpMd" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedOriginalSeason]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  name="ParsedOriginalSeason" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedCurrentSeason]"
                                  codePage="1252"
                                  dataType="str"
                                  length="4"
                                  name="ParsedCurrentSeason" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedTicketPrice]"
                                  dataType="numeric"
                                  name="ParsedTicketPrice"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[ParsedOriginalPrice]"
                                  dataType="numeric"
                                  name="ParsedOriginalPrice"
                                  precision="19"
                                  scale="7" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Id]"
                                  dataType="i4"
                                  name="Partner_Id" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[Partner_Code]"
                                  codePage="1252"
                                  dataType="str"
                                  length="2"
                                  name="Partner_Code" />
                                <externalMetadataColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input].ExternalColumns[Product_BKey]"
                                  codePage="1252"
                                  dataType="str"
                                  length="17"
                                  name="Product_BKey" />
                              </externalMetadataColumns>
                            </input>
                          </inputs>
                          <outputs>
                            <output
                              refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Outputs[OLE DB Destination Error Output]"
                              exclusionGroup="1"
                              isErrorOut="true"
                              name="OLE DB Destination Error Output"
                              synchronousInputId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input]">
                              <outputColumns>
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                                  name="ErrorCode"
                                  specialFlags="1" />
                                <outputColumn
                                  refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  dataType="i4"
                                  lineageId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                                  name="ErrorColumn"
                                  specialFlags="2" />
                              </outputColumns>
                              <externalMetadataColumns />
                            </output>
                          </outputs>
                        </component>
                      </components>
                      <paths>
                        <path
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[AddZero]"
                          endId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Inputs[Derived Column Input]"
                          name="AddZero"
                          startId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Outputs[AddZero]" />
                        <path
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[Derived Column Output]"
                          endId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 1]"
                          name="Derived Column Output"
                          startId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode).Outputs[Derived Column Output]" />
                        <path
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[Derived Column Output1]"
                          endId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Inputs[Conditional Split Input]"
                          name="Derived Column Output"
                          startId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Outputs[Derived Column Output]" />
                        <path
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[DoNotAddZero]"
                          endId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Inputs[Union All Input 2]"
                          name="DoNotAddZero"
                          startId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0.Outputs[DoNotAddZero]" />
                        <path
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[Raw File Source Output]"
                          endId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column.Inputs[Derived Column Input]"
                          name="Raw File Source Output"
                          startId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW.Outputs[Raw File Source Output]" />
                        <path
                          refId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[Union All Output 1]"
                          endId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS.Inputs[OLE DB Destination Input]"
                          name="Union All Output 1"
                          startId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items.Outputs[Union All Output 1]" />
                      </paths>
                    </pipeline>
                  </DTS:ObjectData>
                </DTS:Executable>
              </DTS:Executables>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL\Foreach Product File (PR)\Truncate Staging Table"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{066582FC-D3A8-4345-A956-AFDCAA1CBE51}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Truncate Staging Table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
                  SQLTask:SqlStatementSource="TRUNCATE TABLE Product_Stage;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{3C7FA983-91C9-44B0-B647-1B725EECCFE7}"
              DTS:From="Package\ETL\Foreach Product File (PR)\Data_Error False"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL\Foreach Product File (PR)\Check Products" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{3862ED53-AAAE-4AA8-AFD0-58534461FF41}"
              DTS:From="Package\ETL\Foreach Product File (PR)\Archive File"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL\Foreach Product File (PR)\Log File Success" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{E4CB96F4-7897-434A-A0D7-26C11F5CD93D}"
              DTS:From="Package\ETL\Foreach Product File (PR)\Stage"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\ETL\Foreach Product File (PR)\Archive File" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{B317792A-102E-4B8F-94BF-C2816F1676DC}"
              DTS:From="Package\ETL\Foreach Product File (PR)\Truncate Staging Table"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\ETL\Foreach Product File (PR)\Log File Process Starting" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 4]"
              DTS:CreationName=""
              DTS:DTSID="{7F04EC94-E10D-4B00-A6CD-D53FE5B670BA}"
              DTS:From="Package\ETL\Foreach Product File (PR)\Log File Process Starting"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 4"
              DTS:To="Package\ETL\Foreach Product File (PR)\Data_Error False" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 5]"
              DTS:CreationName=""
              DTS:DTSID="{290DBD0C-9759-4CE1-8836-032ED947DDD2}"
              DTS:From="Package\ETL\Foreach Product File (PR)\Log File Success"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 5"
              DTS:To="Package\ETL\Foreach Product File (PR)\Merge Products" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 6]"
              DTS:CreationName=""
              DTS:DTSID="{668D6648-4135-4F1A-A5C0-6E24B2970146}"
              DTS:From="Package\ETL\Foreach Product File (PR)\Merge Products"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 6"
              DTS:To="Package\ETL\Foreach Product File (PR)\Log Merge Complete" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 7]"
              DTS:CreationName=""
              DTS:DTSID="{C7C07995-E088-4E5A-B379-D55B058657D2}"
              DTS:From="Package\ETL\Foreach Product File (PR)\Email and Archive"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 7"
              DTS:To="Package\ETL\Foreach Product File (PR)\Log File Failed" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Has Errors]"
              DTS:CreationName=""
              DTS:DTSID="{193518DB-5B66-4845-9302-2A7F71B07889}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::Data_Error]==TRUE"
              DTS:From="Package\ETL\Foreach Product File (PR)\Check Products"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Has Errors"
              DTS:To="Package\ETL\Foreach Product File (PR)\Email and Archive" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[No Errors]"
              DTS:CreationName=""
              DTS:DTSID="{46DD2EE2-974E-4F8F-A575-32360B6ECBD4}"
              DTS:EvalOp="3"
              DTS:Expression="@[User::Data_Error]==FALSE"
              DTS:From="Package\ETL\Foreach Product File (PR)\Check Products"
              DTS:LogicalAnd="True"
              DTS:ObjectName="No Errors"
              DTS:To="Package\ETL\Foreach Product File (PR)\Stage" />
          </DTS:PrecedenceConstraints>
          <DTS:ForEachVariableMappings>
            <DTS:ForEachVariableMapping
              DTS:CreationName=""
              DTS:DTSID="{380857D9-11AB-4979-8185-2493D5179832}"
              DTS:ObjectName="{380857D9-11AB-4979-8185-2493D5179832}"
              DTS:ValueIndex="0"
              DTS:VariableName="User::File_Name" />
          </DTS:ForEachVariableMappings>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{C60A869F-C485-4855-8D91-7F584FD7D07D}"
          DTS:EvalOp="3"
          DTS:Expression="@Partner_Id == 2"
          DTS:From="Package\ETL\Foreach Product File (PR)"
          DTS:ObjectName="Constraint"
          DTS:To="Package\ETL\ED Merge Products to DW" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{AE243A27-B144-4A69-B625-CCAD40154E25}"
          DTS:EvalOp="3"
          DTS:Expression="@Partner_Id == 1"
          DTS:From="Package\ETL\Foreach Product File (PR)"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\ETL\AP Merge Products to DW" />
      </DTS:PrecedenceConstraints>
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\ETL.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{DF87361A-3657-404A-ACB4-E24456147102}"
          DTS:EventID="171977484"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{111578FE-F6A2-4C2F-843C-BEB18C2683C2}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL.EventHandlers[OnError]\Success False"
              DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:Description="Expression Task"
              DTS:DTSID="{A2F86596-1BB3-438B-B510-E416DDA5B1E2}"
              DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExpressionTask.ExpressionTask, Microsoft.SqlServer.ExpressionTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
              DTS:LocaleID="-1"
              DTS:ObjectName="Success False"
              DTS:TaskContact="Expression Task;Microsoft Corporation; SQL Server 2012; � 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
              <DTS:Variables />
              <DTS:ObjectData>
                <ExpressionTask
                  Expression="@[User::Success]=false" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:EventHandler>
      </DTS:EventHandlers>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Get Partner Codes"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{58f0f24e-d444-43ea-aba7-4458adaf5d73}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Get Partner Codes"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
          SQLTask:SqlStatementSource="Select Partner_Id,SUBSTRING(Partner_Code,1,2) from Partner_LookUp where partner_code = ?"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="0"
            SQLTask:DtsVariableName="User::Partner_Id" />
          <SQLTask:ResultBinding
            SQLTask:ResultName="1"
            SQLTask:DtsVariableName="User::Partner_Code" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::PartnerCode"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Log End"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{db86f41b-546f-4f7d-a5d0-6a4569134b9c}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ExecuteSQLTask.ExecuteSQLTask, Microsoft.SqlServer.SQLTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Log End"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{f9082835-573f-4b99-905a-183d8460eeb8}"
          SQLTask:SqlStatementSource="EXEC dbo.EtlProcessLogInsert&#xA;    @EtlName = 'Product_To_Management'&#xA;   , -- varchar(1000)&#xA;    @EtlFileName = ''&#xA;   , -- varchar(1000)&#xA;    @EtlMessage = '===== Product To Management has finished. =====' -- varchar(1000)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{3CBE464C-37CA-4EA4-9B6E-017340F905D6}"
      DTS:From="Package\ETL"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Log End" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{06B61A29-6FE9-4B9B-8C84-23C941204BD1}"
      DTS:From="Package\Get Partner Codes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\ETL" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="203,42"
          Id="Package\ETL\AP Merge Products to DW"
          TopLeft="355,1129.5" />
        <NodeLayout
          Size="204,42"
          Id="Package\ETL\ED Merge Products to DW"
          TopLeft="67.5000000000002,1130.5" />
        <NodeLayout
          Size="135,42"
          Id="Package\ETL\Foreach Product File (PR)\Archive File"
          TopLeft="262.5,619.5" />
        <NodeLayout
          Size="153,42"
          Id="Package\ETL\Foreach Product File (PR)\Check Products"
          TopLeft="237.5,290.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\ETL\Foreach Product File (PR)\Data_Error False"
          TopLeft="233.5,209.5" />
        <NodeLayout
          Size="165,42"
          Id="Package\ETL\Foreach Product File (PR)\Email and Archive"
          TopLeft="5.50000000000006,465.5" />
        <NodeLayout
          Size="148,42"
          Id="Package\ETL\Foreach Product File (PR)\Log File Failed"
          TopLeft="14.0000000000001,619.5" />
        <NodeLayout
          Size="196,42"
          Id="Package\ETL\Foreach Product File (PR)\Log File Process Starting"
          TopLeft="215,107.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\ETL\Foreach Product File (PR)\Log File Success"
          TopLeft="255,721.5" />
        <NodeLayout
          Size="178,42"
          Id="Package\ETL\Foreach Product File (PR)\Log Merge Complete"
          TopLeft="253,923.5" />
        <NodeLayout
          Size="154,42"
          Id="Package\ETL\Foreach Product File (PR)\Merge Products"
          TopLeft="260,824.5" />
        <NodeLayout
          Size="152,42"
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products"
          TopLeft="18.5,24.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="197,117"
          Size="197,160"
          Id="Package\ETL\Foreach Product File (PR)\Stage"
          TopLeft="233.5,424.5" />
        <NodeLayout
          Size="190,42"
          Id="Package\ETL\Foreach Product File (PR)\Truncate Staging Table"
          TopLeft="218,5.5" />
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint]"
          TopLeft="313.5,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 1]"
          TopLeft="332,661.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 2]"
          TopLeft="331,584.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35"
              Start="0,0"
              End="0,27.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 3]"
          TopLeft="313,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 4]"
          TopLeft="313,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 5]"
          TopLeft="335.5,763.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61"
              Start="0,0"
              End="0,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 6]"
          TopLeft="339.5,866.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Constraint 7]"
          TopLeft="88.0000000000001,507.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,112"
              Start="0,0"
              End="0,104.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,104.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Has Errors]"
          TopLeft="289.833333333333,332.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-201.833333333333,133"
              Start="0,0"
              End="-201.833333333333,125.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.025873221216" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.025873221216"
                    Point2="0,54.025873221216"
                    Point3="-4,54.025873221216" />
                  <mssgle:LineSegment
                    End="-197.833333333333,54.025873221216" />
                  <mssgle:CubicBezierSegment
                    Point1="-197.833333333333,54.025873221216"
                    Point2="-201.833333333333,54.025873221216"
                    Point3="-201.833333333333,58.025873221216" />
                  <mssgle:LineSegment
                    End="-201.833333333333,125.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-133.267897135417,59.025873221216,64.7024609375,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[No Errors]"
          TopLeft="335.083333333333,332.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,92"
              Start="0,0"
              End="0,84.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,84.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-30.17123046875,34.25,60.3424609375,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="560,1023"
          Size="560,1066"
          Id="Package\ETL\Foreach Product File (PR)"
          TopLeft="39.5,5.5" />
        <EdgeLayout
          Id="Package\ETL.PrecedenceConstraints[Constraint]"
          TopLeft="227.5,1071.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-57.9999999999998,59"
              Start="0,0"
              End="-57.9999999999998,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7008547008547" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.7008547008547"
                    Point2="0,23.7008547008547"
                    Point3="-4,23.7008547008547" />
                  <mssgle:LineSegment
                    End="-53.9999999999998,23.7008547008547" />
                  <mssgle:CubicBezierSegment
                    Point1="-53.9999999999998,23.7008547008547"
                    Point2="-57.9999999999998,23.7008547008547"
                    Point3="-57.9999999999998,27.7008547008547" />
                  <mssgle:LineSegment
                    End="-57.9999999999998,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-36.9999999999999,28.7008547008547,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL.PrecedenceConstraints[Constraint 1]"
          TopLeft="411.5,1071.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="45,58"
              Start="0,0"
              End="45,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.2991452991453" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.2991452991453"
                    Point2="0,23.2991452991453"
                    Point3="4,23.2991452991453" />
                  <mssgle:LineSegment
                    End="41,23.2991452991453" />
                  <mssgle:CubicBezierSegment
                    Point1="41,23.2991452991453"
                    Point2="45,23.2991452991453"
                    Point3="45,27.2991452991453" />
                  <mssgle:LineSegment
                    End="45,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="14.5,28.2991452991453,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="604,1229"
          Size="604,1272"
          Id="Package\ETL"
          TopLeft="5.50000000000011,107.5" />
        <NodeLayout
          Size="167,42"
          Id="Package\Get Partner Codes"
          TopLeft="229.5,11.5" />
        <NodeLayout
          Size="119,42"
          Id="Package\Log End"
          TopLeft="247.5,1437.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="307.25,1379.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="310.25,53.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54"
              Start="0,0"
              End="0,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <DtsEventHandler
    design-time-name="Package\ETL.EventHandlers[OnError]">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="NaN,NaN"
          Id="Package\ETL.EventHandlers[OnError]\Success False"
          TopLeft="NaN,NaN" />
      </GraphLayout>
    </LayoutInfo>
  </DtsEventHandler>
  <TaskHost
    design-time-name="Package\ETL\Foreach Product File (PR)\Check Products">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="148,42"
          Id="Package\ETL\Foreach Product File (PR)\Check Products\Products RAW"
          TopLeft="13,311.5" />
        <NodeLayout
          Size="141,42"
          Id="Package\ETL\Foreach Product File (PR)\Check Products\Products File"
          TopLeft="16.5,5.5" />
        <NodeLayout
          Size="163,42"
          Id="Package\ETL\Foreach Product File (PR)\Check Products\Add Line Number"
          TopLeft="5.50000000000001,107.5" />
        <NodeLayout
          Size="132,42"
          Id="Package\ETL\Foreach Product File (PR)\Check Products\Parse Data"
          TopLeft="21,209.5" />
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR)\Check Products.Paths[Output 01]"
          TopLeft="87,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,20.533203125,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR)\Check Products.Paths[Output 0]"
          TopLeft="87,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR)\Check Products.Paths[Flat File Source Output]"
          TopLeft="87,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\ETL\Foreach Product File (PR)\Stage\Stage Products">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Check for 1st Char 0"
          TopLeft="97,187" />
        <NodeLayout
          Size="148,42"
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Products RAW"
          TopLeft="109.5,19.5" />
        <NodeLayout
          Size="156,42"
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Derived Column"
          TopLeft="106,111" />
        <NodeLayout
          Size="221,42"
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Merge with the Regular Items"
          TopLeft="162,464" />
        <NodeLayout
          Size="218,42"
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Add Zero to GTIN(ItemCode)"
          TopLeft="294,290" />
        <NodeLayout
          Size="173,42"
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS"
          TopLeft="183,562" />
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[Derived Column Output1]"
          TopLeft="184.75,153">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[Derived Column Output]"
          TopLeft="403,332">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-95,132"
              Start="0,0"
              End="-95,124.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,74.6307277628032" />
                  <mssgle:CubicBezierSegment
                    Point1="0,74.6307277628032"
                    Point2="0,78.6307277628032"
                    Point3="-4,78.6307277628032" />
                  <mssgle:LineSegment
                    End="-91,78.6307277628032" />
                  <mssgle:CubicBezierSegment
                    Point1="-91,78.6307277628032"
                    Point2="-95,78.6307277628032"
                    Point3="-95,82.6307277628032" />
                  <mssgle:LineSegment
                    End="-95,124.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[AddZero]"
          TopLeft="213.666666666667,229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="189.333333333333,61"
              Start="0,0"
              End="189.333333333333,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7278835386338" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.7278835386338"
                    Point2="0,24.7278835386338"
                    Point3="4,24.7278835386338" />
                  <mssgle:LineSegment
                    End="185.333333333333,24.7278835386338" />
                  <mssgle:CubicBezierSegment
                    Point1="185.333333333333,24.7278835386338"
                    Point2="189.333333333333,24.7278835386338"
                    Point3="189.333333333333,28.7278835386338" />
                  <mssgle:LineSegment
                    End="189.333333333333,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="75.3115690104165,29.7278835386338,38.7101953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[Union All Output 1]"
          TopLeft="271,506">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,56"
              Start="0,0"
              End="0,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[Raw File Source Output]"
          TopLeft="183.75,61.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49.5"
              Start="0,0"
              End="0,42">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL\Foreach Product File (PR)\Stage\Stage Products.Paths[DoNotAddZero]"
          TopLeft="157.333333333333,229">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79.6666666666667,235"
              Start="0,0"
              End="79.6666666666667,227.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,113.759063463032" />
                  <mssgle:CubicBezierSegment
                    Point1="0,113.759063463032"
                    Point2="0,117.759063463032"
                    Point3="4,117.759063463032" />
                  <mssgle:LineSegment
                    End="75.6666666666667,117.759063463032" />
                  <mssgle:CubicBezierSegment
                    Point1="75.6666666666667,117.759063463032"
                    Point2="79.6666666666667,117.759063463032"
                    Point3="79.6666666666667,121.759063463032" />
                  <mssgle:LineSegment
                    End="79.6666666666667,227.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="7.04630208333334,122.759063463032,65.5740625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Check for 1st char zero 0 implemented&#xA;because Apparel send (in their product file)&#xA;the N GTINS with no Zero but their normal &#xA;GTINS with a 0"
          ParentId="Package\ETL\Foreach Product File (PR)\Stage\Stage Products"
          FontInfo="{assembly:Null}"
          Size="242,NaN"
          Id="309ecff5-56fd-4966-91e2-eb7e963a53c5"
          TopLeft="340,103" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\ETL\Foreach Product File (PR)\Stage\Stage Products\Stage_Product PMS">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PrecedenceConstraint
    design-time-name="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[Has Errors]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
  <PrecedenceConstraint
    design-time-name="Package\ETL\Foreach Product File (PR).PrecedenceConstraints[No Errors]">
    <ShowAnnotation>ConstraintName</ShowAnnotation>
  </PrecedenceConstraint>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>